/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.6.9, using .NET Server 3.3.0 template (version 0)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
** </auto-generated>
**
** Copyright (c) 2006-2023 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.8
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.8, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://unified-automation.com/MachineDemoServer/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.8/
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;
using UnifiedAutomation.UaBase;

namespace UnifiedAutomation.MachineDemoServer
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class DataTypes
    {
        /// <summary>
        /// The identifier for the GlassTemperingPlan DataType.
        /// </summary>
        public const uint GlassTemperingPlan = 3003;

    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the Components Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Components = 5001;

        /// <summary>
        /// The identifier for the Heater Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater = 5029;

        /// <summary>
        /// The identifier for the TemperatureCondition Object.
        /// </summary>
        public const uint HeaterType_TemperatureCondition = 5027;

        /// <summary>
        /// The identifier for the LimitState Object.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LimitState = 5028;

        /// <summary>
        /// The identifier for the ShelvingState Object.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState = 5038;

        /// <summary>
        /// The identifier for the Identification Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification = 5032;

        /// <summary>
        /// The identifier for the TemperatureCondition Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition = 5030;

        /// <summary>
        /// The identifier for the LimitState Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState = 5031;

        /// <summary>
        /// The identifier for the ShelvingState Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState = 5039;

        /// <summary>
        /// The identifier for the Stacklight Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Stacklight = 5002;

        /// <summary>
        /// The identifier for the Instruction Object.
        /// </summary>
        public const uint TemperingJobType_Instruction = 5024;

        /// <summary>
        /// The identifier for the Plan Object.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan = 5025;

        /// <summary>
        /// The identifier for the MachineryBuildingBlocks Object.
        /// </summary>
        public const uint GlassTemperingMachineType_MachineryBuildingBlocks = 5015;

        /// <summary>
        /// The identifier for the MachineryItemState Object.
        /// </summary>
        public const uint GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState = 5019;

        /// <summary>
        /// The identifier for the MachineryOperationMode Object.
        /// </summary>
        public const uint GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode = 5017;

        /// <summary>
        /// The identifier for the Production Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Production = 5003;

        /// <summary>
        /// The identifier for the ProductionPlan Object.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_ProductionPlan = 5004;

        /// <summary>
        /// The identifier for the Identification Object.
        /// </summary>
        public const uint MachineDeviceType_Identification = 5026;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint GlassTemperingPlan_Encoding_DefaultBinary = 5021;

        /// <summary>
        /// The identifier for the Default JSON Object.
        /// </summary>
        public const uint GlassTemperingPlan_Encoding_DefaultJson = 5023;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint GlassTemperingPlan_Encoding_DefaultXml = 5022;

        /// <summary>
        /// The identifier for the GlassTemperingMachine Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine = 5007;

        /// <summary>
        /// The identifier for the Components Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components = 5008;

        /// <summary>
        /// The identifier for the Heater Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater = 5033;

        /// <summary>
        /// The identifier for the Identification Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification = 5034;

        /// <summary>
        /// The identifier for the TemperatureCondition Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition = 5035;

        /// <summary>
        /// The identifier for the LimitState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState = 5036;

        /// <summary>
        /// The identifier for the ShelvingState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState = 5040;

        /// <summary>
        /// The identifier for the Stacklight Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight = 5009;

        /// <summary>
        /// The identifier for the GreenLight Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_GreenLight = 5005;

        /// <summary>
        /// The identifier for the Identification Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification = 5037;

        /// <summary>
        /// The identifier for the RedLight Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_RedLight = 5006;

        /// <summary>
        /// The identifier for the ConfigurationRules Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_ConfigurationRules = 5012;

        /// <summary>
        /// The identifier for the Identification Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification = 5013;

        /// <summary>
        /// The identifier for the MachineryBuildingBlocks Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_MachineryBuildingBlocks = 5016;

        /// <summary>
        /// The identifier for the MachineryItemState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState = 5020;

        /// <summary>
        /// The identifier for the MachineryOperationMode Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode = 5018;

        /// <summary>
        /// The identifier for the Production Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production = 5010;

        /// <summary>
        /// The identifier for the ProductionPlan Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_ProductionPlan = 5011;

        /// <summary>
        /// The identifier for the http://unified-automation.com/MachineDemoServer/ Object.
        /// </summary>
        public const uint Namespaces_http___unified_automation_com_MachineDemoServer_ = 5014;

    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the GlassTemperingMachineType ObjectType.
        /// </summary>
        public const uint GlassTemperingMachineType = 1003;

        /// <summary>
        /// The identifier for the TemperingInstructionType ObjectType.
        /// </summary>
        public const uint TemperingInstructionType = 1005;

        /// <summary>
        /// The identifier for the MachineDeviceType ObjectType.
        /// </summary>
        public const uint MachineDeviceType = 1006;

        /// <summary>
        /// The identifier for the HeaterType ObjectType.
        /// </summary>
        public const uint HeaterType = 1009;

        /// <summary>
        /// The identifier for the TemperingJobType ObjectType.
        /// </summary>
        public const uint TemperingJobType = 1004;

    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class Methods
    {
        /// <summary>
        /// The identifier for the Acknowledge Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Acknowledge = 7017;

        /// <summary>
        /// The identifier for the AddComment Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_AddComment = 7018;

        /// <summary>
        /// The identifier for the Confirm Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Confirm = 7068;

        /// <summary>
        /// The identifier for the Disable Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Disable = 7019;

        /// <summary>
        /// The identifier for the Enable Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Enable = 7020;

        /// <summary>
        /// The identifier for the PlaceInService Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService = 7039;

        /// <summary>
        /// The identifier for the PlaceInService2 Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService2 = 7040;

        /// <summary>
        /// The identifier for the RemoveFromService Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService = 7041;

        /// <summary>
        /// The identifier for the RemoveFromService2 Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService2 = 7042;

        /// <summary>
        /// The identifier for the OneShotShelve Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve = 7045;

        /// <summary>
        /// The identifier for the OneShotShelve2 Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2 = 7071;

        /// <summary>
        /// The identifier for the TimedShelve Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve = 7046;

        /// <summary>
        /// The identifier for the Unshelve Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve = 7047;

        /// <summary>
        /// The identifier for the Unshelve2 Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2 = 7074;

        /// <summary>
        /// The identifier for the Silence Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Silence = 7048;

        /// <summary>
        /// The identifier for the Suppress Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress = 7049;

        /// <summary>
        /// The identifier for the Suppress2 Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress2 = 7050;

        /// <summary>
        /// The identifier for the Unsuppress Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress = 7051;

        /// <summary>
        /// The identifier for the Unsuppress2 Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress2 = 7052;

        /// <summary>
        /// The identifier for the Process Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Process = 7077;

        /// <summary>
        /// The identifier for the ChangePositionInList Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_ChangePositionInList = 7001;

        /// <summary>
        /// The identifier for the DeleteJob Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_DeleteJob = 7002;

        /// <summary>
        /// The identifier for the InsertJob Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_InsertJob = 7003;

        /// <summary>
        /// The identifier for the Setup Method.
        /// </summary>
        public const uint GlassTemperingMachineType_Setup = 7076;

        /// <summary>
        /// The identifier for the Acknowledge Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Acknowledge = 7013;

        /// <summary>
        /// The identifier for the AddComment Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_AddComment = 7014;

        /// <summary>
        /// The identifier for the Confirm Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Confirm = 7067;

        /// <summary>
        /// The identifier for the Disable Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Disable = 7015;

        /// <summary>
        /// The identifier for the Enable Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Enable = 7016;

        /// <summary>
        /// The identifier for the PlaceInService Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_PlaceInService = 7025;

        /// <summary>
        /// The identifier for the PlaceInService2 Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_PlaceInService2 = 7026;

        /// <summary>
        /// The identifier for the RemoveFromService Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_RemoveFromService = 7027;

        /// <summary>
        /// The identifier for the RemoveFromService2 Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_RemoveFromService2 = 7028;

        /// <summary>
        /// The identifier for the OneShotShelve Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_OneShotShelve = 7031;

        /// <summary>
        /// The identifier for the OneShotShelve2 Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_OneShotShelve2 = 7070;

        /// <summary>
        /// The identifier for the TimedShelve Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_TimedShelve = 7032;

        /// <summary>
        /// The identifier for the Unshelve Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_Unshelve = 7033;

        /// <summary>
        /// The identifier for the Unshelve2 Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_Unshelve2 = 7073;

        /// <summary>
        /// The identifier for the Silence Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Silence = 7034;

        /// <summary>
        /// The identifier for the Suppress Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Suppress = 7035;

        /// <summary>
        /// The identifier for the Suppress2 Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Suppress2 = 7036;

        /// <summary>
        /// The identifier for the Unsuppress Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Unsuppress = 7037;

        /// <summary>
        /// The identifier for the Unsuppress2 Method.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Unsuppress2 = 7038;

        /// <summary>
        /// The identifier for the Close Method.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Close = 7004;

        /// <summary>
        /// The identifier for the GetPosition Method.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_GetPosition = 7005;

        /// <summary>
        /// The identifier for the Open Method.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Open = 7006;

        /// <summary>
        /// The identifier for the Read Method.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Read = 7007;

        /// <summary>
        /// The identifier for the SetPosition Method.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_SetPosition = 7011;

        /// <summary>
        /// The identifier for the Write Method.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Write = 7012;

        /// <summary>
        /// The identifier for the Acknowledge Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Acknowledge = 7021;

        /// <summary>
        /// The identifier for the AddComment Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AddComment = 7022;

        /// <summary>
        /// The identifier for the Confirm Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Confirm = 7069;

        /// <summary>
        /// The identifier for the Disable Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Disable = 7023;

        /// <summary>
        /// The identifier for the Enable Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Enable = 7024;

        /// <summary>
        /// The identifier for the PlaceInService Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService = 7053;

        /// <summary>
        /// The identifier for the PlaceInService2 Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService2 = 7054;

        /// <summary>
        /// The identifier for the RemoveFromService Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService = 7055;

        /// <summary>
        /// The identifier for the RemoveFromService2 Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService2 = 7056;

        /// <summary>
        /// The identifier for the OneShotShelve Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve = 7059;

        /// <summary>
        /// The identifier for the OneShotShelve2 Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2 = 7072;

        /// <summary>
        /// The identifier for the TimedShelve Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve = 7060;

        /// <summary>
        /// The identifier for the Unshelve Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve = 7061;

        /// <summary>
        /// The identifier for the Unshelve2 Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2 = 7075;

        /// <summary>
        /// The identifier for the Silence Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Silence = 7062;

        /// <summary>
        /// The identifier for the Suppress Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress = 7063;

        /// <summary>
        /// The identifier for the Suppress2 Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress2 = 7064;

        /// <summary>
        /// The identifier for the Unsuppress Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress = 7065;

        /// <summary>
        /// The identifier for the Unsuppress2 Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress2 = 7066;

        /// <summary>
        /// The identifier for the Process Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Process = 7030;

        /// <summary>
        /// The identifier for the ChangePositionInList Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_ChangePositionInList = 7008;

        /// <summary>
        /// The identifier for the DeleteJob Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_DeleteJob = 7009;

        /// <summary>
        /// The identifier for the InsertJob Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_InsertJob = 7010;

        /// <summary>
        /// The identifier for the Setup Method.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Setup = 7029;

    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTyped in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ReferenceTypes
    {
        /// <summary>
        /// The identifier for the HasActiveJob ReferenceType.
        /// </summary>
        public const uint HasActiveJob = 4003;

    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the MachineDemoServer Variable.
        /// </summary>
        public const uint OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema = 6046;

        /// <summary>
        /// The identifier for the GlassTemperingPlan Variable.
        /// </summary>
        public const uint OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema_GlassTemperingPlan = 6050;

        /// <summary>
        /// The identifier for the NamespaceUri Variable.
        /// </summary>
        public const uint OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema_NamespaceUri = 6047;

        /// <summary>
        /// The identifier for the MachineDemoServer Variable.
        /// </summary>
        public const uint XmlSchema_TypeSystem_MachineDemoServer_XmlSchema = 6048;

        /// <summary>
        /// The identifier for the GlassTemperingPlan Variable.
        /// </summary>
        public const uint XmlSchema_TypeSystem_MachineDemoServer_XmlSchema_GlassTemperingPlan = 6051;

        /// <summary>
        /// The identifier for the NamespaceUri Variable.
        /// </summary>
        public const uint XmlSchema_TypeSystem_MachineDemoServer_XmlSchema_NamespaceUri = 6049;

        /// <summary>
        /// The identifier for the AssetId Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_AssetId = 6193;

        /// <summary>
        /// The identifier for the DeviceClass Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_DeviceClass = 6194;

        /// <summary>
        /// The identifier for the DeviceRevision Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_DeviceRevision = 6195;

        /// <summary>
        /// The identifier for the HardwareRevision Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_HardwareRevision = 6196;

        /// <summary>
        /// The identifier for the Manufacturer Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_Manufacturer = 6146;

        /// <summary>
        /// The identifier for the ManufacturerUri Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_ManufacturerUri = 6197;

        /// <summary>
        /// The identifier for the Model Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_Model = 6198;

        /// <summary>
        /// The identifier for the ProductInstanceUri Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_ProductInstanceUri = 6199;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_SerialNumber = 6147;

        /// <summary>
        /// The identifier for the YearOfConstruction Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Identification_YearOfConstruction = 6200;

        /// <summary>
        /// The identifier for the Temperature Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Temperature = 6111;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Temperature_EngineeringUnits = 6112;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_Temperature_EURange = 6113;

        /// <summary>
        /// The identifier for the AckedState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_AckedState = 6114;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_AckedState_Id = 6115;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Acknowledge_InputArguments = 6116;

        /// <summary>
        /// The identifier for the ActiveState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ActiveState = 6117;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ActiveState_Id = 6118;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_AddComment_InputArguments = 6119;

        /// <summary>
        /// The identifier for the AudibleEnabled Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_AudibleEnabled = 6295;

        /// <summary>
        /// The identifier for the BranchId Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_BranchId = 6120;

        /// <summary>
        /// The identifier for the ClientUserId Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ClientUserId = 6121;

        /// <summary>
        /// The identifier for the Comment Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Comment = 6122;

        /// <summary>
        /// The identifier for the SourceTimestamp Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Comment_SourceTimestamp = 6123;

        /// <summary>
        /// The identifier for the ConditionClassId Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionClassId = 6124;

        /// <summary>
        /// The identifier for the ConditionClassName Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionClassName = 6125;

        /// <summary>
        /// The identifier for the ConditionName Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionName = 6126;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Confirm_InputArguments = 6292;

        /// <summary>
        /// The identifier for the ConfirmedState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConfirmedState = 6287;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConfirmedState_Id = 6288;

        /// <summary>
        /// The identifier for the EnabledState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_EnabledState = 6127;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_EnabledState_Id = 6128;

        /// <summary>
        /// The identifier for the EventId Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_EventId = 6129;

        /// <summary>
        /// The identifier for the EventType Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_EventType = 6130;

        /// <summary>
        /// The identifier for the HighLimit Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_HighLimit = 6220;

        /// <summary>
        /// The identifier for the InputNode Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_InputNode = 6131;

        /// <summary>
        /// The identifier for the LastSeverity Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_LastSeverity = 6132;

        /// <summary>
        /// The identifier for the SourceTimestamp Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_LastSeverity_SourceTimestamp = 6133;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState_CurrentState = 6134;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState_CurrentState_Id = 6135;

        /// <summary>
        /// The identifier for the LowLimit Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_LowLimit = 6221;

        /// <summary>
        /// The identifier for the Message Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Message = 6136;

        /// <summary>
        /// The identifier for the OutOfServiceState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_OutOfServiceState = 6249;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_OutOfServiceState_Id = 6250;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService2_InputArguments = 6251;

        /// <summary>
        /// The identifier for the Quality Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Quality = 6137;

        /// <summary>
        /// The identifier for the SourceTimestamp Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Quality_SourceTimestamp = 6138;

        /// <summary>
        /// The identifier for the ReceiveTime Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ReceiveTime = 6139;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService2_InputArguments = 6252;

        /// <summary>
        /// The identifier for the Retain Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Retain = 6140;

        /// <summary>
        /// The identifier for the Severity Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Severity = 6141;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_CurrentState = 6254;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_CurrentState_Id = 6255;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments = 6298;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve_InputArguments = 6256;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2_InputArguments = 6301;

        /// <summary>
        /// The identifier for the UnshelveTime Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_UnshelveTime = 6257;

        /// <summary>
        /// The identifier for the SilenceState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_SilenceState = 6258;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_SilenceState_Id = 6259;

        /// <summary>
        /// The identifier for the SourceName Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_SourceName = 6142;

        /// <summary>
        /// The identifier for the SourceNode Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_SourceNode = 6143;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress2_InputArguments = 6260;

        /// <summary>
        /// The identifier for the SuppressedOrShelved Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedOrShelved = 6144;

        /// <summary>
        /// The identifier for the SuppressedState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedState = 6261;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedState_Id = 6262;

        /// <summary>
        /// The identifier for the Time Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Time = 6145;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress2_InputArguments = 6263;

        /// <summary>
        /// The identifier for the TemperatureSetpoint Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureSetpoint = 6226;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Heater_TemperatureSetpoint_EngineeringUnits = 6227;

        /// <summary>
        /// The identifier for the StacklightMode Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Components_Stacklight_StacklightMode = 6001;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState_CurrentState = 6042;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState_CurrentState_Id = 6043;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode_CurrentState = 6038;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode_CurrentState_Id = 6039;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_ChangePositionInList_InputArguments = 6003;

        /// <summary>
        /// The identifier for the CurrentCountOfJobs Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_CurrentCountOfJobs = 6004;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_DeleteJob_InputArguments = 6005;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_InsertJob_InputArguments = 6006;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_InsertJob_OutputArguments = 6007;

        /// <summary>
        /// The identifier for the JobListIsRecommendation Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_JobListIsRecommendation = 6002;

        /// <summary>
        /// The identifier for the MaxCountOfJobs Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_MaxCountOfJobs = 6008;

        /// <summary>
        /// The identifier for the NodeVersion Variable.
        /// </summary>
        public const uint GlassTemperingMachineType_Production_ProductionPlan_NodeVersion = 6036;

        /// <summary>
        /// The identifier for the LoadedPlan Variable.
        /// </summary>
        public const uint TemperingInstructionType_LoadedPlan = 6053;

        /// <summary>
        /// The identifier for the Temperature Variable.
        /// </summary>
        public const uint HeaterType_Temperature = 6076;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint HeaterType_Temperature_EngineeringUnits = 6077;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint HeaterType_Temperature_EURange = 6078;

        /// <summary>
        /// The identifier for the AckedState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_AckedState = 6087;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_AckedState_Id = 6088;

        /// <summary>
        /// The identifier for the TransitionTime Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_AckedState_TransitionTime = 6281;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Acknowledge_InputArguments = 6089;

        /// <summary>
        /// The identifier for the ActiveState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ActiveState = 6079;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ActiveState_Id = 6080;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_AddComment_InputArguments = 6090;

        /// <summary>
        /// The identifier for the AudibleEnabled Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_AudibleEnabled = 6294;

        /// <summary>
        /// The identifier for the BranchId Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_BranchId = 6091;

        /// <summary>
        /// The identifier for the ClientUserId Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ClientUserId = 6092;

        /// <summary>
        /// The identifier for the Comment Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Comment = 6093;

        /// <summary>
        /// The identifier for the SourceTimestamp Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Comment_SourceTimestamp = 6094;

        /// <summary>
        /// The identifier for the ConditionClassId Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ConditionClassId = 6095;

        /// <summary>
        /// The identifier for the ConditionClassName Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ConditionClassName = 6096;

        /// <summary>
        /// The identifier for the ConditionName Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ConditionName = 6097;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Confirm_InputArguments = 6291;

        /// <summary>
        /// The identifier for the ConfirmedState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ConfirmedState = 6285;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ConfirmedState_Id = 6286;

        /// <summary>
        /// The identifier for the EnabledState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_EnabledState = 6083;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_EnabledState_Id = 6084;

        /// <summary>
        /// The identifier for the EventId Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_EventId = 6103;

        /// <summary>
        /// The identifier for the EventType Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_EventType = 6104;

        /// <summary>
        /// The identifier for the HighLimit Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_HighLimit = 6218;

        /// <summary>
        /// The identifier for the InputNode Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_InputNode = 6085;

        /// <summary>
        /// The identifier for the LastSeverity Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LastSeverity = 6098;

        /// <summary>
        /// The identifier for the SourceTimestamp Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LastSeverity_SourceTimestamp = 6099;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LimitState_CurrentState = 6081;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LimitState_CurrentState_Id = 6082;

        /// <summary>
        /// The identifier for the LastTransition Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LimitState_LastTransition = 6282;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LimitState_LastTransition_Id = 6283;

        /// <summary>
        /// The identifier for the TransitionTime Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LimitState_LastTransition_TransitionTime = 6284;

        /// <summary>
        /// The identifier for the LowLimit Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_LowLimit = 6219;

        /// <summary>
        /// The identifier for the Message Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Message = 6105;

        /// <summary>
        /// The identifier for the OutOfServiceState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_OutOfServiceState = 6232;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_OutOfServiceState_Id = 6233;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_PlaceInService2_InputArguments = 6234;

        /// <summary>
        /// The identifier for the Quality Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Quality = 6100;

        /// <summary>
        /// The identifier for the SourceTimestamp Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Quality_SourceTimestamp = 6101;

        /// <summary>
        /// The identifier for the ReceiveTime Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ReceiveTime = 6106;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_RemoveFromService2_InputArguments = 6235;

        /// <summary>
        /// The identifier for the Retain Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Retain = 6102;

        /// <summary>
        /// The identifier for the Severity Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Severity = 6107;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_CurrentState = 6237;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_CurrentState_Id = 6238;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments = 6297;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_TimedShelve_InputArguments = 6239;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_Unshelve2_InputArguments = 6300;

        /// <summary>
        /// The identifier for the UnshelveTime Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_ShelvingState_UnshelveTime = 6240;

        /// <summary>
        /// The identifier for the SilenceState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_SilenceState = 6241;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_SilenceState_Id = 6242;

        /// <summary>
        /// The identifier for the SourceName Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_SourceName = 6108;

        /// <summary>
        /// The identifier for the SourceNode Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_SourceNode = 6109;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Suppress2_InputArguments = 6243;

        /// <summary>
        /// The identifier for the SuppressedOrShelved Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_SuppressedOrShelved = 6086;

        /// <summary>
        /// The identifier for the SuppressedState Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_SuppressedState = 6244;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_SuppressedState_Id = 6245;

        /// <summary>
        /// The identifier for the Time Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Time = 6110;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_TemperatureCondition_Unsuppress2_InputArguments = 6246;

        /// <summary>
        /// The identifier for the TemperatureSetpoint Variable.
        /// </summary>
        public const uint HeaterType_TemperatureSetpoint = 6224;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint HeaterType_TemperatureSetpoint_EngineeringUnits = 6225;

        /// <summary>
        /// The identifier for the AssetId Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_AssetId = 6185;

        /// <summary>
        /// The identifier for the DeviceClass Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_DeviceClass = 6186;

        /// <summary>
        /// The identifier for the DeviceRevision Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_DeviceRevision = 6192;

        /// <summary>
        /// The identifier for the HardwareRevision Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_HardwareRevision = 6187;

        /// <summary>
        /// The identifier for the Manufacturer Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_Manufacturer = 6074;

        /// <summary>
        /// The identifier for the ManufacturerUri Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_ManufacturerUri = 6188;

        /// <summary>
        /// The identifier for the Model Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_Model = 6189;

        /// <summary>
        /// The identifier for the ProductInstanceUri Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_ProductInstanceUri = 6190;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_SerialNumber = 6075;

        /// <summary>
        /// The identifier for the YearOfConstruction Variable.
        /// </summary>
        public const uint MachineDeviceType_Identification_YearOfConstruction = 6191;

        /// <summary>
        /// The identifier for the LoadedPlan Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_LoadedPlan = 6052;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Close_InputArguments = 6060;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_GetPosition_InputArguments = 6061;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_GetPosition_OutputArguments = 6062;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Open_InputArguments = 6063;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Open_OutputArguments = 6064;

        /// <summary>
        /// The identifier for the OpenCount Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_OpenCount = 6065;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Read_InputArguments = 6066;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Read_OutputArguments = 6067;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_SetPosition_InputArguments = 6068;

        /// <summary>
        /// The identifier for the Size Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Size = 6069;

        /// <summary>
        /// The identifier for the UserWritable Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_UserWritable = 6070;

        /// <summary>
        /// The identifier for the Writable Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Writable = 6071;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_Plan_Write_InputArguments = 6072;

        /// <summary>
        /// The identifier for the PlanFileFormat Variable.
        /// </summary>
        public const uint TemperingJobType_Instruction_PlanFileFormat = 6073;

        /// <summary>
        /// The identifier for the AssetId Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_AssetId = 6201;

        /// <summary>
        /// The identifier for the DeviceClass Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_DeviceClass = 6202;

        /// <summary>
        /// The identifier for the DeviceRevision Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_DeviceRevision = 6203;

        /// <summary>
        /// The identifier for the HardwareRevision Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_HardwareRevision = 6204;

        /// <summary>
        /// The identifier for the Manufacturer Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_Manufacturer = 6148;

        /// <summary>
        /// The identifier for the ManufacturerUri Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_ManufacturerUri = 6205;

        /// <summary>
        /// The identifier for the Model Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_Model = 6206;

        /// <summary>
        /// The identifier for the ProductInstanceUri Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_ProductInstanceUri = 6207;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_SerialNumber = 6149;

        /// <summary>
        /// The identifier for the YearOfConstruction Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Identification_YearOfConstruction = 6208;

        /// <summary>
        /// The identifier for the Temperature Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Temperature = 6150;

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Temperature_EngineeringUnits = 6151;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_Temperature_EURange = 6152;

        /// <summary>
        /// The identifier for the AckedState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AckedState = 6153;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AckedState_Id = 6154;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Acknowledge_InputArguments = 6155;

        /// <summary>
        /// The identifier for the ActiveState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ActiveState = 6156;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ActiveState_Id = 6157;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AddComment_InputArguments = 6158;

        /// <summary>
        /// The identifier for the AudibleEnabled Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AudibleEnabled = 6296;

        /// <summary>
        /// The identifier for the BranchId Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_BranchId = 6159;

        /// <summary>
        /// The identifier for the ClientUserId Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ClientUserId = 6160;

        /// <summary>
        /// The identifier for the Comment Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Comment = 6161;

        /// <summary>
        /// The identifier for the SourceTimestamp Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Comment_SourceTimestamp = 6162;

        /// <summary>
        /// The identifier for the ConditionClassId Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionClassId = 6163;

        /// <summary>
        /// The identifier for the ConditionClassName Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionClassName = 6164;

        /// <summary>
        /// The identifier for the ConditionName Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionName = 6165;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Confirm_InputArguments = 6293;

        /// <summary>
        /// The identifier for the ConfirmedState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConfirmedState = 6289;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConfirmedState_Id = 6290;

        /// <summary>
        /// The identifier for the EnabledState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EnabledState = 6166;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EnabledState_Id = 6167;

        /// <summary>
        /// The identifier for the EventId Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EventId = 6168;

        /// <summary>
        /// The identifier for the EventType Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EventType = 6169;

        /// <summary>
        /// The identifier for the HighLimit Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_HighLimit = 6222;

        /// <summary>
        /// The identifier for the InputNode Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_InputNode = 6170;

        /// <summary>
        /// The identifier for the LastSeverity Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LastSeverity = 6171;

        /// <summary>
        /// The identifier for the SourceTimestamp Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LastSeverity_SourceTimestamp = 6172;

        /// <summary>
        /// The identifier for the CurrentState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState_CurrentState = 6173;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState_CurrentState_Id = 6174;

        /// <summary>
        /// The identifier for the LowLimit Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LowLimit = 6223;

        /// <summary>
        /// The identifier for the Message Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Message = 6175;

        /// <summary>
        /// The identifier for the OutOfServiceState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_OutOfServiceState = 6266;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_OutOfServiceState_Id = 6267;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService2_InputArguments = 6268;

        /// <summary>
        /// The identifier for the Quality Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Quality = 6176;

        /// <summary>
        /// The identifier for the SourceTimestamp Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Quality_SourceTimestamp = 6177;

        /// <summary>
        /// The identifier for the ReceiveTime Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ReceiveTime = 6178;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService2_InputArguments = 6269;

        /// <summary>
        /// The identifier for the Retain Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Retain = 6179;

        /// <summary>
        /// The identifier for the Severity Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Severity = 6180;

        /// <summary>
        /// The identifier for the CurrentState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_CurrentState = 6271;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_CurrentState_Id = 6272;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments = 6299;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve_InputArguments = 6273;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2_InputArguments = 6302;

        /// <summary>
        /// The identifier for the UnshelveTime Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_UnshelveTime = 6274;

        /// <summary>
        /// The identifier for the SilenceState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SilenceState = 6275;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SilenceState_Id = 6276;

        /// <summary>
        /// The identifier for the SourceName Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SourceName = 6181;

        /// <summary>
        /// The identifier for the SourceNode Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SourceNode = 6182;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress2_InputArguments = 6277;

        /// <summary>
        /// The identifier for the SuppressedOrShelved Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedOrShelved = 6183;

        /// <summary>
        /// The identifier for the SuppressedState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedState = 6278;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedState_Id = 6279;

        /// <summary>
        /// The identifier for the Time Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Time = 6184;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress2_InputArguments = 6280;

        /// <summary>
        /// The identifier for the TemperatureSetpoint Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureSetpoint = 6228;

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Heater_TemperatureSetpoint_EngineeringUnits = 6229;

        /// <summary>
        /// The identifier for the NumberInList Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_NumberInList = 6016;

        /// <summary>
        /// The identifier for the SignalColor Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalColor = 6018;

        /// <summary>
        /// The identifier for the SignalMode Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalMode = 6019;

        /// <summary>
        /// The identifier for the SignalOn Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalOn = 6020;

        /// <summary>
        /// The identifier for the AssetId Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_AssetId = 6211;

        /// <summary>
        /// The identifier for the DeviceClass Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_DeviceClass = 6212;

        /// <summary>
        /// The identifier for the DeviceRevision Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_DeviceRevision = 6213;

        /// <summary>
        /// The identifier for the Manufacturer Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_Manufacturer = 6209;

        /// <summary>
        /// The identifier for the ManufacturerUri Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_ManufacturerUri = 6214;

        /// <summary>
        /// The identifier for the Model Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_Model = 6215;

        /// <summary>
        /// The identifier for the ProductInstanceUri Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_ProductInstanceUri = 6216;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_SerialNumber = 6210;

        /// <summary>
        /// The identifier for the YearOfConstruction Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_Identification_YearOfConstruction = 6217;

        /// <summary>
        /// The identifier for the NumberInList Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_RedLight_NumberInList = 6017;

        /// <summary>
        /// The identifier for the SignalColor Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalColor = 6021;

        /// <summary>
        /// The identifier for the SignalMode Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalMode = 6022;

        /// <summary>
        /// The identifier for the SignalOn Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalOn = 6023;

        /// <summary>
        /// The identifier for the StacklightMode Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Components_Stacklight_StacklightMode = 6009;

        /// <summary>
        /// The identifier for the MachineProcessingCoordinateSystem Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_ConfigurationRules_MachineProcessingCoordinateSystem = 6011;

        /// <summary>
        /// The identifier for the AssetId Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_AssetId = 6024;

        /// <summary>
        /// The identifier for the DeviceClass Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_DeviceClass = 6025;

        /// <summary>
        /// The identifier for the LoggedInProfiles Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_LoggedInProfiles = 6026;

        /// <summary>
        /// The identifier for the Manufacturer Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_Manufacturer = 6012;

        /// <summary>
        /// The identifier for the ManufacturerUri Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_ManufacturerUri = 6027;

        /// <summary>
        /// The identifier for the Model Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_Model = 6028;

        /// <summary>
        /// The identifier for the ProductInstanceUri Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_ProductInstanceUri = 6013;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_SerialNumber = 6014;

        /// <summary>
        /// The identifier for the YearOfConstruction Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Identification_YearOfConstruction = 6015;

        /// <summary>
        /// The identifier for the CurrentState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState_CurrentState = 6044;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState_CurrentState_Id = 6045;

        /// <summary>
        /// The identifier for the CurrentState Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode_CurrentState = 6040;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode_CurrentState_Id = 6041;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_ChangePositionInList_InputArguments = 6054;

        /// <summary>
        /// The identifier for the CurrentCountOfJobs Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_CurrentCountOfJobs = 6055;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_DeleteJob_InputArguments = 6056;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_InsertJob_InputArguments = 6057;

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_InsertJob_OutputArguments = 6058;

        /// <summary>
        /// The identifier for the JobListIsRecommendation Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_JobListIsRecommendation = 6010;

        /// <summary>
        /// The identifier for the MaxCountOfJobs Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_MaxCountOfJobs = 6059;

        /// <summary>
        /// The identifier for the NodeVersion Object.
        /// </summary>
        public const uint Machines_GlassTemperingMachine_Production_ProductionPlan_NodeVersion = 6037;

        /// <summary>
        /// The identifier for the IsNamespaceSubset Object.
        /// </summary>
        public const uint Namespaces_http___unified_automation_com_MachineDemoServer__IsNamespaceSubset = 6029;

        /// <summary>
        /// The identifier for the NamespacePublicationDate Object.
        /// </summary>
        public const uint Namespaces_http___unified_automation_com_MachineDemoServer__NamespacePublicationDate = 6030;

        /// <summary>
        /// The identifier for the NamespaceUri Object.
        /// </summary>
        public const uint Namespaces_http___unified_automation_com_MachineDemoServer__NamespaceUri = 6031;

        /// <summary>
        /// The identifier for the NamespaceVersion Object.
        /// </summary>
        public const uint Namespaces_http___unified_automation_com_MachineDemoServer__NamespaceVersion = 6032;

        /// <summary>
        /// The identifier for the StaticNodeIdTypes Object.
        /// </summary>
        public const uint Namespaces_http___unified_automation_com_MachineDemoServer__StaticNodeIdTypes = 6033;

        /// <summary>
        /// The identifier for the StaticNumericNodeIdRange Object.
        /// </summary>
        public const uint Namespaces_http___unified_automation_com_MachineDemoServer__StaticNumericNodeIdRange = 6034;

        /// <summary>
        /// The identifier for the StaticStringNodeIdPattern Object.
        /// </summary>
        public const uint Namespaces_http___unified_automation_com_MachineDemoServer__StaticStringNodeIdPattern = 6035;

    }
    #endregion

    #region VariableTypes Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class VariableTypes
    {
    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all DataTypes in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class DataTypeIds
    {
        /// <summary>
        /// The identifier for the GlassTemperingPlan DataType.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingPlan = new ExpandedNodeId(DataTypes.GlassTemperingPlan, Namespaces.MachineDemoServer);

    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Methods in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class MethodIds
    {
        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Acknowledge Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Acknowledge = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Acknowledge, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_AddComment Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_AddComment = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_AddComment, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Confirm Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Confirm = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Confirm, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Disable Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Disable = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Disable, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Enable Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Enable = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Enable, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService2 Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService2 = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService2 Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService2 = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2 Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2 = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2 Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2 = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Silence Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Silence = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Silence, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress2 Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress2 = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress2 Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress2 = new ExpandedNodeId(Methods.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Process Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Process = new ExpandedNodeId(Methods.GlassTemperingMachineType_Process, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_ChangePositionInList Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_ChangePositionInList = new ExpandedNodeId(Methods.GlassTemperingMachineType_Production_ChangePositionInList, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_DeleteJob Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_DeleteJob = new ExpandedNodeId(Methods.GlassTemperingMachineType_Production_DeleteJob, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_InsertJob Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_InsertJob = new ExpandedNodeId(Methods.GlassTemperingMachineType_Production_InsertJob, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Setup Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Setup = new ExpandedNodeId(Methods.GlassTemperingMachineType_Setup, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Acknowledge Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Acknowledge = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Acknowledge, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_AddComment Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_AddComment = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_AddComment, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Confirm Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Confirm = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Confirm, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Disable Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Disable = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Disable, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Enable Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Enable = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Enable, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_PlaceInService Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_PlaceInService = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_PlaceInService, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_PlaceInService2 Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_PlaceInService2 = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_PlaceInService2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_RemoveFromService Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_RemoveFromService = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_RemoveFromService, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_RemoveFromService2 Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_RemoveFromService2 = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_RemoveFromService2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_OneShotShelve = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_ShelvingState_OneShotShelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_OneShotShelve2 Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_OneShotShelve2 = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_ShelvingState_OneShotShelve2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_TimedShelve = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_ShelvingState_TimedShelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_Unshelve = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_ShelvingState_Unshelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_Unshelve2 Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_Unshelve2 = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_ShelvingState_Unshelve2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Silence Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Silence = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Silence, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Suppress Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Suppress = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Suppress, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Suppress2 Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Suppress2 = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Suppress2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Unsuppress Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Unsuppress = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Unsuppress, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Unsuppress2 Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Unsuppress2 = new ExpandedNodeId(Methods.HeaterType_TemperatureCondition_Unsuppress2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Close Method.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Close = new ExpandedNodeId(Methods.TemperingJobType_Instruction_Plan_Close, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_GetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_GetPosition = new ExpandedNodeId(Methods.TemperingJobType_Instruction_Plan_GetPosition, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Open Method.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Open = new ExpandedNodeId(Methods.TemperingJobType_Instruction_Plan_Open, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Read Method.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Read = new ExpandedNodeId(Methods.TemperingJobType_Instruction_Plan_Read, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_SetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_SetPosition = new ExpandedNodeId(Methods.TemperingJobType_Instruction_Plan_SetPosition, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Write Method.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Write = new ExpandedNodeId(Methods.TemperingJobType_Instruction_Plan_Write, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Acknowledge Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Acknowledge = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Acknowledge, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AddComment Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AddComment = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AddComment, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Confirm Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Confirm = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Confirm, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Disable Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Disable = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Disable, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Enable Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Enable = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Enable, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService2 Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService2 = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService2 Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService2 = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2 Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2 = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2 Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2 = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Silence Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Silence = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Silence, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress2 Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress2 = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress2 Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress2 = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress2, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Process Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Process = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Process, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_ChangePositionInList Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_ChangePositionInList = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Production_ChangePositionInList, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_DeleteJob Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_DeleteJob = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Production_DeleteJob, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_InsertJob Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_InsertJob = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Production_InsertJob, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Setup Method.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Setup = new ExpandedNodeId(Methods.Machines_GlassTemperingMachine_Setup, Namespaces.MachineDemoServer);

    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Objects in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components = new ExpandedNodeId(Objects.GlassTemperingMachineType_Components, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater = new ExpandedNodeId(Objects.GlassTemperingMachineType_Components_Heater, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition Object.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition = new ExpandedNodeId(Objects.HeaterType_TemperatureCondition, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LimitState Object.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LimitState = new ExpandedNodeId(Objects.HeaterType_TemperatureCondition_LimitState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState Object.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState = new ExpandedNodeId(Objects.HeaterType_TemperatureCondition_ShelvingState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification = new ExpandedNodeId(Objects.GlassTemperingMachineType_Components_Heater_Identification, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition = new ExpandedNodeId(Objects.GlassTemperingMachineType_Components_Heater_TemperatureCondition, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState = new ExpandedNodeId(Objects.GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState = new ExpandedNodeId(Objects.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Stacklight Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Stacklight = new ExpandedNodeId(Objects.GlassTemperingMachineType_Components_Stacklight, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction Object.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction = new ExpandedNodeId(Objects.TemperingJobType_Instruction, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan Object.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan = new ExpandedNodeId(Objects.TemperingJobType_Instruction_Plan, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_MachineryBuildingBlocks Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_MachineryBuildingBlocks = new ExpandedNodeId(Objects.GlassTemperingMachineType_MachineryBuildingBlocks, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState = new ExpandedNodeId(Objects.GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode = new ExpandedNodeId(Objects.GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production = new ExpandedNodeId(Objects.GlassTemperingMachineType_Production, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_ProductionPlan Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_ProductionPlan = new ExpandedNodeId(Objects.GlassTemperingMachineType_Production_ProductionPlan, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification Object.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification = new ExpandedNodeId(Objects.MachineDeviceType_Identification, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingPlan_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingPlan_Encoding_DefaultBinary = new ExpandedNodeId(Objects.GlassTemperingPlan_Encoding_DefaultBinary, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingPlan_Encoding_DefaultJson Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingPlan_Encoding_DefaultJson = new ExpandedNodeId(Objects.GlassTemperingPlan_Encoding_DefaultJson, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingPlan_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingPlan_Encoding_DefaultXml = new ExpandedNodeId(Objects.GlassTemperingPlan_Encoding_DefaultXml, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Heater, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Heater_Identification, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Stacklight, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_GreenLight Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_GreenLight = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Stacklight_GreenLight, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Stacklight_Identification, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_RedLight Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_RedLight = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Components_Stacklight_RedLight, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_ConfigurationRules Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_ConfigurationRules = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_ConfigurationRules, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Identification, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_MachineryBuildingBlocks Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_MachineryBuildingBlocks = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_MachineryBuildingBlocks, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Production, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_ProductionPlan Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_ProductionPlan = new ExpandedNodeId(Objects.Machines_GlassTemperingMachine_Production_ProductionPlan, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Namespaces_http___unified_automation_com_MachineDemoServer_ Object.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___unified_automation_com_MachineDemoServer_ = new ExpandedNodeId(Objects.Namespaces_http___unified_automation_com_MachineDemoServer_, Namespaces.MachineDemoServer);

    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Objects in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the GlassTemperingMachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType = new ExpandedNodeId(ObjectTypes.GlassTemperingMachineType, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingInstructionType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId TemperingInstructionType = new ExpandedNodeId(ObjectTypes.TemperingInstructionType, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType = new ExpandedNodeId(ObjectTypes.MachineDeviceType, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType = new ExpandedNodeId(ObjectTypes.HeaterType, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType = new ExpandedNodeId(ObjectTypes.TemperingJobType, Namespaces.MachineDemoServer);

    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all ReferenceTypes in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ReferenceTypeIds
    {
        /// <summary>
        /// The identifier for the HasActiveJob ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId HasActiveJob = new ExpandedNodeId(ReferenceTypes.HasActiveJob, Namespaces.MachineDemoServer);

    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Variables in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema = new ExpandedNodeId(Variables.OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema_GlassTemperingPlan Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema_GlassTemperingPlan = new ExpandedNodeId(Variables.OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema_GlassTemperingPlan, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema_NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema_NamespaceUri = new ExpandedNodeId(Variables.OPCBinarySchema_TypeSystem_MachineDemoServer_BinarySchema_NamespaceUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem_MachineDemoServer_XmlSchema Variable.
        /// </summary>
        public static readonly ExpandedNodeId XmlSchema_TypeSystem_MachineDemoServer_XmlSchema = new ExpandedNodeId(Variables.XmlSchema_TypeSystem_MachineDemoServer_XmlSchema, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem_MachineDemoServer_XmlSchema_GlassTemperingPlan Variable.
        /// </summary>
        public static readonly ExpandedNodeId XmlSchema_TypeSystem_MachineDemoServer_XmlSchema_GlassTemperingPlan = new ExpandedNodeId(Variables.XmlSchema_TypeSystem_MachineDemoServer_XmlSchema_GlassTemperingPlan, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem_MachineDemoServer_XmlSchema_NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId XmlSchema_TypeSystem_MachineDemoServer_XmlSchema_NamespaceUri = new ExpandedNodeId(Variables.XmlSchema_TypeSystem_MachineDemoServer_XmlSchema_NamespaceUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_AssetId Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_AssetId = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_AssetId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_DeviceClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_DeviceClass = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_DeviceClass, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_DeviceRevision = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_DeviceRevision, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_HardwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_HardwareRevision = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_HardwareRevision, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_Manufacturer = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_Manufacturer, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_ManufacturerUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_ManufacturerUri = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_ManufacturerUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_Model = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_Model, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_ProductInstanceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_ProductInstanceUri = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_ProductInstanceUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_SerialNumber = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_SerialNumber, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Identification_YearOfConstruction Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Identification_YearOfConstruction = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Identification_YearOfConstruction, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Temperature = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Temperature, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Temperature_EngineeringUnits = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Temperature_EngineeringUnits, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_Temperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_Temperature_EURange = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_Temperature_EURange, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_AckedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_AckedState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_AckedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_AckedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_AckedState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_AckedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Acknowledge_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Acknowledge_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ActiveState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ActiveState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ActiveState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ActiveState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ActiveState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ActiveState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_AddComment_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_AddComment_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_AudibleEnabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_AudibleEnabled = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_AudibleEnabled, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_BranchId Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_BranchId = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_BranchId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ClientUserId Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ClientUserId = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ClientUserId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Comment Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Comment = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Comment, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Comment_SourceTimestamp = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Comment_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionClassId Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionClassId = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionClassId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionClassName Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionClassName = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionClassName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionName Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionName = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConditionName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Confirm_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Confirm_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConfirmedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConfirmedState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConfirmedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConfirmedState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ConfirmedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_EnabledState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_EnabledState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_EnabledState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_EnabledState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_EnabledState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_EnabledState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_EventId Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_EventId = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_EventId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_EventType Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_EventType = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_EventType, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_HighLimit Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_HighLimit = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_HighLimit, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_InputNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_InputNode = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_InputNode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_LastSeverity Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_LastSeverity = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_LastSeverity, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_LastSeverity_SourceTimestamp = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_LastSeverity_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState_CurrentState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState_CurrentState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_LimitState_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_LowLimit Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_LowLimit = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_LowLimit, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Message Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Message = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Message, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_OutOfServiceState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_OutOfServiceState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_OutOfServiceState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_OutOfServiceState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_OutOfServiceState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_OutOfServiceState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService2_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_PlaceInService2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Quality Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Quality = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Quality, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Quality_SourceTimestamp = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Quality_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ReceiveTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ReceiveTime = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ReceiveTime, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService2_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_RemoveFromService2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Retain Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Retain = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Retain, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Severity Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Severity = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Severity, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_CurrentState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_CurrentState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_UnshelveTime = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_ShelvingState_UnshelveTime, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_SilenceState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_SilenceState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_SilenceState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_SilenceState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_SilenceState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_SilenceState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_SourceName Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_SourceName = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_SourceName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_SourceNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_SourceNode = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_SourceNode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress2_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Suppress2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedOrShelved Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedOrShelved = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedOrShelved, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedState = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_SuppressedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Time Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Time = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Time, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress2_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureCondition_Unsuppress2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureSetpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureSetpoint = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureSetpoint, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Heater_TemperatureSetpoint_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Heater_TemperatureSetpoint_EngineeringUnits = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Heater_TemperatureSetpoint_EngineeringUnits, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Components_Stacklight_StacklightMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Components_Stacklight_StacklightMode = new ExpandedNodeId(Variables.GlassTemperingMachineType_Components_Stacklight_StacklightMode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState_CurrentState = new ExpandedNodeId(Variables.GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState_CurrentState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_MachineryBuildingBlocks_MachineryItemState_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode_CurrentState = new ExpandedNodeId(Variables.GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode_CurrentState_Id = new ExpandedNodeId(Variables.GlassTemperingMachineType_MachineryBuildingBlocks_MachineryOperationMode_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_ChangePositionInList_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_ChangePositionInList_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Production_ChangePositionInList_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_CurrentCountOfJobs Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_CurrentCountOfJobs = new ExpandedNodeId(Variables.GlassTemperingMachineType_Production_CurrentCountOfJobs, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_DeleteJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_DeleteJob_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Production_DeleteJob_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_InsertJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_InsertJob_InputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Production_InsertJob_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_InsertJob_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_InsertJob_OutputArguments = new ExpandedNodeId(Variables.GlassTemperingMachineType_Production_InsertJob_OutputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_JobListIsRecommendation Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_JobListIsRecommendation = new ExpandedNodeId(Variables.GlassTemperingMachineType_Production_JobListIsRecommendation, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_MaxCountOfJobs Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_MaxCountOfJobs = new ExpandedNodeId(Variables.GlassTemperingMachineType_Production_MaxCountOfJobs, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the GlassTemperingMachineType_Production_ProductionPlan_NodeVersion Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassTemperingMachineType_Production_ProductionPlan_NodeVersion = new ExpandedNodeId(Variables.GlassTemperingMachineType_Production_ProductionPlan_NodeVersion, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingInstructionType_LoadedPlan Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingInstructionType_LoadedPlan = new ExpandedNodeId(Variables.TemperingInstructionType_LoadedPlan, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_Temperature = new ExpandedNodeId(Variables.HeaterType_Temperature, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_Temperature_EngineeringUnits = new ExpandedNodeId(Variables.HeaterType_Temperature_EngineeringUnits, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_Temperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_Temperature_EURange = new ExpandedNodeId(Variables.HeaterType_Temperature_EURange, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_AckedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_AckedState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_AckedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_AckedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_AckedState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_AckedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_AckedState_TransitionTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_AckedState_TransitionTime = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_AckedState_TransitionTime, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Acknowledge_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Acknowledge_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ActiveState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ActiveState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ActiveState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ActiveState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ActiveState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ActiveState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_AddComment_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_AddComment_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_AudibleEnabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_AudibleEnabled = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_AudibleEnabled, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_BranchId Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_BranchId = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_BranchId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ClientUserId Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ClientUserId = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ClientUserId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Comment Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Comment = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Comment, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Comment_SourceTimestamp = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Comment_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ConditionClassId Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ConditionClassId = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ConditionClassId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ConditionClassName Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ConditionClassName = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ConditionClassName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ConditionName Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ConditionName = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ConditionName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Confirm_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Confirm_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ConfirmedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ConfirmedState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ConfirmedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ConfirmedState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ConfirmedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_EnabledState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_EnabledState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_EnabledState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_EnabledState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_EnabledState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_EnabledState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_EventId Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_EventId = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_EventId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_EventType Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_EventType = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_EventType, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_HighLimit Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_HighLimit = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_HighLimit, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_InputNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_InputNode = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_InputNode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LastSeverity Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LastSeverity = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_LastSeverity, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LastSeverity_SourceTimestamp = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_LastSeverity_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LimitState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LimitState_CurrentState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_LimitState_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LimitState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LimitState_CurrentState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_LimitState_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LimitState_LastTransition Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LimitState_LastTransition = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_LimitState_LastTransition, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LimitState_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LimitState_LastTransition_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_LimitState_LastTransition_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LimitState_LastTransition_TransitionTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LimitState_LastTransition_TransitionTime = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_LimitState_LastTransition_TransitionTime, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_LowLimit Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_LowLimit = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_LowLimit, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Message Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Message = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Message, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_OutOfServiceState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_OutOfServiceState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_OutOfServiceState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_OutOfServiceState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_OutOfServiceState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_OutOfServiceState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_PlaceInService2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_PlaceInService2_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_PlaceInService2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Quality Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Quality = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Quality, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Quality_SourceTimestamp = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Quality_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ReceiveTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ReceiveTime = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ReceiveTime, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_RemoveFromService2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_RemoveFromService2_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_RemoveFromService2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Retain Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Retain = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Retain, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Severity Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Severity = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Severity, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_CurrentState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ShelvingState_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_CurrentState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ShelvingState_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_TimedShelve_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ShelvingState_TimedShelve_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_Unshelve2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_Unshelve2_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ShelvingState_Unshelve2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_ShelvingState_UnshelveTime = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_ShelvingState_UnshelveTime, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_SilenceState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_SilenceState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_SilenceState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_SilenceState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_SilenceState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_SilenceState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_SourceName Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_SourceName = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_SourceName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_SourceNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_SourceNode = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_SourceNode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Suppress2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Suppress2_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Suppress2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_SuppressedOrShelved Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_SuppressedOrShelved = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_SuppressedOrShelved, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_SuppressedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_SuppressedState = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_SuppressedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_SuppressedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_SuppressedState_Id = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_SuppressedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Time Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Time = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Time, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureCondition_Unsuppress2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureCondition_Unsuppress2_InputArguments = new ExpandedNodeId(Variables.HeaterType_TemperatureCondition_Unsuppress2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureSetpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureSetpoint = new ExpandedNodeId(Variables.HeaterType_TemperatureSetpoint, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the HeaterType_TemperatureSetpoint_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_TemperatureSetpoint_EngineeringUnits = new ExpandedNodeId(Variables.HeaterType_TemperatureSetpoint_EngineeringUnits, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_AssetId Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_AssetId = new ExpandedNodeId(Variables.MachineDeviceType_Identification_AssetId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_DeviceClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_DeviceClass = new ExpandedNodeId(Variables.MachineDeviceType_Identification_DeviceClass, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_DeviceRevision = new ExpandedNodeId(Variables.MachineDeviceType_Identification_DeviceRevision, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_HardwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_HardwareRevision = new ExpandedNodeId(Variables.MachineDeviceType_Identification_HardwareRevision, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_Manufacturer = new ExpandedNodeId(Variables.MachineDeviceType_Identification_Manufacturer, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_ManufacturerUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_ManufacturerUri = new ExpandedNodeId(Variables.MachineDeviceType_Identification_ManufacturerUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_Model = new ExpandedNodeId(Variables.MachineDeviceType_Identification_Model, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_ProductInstanceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_ProductInstanceUri = new ExpandedNodeId(Variables.MachineDeviceType_Identification_ProductInstanceUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_SerialNumber = new ExpandedNodeId(Variables.MachineDeviceType_Identification_SerialNumber, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the MachineDeviceType_Identification_YearOfConstruction Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineDeviceType_Identification_YearOfConstruction = new ExpandedNodeId(Variables.MachineDeviceType_Identification_YearOfConstruction, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_LoadedPlan Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_LoadedPlan = new ExpandedNodeId(Variables.TemperingJobType_Instruction_LoadedPlan, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Close_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Close_InputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_Close_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_GetPosition_InputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_GetPosition_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_GetPosition_OutputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_GetPosition_OutputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Open_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Open_InputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_Open_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Open_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Open_OutputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_Open_OutputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_OpenCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_OpenCount = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_OpenCount, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Read_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Read_InputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_Read_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Read_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Read_OutputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_Read_OutputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_SetPosition_InputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_SetPosition_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Size Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Size = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_Size, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_UserWritable Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_UserWritable = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_UserWritable, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Writable Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Writable = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_Writable, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_Plan_Write_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_Plan_Write_InputArguments = new ExpandedNodeId(Variables.TemperingJobType_Instruction_Plan_Write_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the TemperingJobType_Instruction_PlanFileFormat Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperingJobType_Instruction_PlanFileFormat = new ExpandedNodeId(Variables.TemperingJobType_Instruction_PlanFileFormat, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_AssetId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_AssetId = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_AssetId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_DeviceClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_DeviceClass = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_DeviceClass, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_DeviceRevision = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_DeviceRevision, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_HardwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_HardwareRevision = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_HardwareRevision, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_Manufacturer = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_Manufacturer, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_ManufacturerUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_ManufacturerUri = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_ManufacturerUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_Model = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_Model, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_ProductInstanceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_ProductInstanceUri = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_ProductInstanceUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_SerialNumber = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_SerialNumber, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Identification_YearOfConstruction Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Identification_YearOfConstruction = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Identification_YearOfConstruction, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Temperature = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Temperature, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Temperature_EngineeringUnits = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Temperature_EngineeringUnits, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_Temperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_Temperature_EURange = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_Temperature_EURange, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AckedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AckedState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AckedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AckedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AckedState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AckedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Acknowledge_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Acknowledge_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ActiveState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ActiveState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ActiveState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ActiveState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ActiveState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ActiveState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AddComment_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AddComment_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AudibleEnabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AudibleEnabled = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_AudibleEnabled, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_BranchId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_BranchId = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_BranchId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ClientUserId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ClientUserId = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ClientUserId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Comment Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Comment = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Comment, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Comment_SourceTimestamp = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Comment_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionClassId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionClassId = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionClassId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionClassName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionClassName = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionClassName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionName = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConditionName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Confirm_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Confirm_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConfirmedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConfirmedState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConfirmedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConfirmedState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ConfirmedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EnabledState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EnabledState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EnabledState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EnabledState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EnabledState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EnabledState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EventId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EventId = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EventId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EventType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EventType = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_EventType, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_HighLimit Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_HighLimit = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_HighLimit, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_InputNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_InputNode = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_InputNode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LastSeverity Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LastSeverity = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LastSeverity, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LastSeverity_SourceTimestamp = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LastSeverity_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState_CurrentState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState_CurrentState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LimitState_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LowLimit Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LowLimit = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_LowLimit, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Message Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Message = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Message, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_OutOfServiceState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_OutOfServiceState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_OutOfServiceState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_OutOfServiceState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_OutOfServiceState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_OutOfServiceState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService2_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_PlaceInService2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Quality Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Quality = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Quality, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Quality_SourceTimestamp = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Quality_SourceTimestamp, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ReceiveTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ReceiveTime = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ReceiveTime, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService2_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_RemoveFromService2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Retain Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Retain = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Retain, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Severity Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Severity = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Severity, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_CurrentState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_CurrentState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_OneShotShelve2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_TimedShelve_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_Unshelve2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_UnshelveTime = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_ShelvingState_UnshelveTime, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SilenceState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SilenceState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SilenceState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SilenceState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SilenceState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SilenceState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SourceName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SourceName = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SourceName, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SourceNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SourceNode = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SourceNode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress2_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Suppress2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedOrShelved Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedOrShelved = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedOrShelved, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_SuppressedState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Time Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Time = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Time, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress2_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureCondition_Unsuppress2_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureSetpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureSetpoint = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureSetpoint, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Heater_TemperatureSetpoint_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Heater_TemperatureSetpoint_EngineeringUnits = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Heater_TemperatureSetpoint_EngineeringUnits, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_NumberInList Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_NumberInList = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_NumberInList, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalColor Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalColor = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalColor, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalMode = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalMode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalOn Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalOn = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_GreenLight_SignalOn, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_AssetId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_AssetId = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_AssetId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_DeviceClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_DeviceClass = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_DeviceClass, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_DeviceRevision = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_DeviceRevision, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_Manufacturer = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_Manufacturer, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_ManufacturerUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_ManufacturerUri = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_ManufacturerUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_Model = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_Model, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_ProductInstanceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_ProductInstanceUri = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_ProductInstanceUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_SerialNumber = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_SerialNumber, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_Identification_YearOfConstruction Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_Identification_YearOfConstruction = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_Identification_YearOfConstruction, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_RedLight_NumberInList Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_RedLight_NumberInList = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_RedLight_NumberInList, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalColor Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalColor = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalColor, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalMode = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalMode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalOn Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalOn = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_RedLight_SignalOn, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Components_Stacklight_StacklightMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Components_Stacklight_StacklightMode = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Components_Stacklight_StacklightMode, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_ConfigurationRules_MachineProcessingCoordinateSystem Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_ConfigurationRules_MachineProcessingCoordinateSystem = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_ConfigurationRules_MachineProcessingCoordinateSystem, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_AssetId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_AssetId = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_AssetId, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_DeviceClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_DeviceClass = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_DeviceClass, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_LoggedInProfiles Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_LoggedInProfiles = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_LoggedInProfiles, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_Manufacturer = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_Manufacturer, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_ManufacturerUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_ManufacturerUri = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_ManufacturerUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_Model = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_Model, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_ProductInstanceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_ProductInstanceUri = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_ProductInstanceUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_SerialNumber = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_SerialNumber, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Identification_YearOfConstruction Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Identification_YearOfConstruction = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Identification_YearOfConstruction, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState_CurrentState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState_CurrentState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryItemState_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode_CurrentState = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode_CurrentState, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode_CurrentState_Id = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_MachineryBuildingBlocks_MachineryOperationMode_CurrentState_Id, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_ChangePositionInList_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_ChangePositionInList_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Production_ChangePositionInList_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_CurrentCountOfJobs Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_CurrentCountOfJobs = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Production_CurrentCountOfJobs, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_DeleteJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_DeleteJob_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Production_DeleteJob_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_InsertJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_InsertJob_InputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Production_InsertJob_InputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_InsertJob_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_InsertJob_OutputArguments = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Production_InsertJob_OutputArguments, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_JobListIsRecommendation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_JobListIsRecommendation = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Production_JobListIsRecommendation, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_MaxCountOfJobs Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_MaxCountOfJobs = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Production_MaxCountOfJobs, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Machines_GlassTemperingMachine_Production_ProductionPlan_NodeVersion Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_GlassTemperingMachine_Production_ProductionPlan_NodeVersion = new ExpandedNodeId(Variables.Machines_GlassTemperingMachine_Production_ProductionPlan_NodeVersion, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Namespaces_http___unified_automation_com_MachineDemoServer__IsNamespaceSubset Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___unified_automation_com_MachineDemoServer__IsNamespaceSubset = new ExpandedNodeId(Variables.Namespaces_http___unified_automation_com_MachineDemoServer__IsNamespaceSubset, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Namespaces_http___unified_automation_com_MachineDemoServer__NamespacePublicationDate Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___unified_automation_com_MachineDemoServer__NamespacePublicationDate = new ExpandedNodeId(Variables.Namespaces_http___unified_automation_com_MachineDemoServer__NamespacePublicationDate, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Namespaces_http___unified_automation_com_MachineDemoServer__NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___unified_automation_com_MachineDemoServer__NamespaceUri = new ExpandedNodeId(Variables.Namespaces_http___unified_automation_com_MachineDemoServer__NamespaceUri, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Namespaces_http___unified_automation_com_MachineDemoServer__NamespaceVersion Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___unified_automation_com_MachineDemoServer__NamespaceVersion = new ExpandedNodeId(Variables.Namespaces_http___unified_automation_com_MachineDemoServer__NamespaceVersion, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Namespaces_http___unified_automation_com_MachineDemoServer__StaticNodeIdTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___unified_automation_com_MachineDemoServer__StaticNodeIdTypes = new ExpandedNodeId(Variables.Namespaces_http___unified_automation_com_MachineDemoServer__StaticNodeIdTypes, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Namespaces_http___unified_automation_com_MachineDemoServer__StaticNumericNodeIdRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___unified_automation_com_MachineDemoServer__StaticNumericNodeIdRange = new ExpandedNodeId(Variables.Namespaces_http___unified_automation_com_MachineDemoServer__StaticNumericNodeIdRange, Namespaces.MachineDemoServer);

        /// <summary>
        /// The identifier for the Namespaces_http___unified_automation_com_MachineDemoServer__StaticStringNodeIdPattern Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___unified_automation_com_MachineDemoServer__StaticStringNodeIdPattern = new ExpandedNodeId(Variables.Namespaces_http___unified_automation_com_MachineDemoServer__StaticStringNodeIdPattern, Namespaces.MachineDemoServer);

    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all VariableType in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class VariableTypeIds
    {
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model.
    /// </summary>
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the &lt;CPIdentifier&gt; component.
        /// </summary>
        public const string CPIdentifier = "<CPIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;CalibrationValue&gt; component.
        /// </summary>
        public const string CalibrationValue = "<CalibrationValue>";
        /// <summary>
        /// The BrowseName for the &lt;CapacityRange&gt; component.
        /// </summary>
        public const string CapacityRange = "<CapacityRange>";
        /// <summary>
        /// The BrowseName for the &lt;Component&gt; component.
        /// </summary>
        public const string Component = "<Component>";
        /// <summary>
        /// The BrowseName for the &lt;ControlChannel&gt; component.
        /// </summary>
        public const string ControlChannel = "<ControlChannel>";
        /// <summary>
        /// The BrowseName for the &lt;DocumentFileId&gt; component.
        /// </summary>
        public const string DocumentFileId = "<DocumentFileId>";
        /// <summary>
        /// The BrowseName for the &lt;DocumentIdentifier&gt; component.
        /// </summary>
        public const string DocumentIdentifier = "<DocumentIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;GroupIdentifier&gt; component.
        /// </summary>
        public const string GroupIdentifier = "<GroupIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;ImageIdentifier&gt; component.
        /// </summary>
        public const string ImageIdentifier = "<ImageIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;InputMaterial&gt; component.
        /// </summary>
        public const string InputMaterial = "<InputMaterial>";
        /// <summary>
        /// The BrowseName for the &lt;LocalManuals&gt; component.
        /// </summary>
        public const string LocalManuals = "<LocalManuals>";
        /// <summary>
        /// The BrowseName for the &lt;NetworkIdentifier&gt; component.
        /// </summary>
        public const string NetworkIdentifier = "<NetworkIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;ObjectIdentifier&gt; component.
        /// </summary>
        public const string ObjectIdentifier = "<ObjectIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;OutputMaterial&gt; component.
        /// </summary>
        public const string OutputMaterial = "<OutputMaterial>";
        /// <summary>
        /// The BrowseName for the &lt;ParameterIdentifier&gt; component.
        /// </summary>
        public const string ParameterIdentifier = "<ParameterIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;ProfileIdentifier&gt; component.
        /// </summary>
        public const string ProfileIdentifier = "<ProfileIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;ProtocolSupportIdentifier&gt; component.
        /// </summary>
        public const string ProtocolSupportIdentifier = "<ProtocolSupportIdentifier>";
        /// <summary>
        /// The BrowseName for the Abort component.
        /// </summary>
        public const string Abort = "Abort";
        /// <summary>
        /// The BrowseName for the AbortJob component.
        /// </summary>
        public const string AbortJob = "AbortJob";
        /// <summary>
        /// The BrowseName for the Aborted component.
        /// </summary>
        public const string Aborted = "Aborted";
        /// <summary>
        /// The BrowseName for the AbortedToInitializing component.
        /// </summary>
        public const string AbortedToInitializing = "AbortedToInitializing";
        /// <summary>
        /// The BrowseName for the Absorption component.
        /// </summary>
        public const string Absorption = "Absorption";
        /// <summary>
        /// The BrowseName for the AcousticSignalType component.
        /// </summary>
        public const string AcousticSignalType = "AcousticSignalType";
        /// <summary>
        /// The BrowseName for the AcousticSignals component.
        /// </summary>
        public const string AcousticSignals = "AcousticSignals";
        /// <summary>
        /// The BrowseName for the ActualMode component.
        /// </summary>
        public const string ActualMode = "ActualMode";
        /// <summary>
        /// The BrowseName for the AddOnMaterial component.
        /// </summary>
        public const string AddOnMaterial = "AddOnMaterial";
        /// <summary>
        /// The BrowseName for the AllowedEngineeringUnits component.
        /// </summary>
        public const string AllowedEngineeringUnits = "AllowedEngineeringUnits";
        /// <summary>
        /// The BrowseName for the AllowedFileFormats component.
        /// </summary>
        public const string AllowedFileFormats = "AllowedFileFormats";
        /// <summary>
        /// The BrowseName for the AssemblyJobType component.
        /// </summary>
        public const string AssemblyJobType = "AssemblyJobType";
        /// <summary>
        /// The BrowseName for the AssemblyType component.
        /// </summary>
        public const string AssemblyType = "AssemblyType";
        /// <summary>
        /// The BrowseName for the AssetId component.
        /// </summary>
        public const string AssetId = "AssetId";
        /// <summary>
        /// The BrowseName for the AudioSample component.
        /// </summary>
        public const string AudioSample = "AudioSample";
        /// <summary>
        /// The BrowseName for the BaseCalibrationTargetCategoryType component.
        /// </summary>
        public const string BaseCalibrationTargetCategoryType = "BaseCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the BaseLifetimeIndicationType component.
        /// </summary>
        public const string BaseLifetimeIndicationType = "BaseLifetimeIndicationType";
        /// <summary>
        /// The BrowseName for the BaseMaterialType component.
        /// </summary>
        public const string BaseMaterialType = "BaseMaterialType";
        /// <summary>
        /// The BrowseName for the BasicStacklightType component.
        /// </summary>
        public const string BasicStacklightType = "BasicStacklightType";
        /// <summary>
        /// The BrowseName for the BlockType component.
        /// </summary>
        public const string BlockType = "BlockType";
        /// <summary>
        /// The BrowseName for the BreakLock component.
        /// </summary>
        public const string BreakLock = "BreakLock";
        /// <summary>
        /// The BrowseName for the CachedLoadingType component.
        /// </summary>
        public const string CachedLoadingType = "CachedLoadingType";
        /// <summary>
        /// The BrowseName for the CalibrationTargetCategory component.
        /// </summary>
        public const string CalibrationTargetCategory = "CalibrationTargetCategory";
        /// <summary>
        /// The BrowseName for the CalibrationTargetFeatures component.
        /// </summary>
        public const string CalibrationTargetFeatures = "CalibrationTargetFeatures";
        /// <summary>
        /// The BrowseName for the CalibrationTargetType component.
        /// </summary>
        public const string CalibrationTargetType = "CalibrationTargetType";
        /// <summary>
        /// The BrowseName for the CalibrationValueType component.
        /// </summary>
        public const string CalibrationValueType = "CalibrationValueType";
        /// <summary>
        /// The BrowseName for the CapacityRangeType component.
        /// </summary>
        public const string CapacityRangeType = "CapacityRangeType";
        /// <summary>
        /// The BrowseName for the CertificateUri component.
        /// </summary>
        public const string CertificateUri = "CertificateUri";
        /// <summary>
        /// The BrowseName for the ChangeLogReference component.
        /// </summary>
        public const string ChangeLogReference = "ChangeLogReference";
        /// <summary>
        /// The BrowseName for the ChangePositionInList component.
        /// </summary>
        public const string ChangePositionInList = "ChangePositionInList";
        /// <summary>
        /// The BrowseName for the ChannelColor component.
        /// </summary>
        public const string ChannelColor = "ChannelColor";
        /// <summary>
        /// The BrowseName for the CheckFunctionAlarmType component.
        /// </summary>
        public const string CheckFunctionAlarmType = "CheckFunctionAlarmType";
        /// <summary>
        /// The BrowseName for the CoatingClass component.
        /// </summary>
        public const string CoatingClass = "CoatingClass";
        /// <summary>
        /// The BrowseName for the CoatingClassEnumeration component.
        /// </summary>
        public const string CoatingClassEnumeration = "CoatingClassEnumeration";
        /// <summary>
        /// The BrowseName for the CoatingEmessivity component.
        /// </summary>
        public const string CoatingEmessivity = "CoatingEmessivity";
        /// <summary>
        /// The BrowseName for the CoatingSubClass component.
        /// </summary>
        public const string CoatingSubClass = "CoatingSubClass";
        /// <summary>
        /// The BrowseName for the CommunicationErrorEventType component.
        /// </summary>
        public const string CommunicationErrorEventType = "CommunicationErrorEventType";
        /// <summary>
        /// The BrowseName for the ComponentName component.
        /// </summary>
        public const string ComponentName = "ComponentName";
        /// <summary>
        /// The BrowseName for the ComponentType component.
        /// </summary>
        public const string ComponentType = "ComponentType";
        /// <summary>
        /// The BrowseName for the Components component.
        /// </summary>
        public const string Components = "Components";
        /// <summary>
        /// The BrowseName for the ConfigurableObjectType component.
        /// </summary>
        public const string ConfigurableObjectType = "ConfigurableObjectType";
        /// <summary>
        /// The BrowseName for the ConfigurationRules component.
        /// </summary>
        public const string ConfigurationRules = "ConfigurationRules";
        /// <summary>
        /// The BrowseName for the ConfigurationRulesType component.
        /// </summary>
        public const string ConfigurationRulesType = "ConfigurationRulesType";
        /// <summary>
        /// The BrowseName for the Confirm component.
        /// </summary>
        public const string Confirm = "Confirm";
        /// <summary>
        /// The BrowseName for the Confirmation component.
        /// </summary>
        public const string Confirmation = "Confirmation";
        /// <summary>
        /// The BrowseName for the ConfirmationStateMachineType component.
        /// </summary>
        public const string ConfirmationStateMachineType = "ConfirmationStateMachineType";
        /// <summary>
        /// The BrowseName for the ConfirmationTimeout component.
        /// </summary>
        public const string ConfirmationTimeout = "ConfirmationTimeout";
        /// <summary>
        /// The BrowseName for the ConnectionPointType component.
        /// </summary>
        public const string ConnectionPointType = "ConnectionPointType";
        /// <summary>
        /// The BrowseName for the ConnectsTo component.
        /// </summary>
        public const string ConnectsTo = "ConnectsTo";
        /// <summary>
        /// The BrowseName for the ConnectsToParent component.
        /// </summary>
        public const string ConnectsToParent = "ConnectsToParent";
        /// <summary>
        /// The BrowseName for the ControlChannelType component.
        /// </summary>
        public const string ControlChannelType = "ControlChannelType";
        /// <summary>
        /// The BrowseName for the CoordinateSystemEnumeration component.
        /// </summary>
        public const string CoordinateSystemEnumeration = "CoordinateSystemEnumeration";
        /// <summary>
        /// The BrowseName for the CornerProtection component.
        /// </summary>
        public const string CornerProtection = "CornerProtection";
        /// <summary>
        /// The BrowseName for the CurrentCountOfJobs component.
        /// </summary>
        public const string CurrentCountOfJobs = "CurrentCountOfJobs";
        /// <summary>
        /// The BrowseName for the CurrentVersion component.
        /// </summary>
        public const string CurrentVersion = "CurrentVersion";
        /// <summary>
        /// The BrowseName for the CuttingJobType component.
        /// </summary>
        public const string CuttingJobType = "CuttingJobType";
        /// <summary>
        /// The BrowseName for the DeleteJob component.
        /// </summary>
        public const string DeleteJob = "DeleteJob";
        /// <summary>
        /// The BrowseName for the Description component.
        /// </summary>
        public const string Description = "Description";
        /// <summary>
        /// The BrowseName for the DeviceClass component.
        /// </summary>
        public const string DeviceClass = "DeviceClass";
        /// <summary>
        /// The BrowseName for the DeviceFeatures component.
        /// </summary>
        public const string DeviceFeatures = "DeviceFeatures";
        /// <summary>
        /// The BrowseName for the DeviceHealth component.
        /// </summary>
        public const string DeviceHealth = "DeviceHealth";
        /// <summary>
        /// The BrowseName for the DeviceHealthAlarms component.
        /// </summary>
        public const string DeviceHealthAlarms = "DeviceHealthAlarms";
        /// <summary>
        /// The BrowseName for the DeviceHealthDiagnosticAlarmType component.
        /// </summary>
        public const string DeviceHealthDiagnosticAlarmType = "DeviceHealthDiagnosticAlarmType";
        /// <summary>
        /// The BrowseName for the DeviceHealthEnumeration component.
        /// </summary>
        public const string DeviceHealthEnumeration = "DeviceHealthEnumeration";
        /// <summary>
        /// The BrowseName for the DeviceManual component.
        /// </summary>
        public const string DeviceManual = "DeviceManual";
        /// <summary>
        /// The BrowseName for the DeviceRevision component.
        /// </summary>
        public const string DeviceRevision = "DeviceRevision";
        /// <summary>
        /// The BrowseName for the DeviceSet component.
        /// </summary>
        public const string DeviceSet = "DeviceSet";
        /// <summary>
        /// The BrowseName for the DeviceTopology component.
        /// </summary>
        public const string DeviceTopology = "DeviceTopology";
        /// <summary>
        /// The BrowseName for the DeviceType component.
        /// </summary>
        public const string DeviceType = "DeviceType";
        /// <summary>
        /// The BrowseName for the DeviceTypeImage component.
        /// </summary>
        public const string DeviceTypeImage = "DeviceTypeImage";
        /// <summary>
        /// The BrowseName for the DiameterIndicationType component.
        /// </summary>
        public const string DiameterIndicationType = "DiameterIndicationType";
        /// <summary>
        /// The BrowseName for the DirectLoadingType component.
        /// </summary>
        public const string DirectLoadingType = "DirectLoadingType";
        /// <summary>
        /// The BrowseName for the DisplayMode component.
        /// </summary>
        public const string DisplayMode = "DisplayMode";
        /// <summary>
        /// The BrowseName for the Documentation component.
        /// </summary>
        public const string Documentation = "Documentation";
        /// <summary>
        /// The BrowseName for the DocumentationFiles component.
        /// </summary>
        public const string DocumentationFiles = "DocumentationFiles";
        /// <summary>
        /// The BrowseName for the DynamicCalibrationTargetCategoryType component.
        /// </summary>
        public const string DynamicCalibrationTargetCategoryType = "DynamicCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the ElectricalConductivity component.
        /// </summary>
        public const string ElectricalConductivity = "ElectricalConductivity";
        /// <summary>
        /// The BrowseName for the EmergencyButtonPressedEventType component.
        /// </summary>
        public const string EmergencyButtonPressedEventType = "EmergencyButtonPressedEventType";
        /// <summary>
        /// The BrowseName for the EndTime component.
        /// </summary>
        public const string EndTime = "EndTime";
        /// <summary>
        /// The BrowseName for the Ended component.
        /// </summary>
        public const string Ended = "Ended";
        /// <summary>
        /// The BrowseName for the EndedToInitializing component.
        /// </summary>
        public const string EndedToInitializing = "EndedToInitializing";
        /// <summary>
        /// The BrowseName for the Error component.
        /// </summary>
        public const string Error = "Error";
        /// <summary>
        /// The BrowseName for the ErrorMessage component.
        /// </summary>
        public const string ErrorMessage = "ErrorMessage";
        /// <summary>
        /// The BrowseName for the ErrorToIdle component.
        /// </summary>
        public const string ErrorToIdle = "ErrorToIdle";
        /// <summary>
        /// The BrowseName for the Executing component.
        /// </summary>
        public const string Executing = "Executing";
        /// <summary>
        /// The BrowseName for the ExitLock component.
        /// </summary>
        public const string ExitLock = "ExitLock";
        /// <summary>
        /// The BrowseName for the ExternalManuals component.
        /// </summary>
        public const string ExternalManuals = "ExternalManuals";
        /// <summary>
        /// The BrowseName for the FailureAlarmType component.
        /// </summary>
        public const string FailureAlarmType = "FailureAlarmType";
        /// <summary>
        /// The BrowseName for the FallbackVersion component.
        /// </summary>
        public const string FallbackVersion = "FallbackVersion";
        /// <summary>
        /// The BrowseName for the FetchResultDataType component.
        /// </summary>
        public const string FetchResultDataType = "FetchResultDataType";
        /// <summary>
        /// The BrowseName for the FetchTransferResultData component.
        /// </summary>
        public const string FetchTransferResultData = "FetchTransferResultData";
        /// <summary>
        /// The BrowseName for the FileFormatType component.
        /// </summary>
        public const string FileFormatType = "FileFormatType";
        /// <summary>
        /// The BrowseName for the FileSystemLoadingType component.
        /// </summary>
        public const string FileSystemLoadingType = "FileSystemLoadingType";
        /// <summary>
        /// The BrowseName for the FileTransfer component.
        /// </summary>
        public const string FileTransfer = "FileTransfer";
        /// <summary>
        /// The BrowseName for the FillLevel component.
        /// </summary>
        public const string FillLevel = "FillLevel";
        /// <summary>
        /// The BrowseName for the Filling component.
        /// </summary>
        public const string Filling = "Filling";
        /// <summary>
        /// The BrowseName for the FoilType component.
        /// </summary>
        public const string FoilType = "FoilType";
        /// <summary>
        /// The BrowseName for the FromExecutingToExecuting component.
        /// </summary>
        public const string FromExecutingToExecuting = "FromExecutingToExecuting";
        /// <summary>
        /// The BrowseName for the FromExecutingToNotAvailable component.
        /// </summary>
        public const string FromExecutingToNotAvailable = "FromExecutingToNotAvailable";
        /// <summary>
        /// The BrowseName for the FromExecutingToNotExecuting component.
        /// </summary>
        public const string FromExecutingToNotExecuting = "FromExecutingToNotExecuting";
        /// <summary>
        /// The BrowseName for the FromExecutingToOutOfService component.
        /// </summary>
        public const string FromExecutingToOutOfService = "FromExecutingToOutOfService";
        /// <summary>
        /// The BrowseName for the FromMaintenanceToMaintenance component.
        /// </summary>
        public const string FromMaintenanceToMaintenance = "FromMaintenanceToMaintenance";
        /// <summary>
        /// The BrowseName for the FromMaintenanceToNone component.
        /// </summary>
        public const string FromMaintenanceToNone = "FromMaintenanceToNone";
        /// <summary>
        /// The BrowseName for the FromMaintenanceToProcessing component.
        /// </summary>
        public const string FromMaintenanceToProcessing = "FromMaintenanceToProcessing";
        /// <summary>
        /// The BrowseName for the FromMaintenanceToSetup component.
        /// </summary>
        public const string FromMaintenanceToSetup = "FromMaintenanceToSetup";
        /// <summary>
        /// The BrowseName for the FromNoneToMaintenance component.
        /// </summary>
        public const string FromNoneToMaintenance = "FromNoneToMaintenance";
        /// <summary>
        /// The BrowseName for the FromNoneToNone component.
        /// </summary>
        public const string FromNoneToNone = "FromNoneToNone";
        /// <summary>
        /// The BrowseName for the FromNoneToProcessing component.
        /// </summary>
        public const string FromNoneToProcessing = "FromNoneToProcessing";
        /// <summary>
        /// The BrowseName for the FromNoneToSetup component.
        /// </summary>
        public const string FromNoneToSetup = "FromNoneToSetup";
        /// <summary>
        /// The BrowseName for the FromNotAvailableToExecuting component.
        /// </summary>
        public const string FromNotAvailableToExecuting = "FromNotAvailableToExecuting";
        /// <summary>
        /// The BrowseName for the FromNotAvailableToNotAvailable component.
        /// </summary>
        public const string FromNotAvailableToNotAvailable = "FromNotAvailableToNotAvailable";
        /// <summary>
        /// The BrowseName for the FromNotAvailableToNotExecuting component.
        /// </summary>
        public const string FromNotAvailableToNotExecuting = "FromNotAvailableToNotExecuting";
        /// <summary>
        /// The BrowseName for the FromNotAvailableToOutOfService component.
        /// </summary>
        public const string FromNotAvailableToOutOfService = "FromNotAvailableToOutOfService";
        /// <summary>
        /// The BrowseName for the FromNotExecutingToExecuting component.
        /// </summary>
        public const string FromNotExecutingToExecuting = "FromNotExecutingToExecuting";
        /// <summary>
        /// The BrowseName for the FromNotExecutingToNotAvailable component.
        /// </summary>
        public const string FromNotExecutingToNotAvailable = "FromNotExecutingToNotAvailable";
        /// <summary>
        /// The BrowseName for the FromNotExecutingToNotExecuting component.
        /// </summary>
        public const string FromNotExecutingToNotExecuting = "FromNotExecutingToNotExecuting";
        /// <summary>
        /// The BrowseName for the FromNotExecutingToOutOfService component.
        /// </summary>
        public const string FromNotExecutingToOutOfService = "FromNotExecutingToOutOfService";
        /// <summary>
        /// The BrowseName for the FromOutOfServiceToExecuting component.
        /// </summary>
        public const string FromOutOfServiceToExecuting = "FromOutOfServiceToExecuting";
        /// <summary>
        /// The BrowseName for the FromOutOfServiceToNotAvailable component.
        /// </summary>
        public const string FromOutOfServiceToNotAvailable = "FromOutOfServiceToNotAvailable";
        /// <summary>
        /// The BrowseName for the FromOutOfServiceToNotExecuting component.
        /// </summary>
        public const string FromOutOfServiceToNotExecuting = "FromOutOfServiceToNotExecuting";
        /// <summary>
        /// The BrowseName for the FromOutOfServiceToOutOfService component.
        /// </summary>
        public const string FromOutOfServiceToOutOfService = "FromOutOfServiceToOutOfService";
        /// <summary>
        /// The BrowseName for the FromProcessingToMaintenance component.
        /// </summary>
        public const string FromProcessingToMaintenance = "FromProcessingToMaintenance";
        /// <summary>
        /// The BrowseName for the FromProcessingToNone component.
        /// </summary>
        public const string FromProcessingToNone = "FromProcessingToNone";
        /// <summary>
        /// The BrowseName for the FromProcessingToProcessing component.
        /// </summary>
        public const string FromProcessingToProcessing = "FromProcessingToProcessing";
        /// <summary>
        /// The BrowseName for the FromProcessingToSetup component.
        /// </summary>
        public const string FromProcessingToSetup = "FromProcessingToSetup";
        /// <summary>
        /// The BrowseName for the FromSetupToMaintenance component.
        /// </summary>
        public const string FromSetupToMaintenance = "FromSetupToMaintenance";
        /// <summary>
        /// The BrowseName for the FromSetupToNone component.
        /// </summary>
        public const string FromSetupToNone = "FromSetupToNone";
        /// <summary>
        /// The BrowseName for the FromSetupToProcessing component.
        /// </summary>
        public const string FromSetupToProcessing = "FromSetupToProcessing";
        /// <summary>
        /// The BrowseName for the FromSetupToSetup component.
        /// </summary>
        public const string FromSetupToSetup = "FromSetupToSetup";
        /// <summary>
        /// The BrowseName for the FunctionalGroupType component.
        /// </summary>
        public const string FunctionalGroupType = "FunctionalGroupType";
        /// <summary>
        /// The BrowseName for the GasFilling component.
        /// </summary>
        public const string GasFilling = "GasFilling";
        /// <summary>
        /// The BrowseName for the GasMixType component.
        /// </summary>
        public const string GasMixType = "GasMixType";
        /// <summary>
        /// The BrowseName for the Gas_1 component.
        /// </summary>
        public const string Gas_1 = "Gas_1";
        /// <summary>
        /// The BrowseName for the Gas_2 component.
        /// </summary>
        public const string Gas_2 = "Gas_2";
        /// <summary>
        /// The BrowseName for the GetUpdateBehavior component.
        /// </summary>
        public const string GetUpdateBehavior = "GetUpdateBehavior";
        /// <summary>
        /// The BrowseName for the GlassEventType component.
        /// </summary>
        public const string GlassEventType = "GlassEventType";
        /// <summary>
        /// The BrowseName for the GlassMachineIdentificationType component.
        /// </summary>
        public const string GlassMachineIdentificationType = "GlassMachineIdentificationType";
        /// <summary>
        /// The BrowseName for the GlassMachineType component.
        /// </summary>
        public const string GlassMachineType = "GlassMachineType";
        /// <summary>
        /// The BrowseName for the GlassMaterialEventType component.
        /// </summary>
        public const string GlassMaterialEventType = "GlassMaterialEventType";
        /// <summary>
        /// The BrowseName for the GlassTemperingMachine component.
        /// </summary>
        public const string GlassTemperingMachine = "GlassTemperingMachine";
        /// <summary>
        /// The BrowseName for the GlassTemperingMachineType component.
        /// </summary>
        public const string GlassTemperingMachineType = "GlassTemperingMachineType";
        /// <summary>
        /// The BrowseName for the GlassTemperingPlan component.
        /// </summary>
        public const string GlassTemperingPlan = "GlassTemperingPlan";
        /// <summary>
        /// The BrowseName for the GlassType component.
        /// </summary>
        public const string GlassType = "GlassType";
        /// <summary>
        /// The BrowseName for the GreenLight component.
        /// </summary>
        public const string GreenLight = "GreenLight";
        /// <summary>
        /// The BrowseName for the Hardener component.
        /// </summary>
        public const string Hardener = "Hardener";
        /// <summary>
        /// The BrowseName for the HardwareRevision component.
        /// </summary>
        public const string HardwareRevision = "HardwareRevision";
        /// <summary>
        /// The BrowseName for the HasActiveJob component.
        /// </summary>
        public const string HasActiveJob = "HasActiveJob";
        /// <summary>
        /// The BrowseName for the HasReferenceMeasurementInstrument component.
        /// </summary>
        public const string HasReferenceMeasurementInstrument = "HasReferenceMeasurementInstrument";
        /// <summary>
        /// The BrowseName for the HasStatisticComponent component.
        /// </summary>
        public const string HasStatisticComponent = "HasStatisticComponent";
        /// <summary>
        /// The BrowseName for the Hash component.
        /// </summary>
        public const string Hash = "Hash";
        /// <summary>
        /// The BrowseName for the Heater component.
        /// </summary>
        public const string Heater = "Heater";
        /// <summary>
        /// The BrowseName for the HeaterType component.
        /// </summary>
        public const string HeaterType = "HeaterType";
        /// <summary>
        /// The BrowseName for the IAggregateStatisticsType component.
        /// </summary>
        public const string IAggregateStatisticsType = "IAggregateStatisticsType";
        /// <summary>
        /// The BrowseName for the IDeviceHealthType component.
        /// </summary>
        public const string IDeviceHealthType = "IDeviceHealthType";
        /// <summary>
        /// The BrowseName for the IMachineTagNameplateType component.
        /// </summary>
        public const string IMachineTagNameplateType = "IMachineTagNameplateType";
        /// <summary>
        /// The BrowseName for the IMachineVendorNameplateType component.
        /// </summary>
        public const string IMachineVendorNameplateType = "IMachineVendorNameplateType";
        /// <summary>
        /// The BrowseName for the IMachineryItemVendorNameplateType component.
        /// </summary>
        public const string IMachineryItemVendorNameplateType = "IMachineryItemVendorNameplateType";
        /// <summary>
        /// The BrowseName for the IOperationCounterType component.
        /// </summary>
        public const string IOperationCounterType = "IOperationCounterType";
        /// <summary>
        /// The BrowseName for the IRollingStatisticsType component.
        /// </summary>
        public const string IRollingStatisticsType = "IRollingStatisticsType";
        /// <summary>
        /// The BrowseName for the IStatisticsType component.
        /// </summary>
        public const string IStatisticsType = "IStatisticsType";
        /// <summary>
        /// The BrowseName for the ISupportInfoType component.
        /// </summary>
        public const string ISupportInfoType = "ISupportInfoType";
        /// <summary>
        /// The BrowseName for the ITagNameplateType component.
        /// </summary>
        public const string ITagNameplateType = "ITagNameplateType";
        /// <summary>
        /// The BrowseName for the IVendorNameplateType component.
        /// </summary>
        public const string IVendorNameplateType = "IVendorNameplateType";
        /// <summary>
        /// The BrowseName for the Identification component.
        /// </summary>
        public const string Identification = "Identification";
        /// <summary>
        /// The BrowseName for the Identifier component.
        /// </summary>
        public const string Identifier = "Identifier";
        /// <summary>
        /// The BrowseName for the Idle component.
        /// </summary>
        public const string Idle = "Idle";
        /// <summary>
        /// The BrowseName for the IdleToInstalling component.
        /// </summary>
        public const string IdleToInstalling = "IdleToInstalling";
        /// <summary>
        /// The BrowseName for the IdleToPreparing component.
        /// </summary>
        public const string IdleToPreparing = "IdleToPreparing";
        /// <summary>
        /// The BrowseName for the IdleToQueued component.
        /// </summary>
        public const string IdleToQueued = "IdleToQueued";
        /// <summary>
        /// The BrowseName for the ImageSet component.
        /// </summary>
        public const string ImageSet = "ImageSet";
        /// <summary>
        /// The BrowseName for the Indication component.
        /// </summary>
        public const string Indication = "Indication";
        /// <summary>
        /// The BrowseName for the InitLock component.
        /// </summary>
        public const string InitLock = "InitLock";
        /// <summary>
        /// The BrowseName for the InitialOperationDate component.
        /// </summary>
        public const string InitialOperationDate = "InitialOperationDate";
        /// <summary>
        /// The BrowseName for the Initializing component.
        /// </summary>
        public const string Initializing = "Initializing";
        /// <summary>
        /// The BrowseName for the InitializingState component.
        /// </summary>
        public const string InitializingState = "InitializingState";
        /// <summary>
        /// The BrowseName for the InitializingSubStateMachineType component.
        /// </summary>
        public const string InitializingSubStateMachineType = "InitializingSubStateMachineType";
        /// <summary>
        /// The BrowseName for the InitializingToAborted component.
        /// </summary>
        public const string InitializingToAborted = "InitializingToAborted";
        /// <summary>
        /// The BrowseName for the InitializingToRunning component.
        /// </summary>
        public const string InitializingToRunning = "InitializingToRunning";
        /// <summary>
        /// The BrowseName for the InputMaterials component.
        /// </summary>
        public const string InputMaterials = "InputMaterials";
        /// <summary>
        /// The BrowseName for the InsertJob component.
        /// </summary>
        public const string InsertJob = "InsertJob";
        /// <summary>
        /// The BrowseName for the InstallFiles component.
        /// </summary>
        public const string InstallFiles = "InstallFiles";
        /// <summary>
        /// The BrowseName for the InstallSoftwarePackage component.
        /// </summary>
        public const string InstallSoftwarePackage = "InstallSoftwarePackage";
        /// <summary>
        /// The BrowseName for the Installation component.
        /// </summary>
        public const string Installation = "Installation";
        /// <summary>
        /// The BrowseName for the InstallationDelay component.
        /// </summary>
        public const string InstallationDelay = "InstallationDelay";
        /// <summary>
        /// The BrowseName for the InstallationStateMachineType component.
        /// </summary>
        public const string InstallationStateMachineType = "InstallationStateMachineType";
        /// <summary>
        /// The BrowseName for the Installing component.
        /// </summary>
        public const string Installing = "Installing";
        /// <summary>
        /// The BrowseName for the InstallingToError component.
        /// </summary>
        public const string InstallingToError = "InstallingToError";
        /// <summary>
        /// The BrowseName for the InstallingToIdle component.
        /// </summary>
        public const string InstallingToIdle = "InstallingToIdle";
        /// <summary>
        /// The BrowseName for the Instruction component.
        /// </summary>
        public const string Instruction = "Instruction";
        /// <summary>
        /// The BrowseName for the InstructionType component.
        /// </summary>
        public const string InstructionType = "InstructionType";
        /// <summary>
        /// The BrowseName for the Intensity component.
        /// </summary>
        public const string Intensity = "Intensity";
        /// <summary>
        /// The BrowseName for the IntermediateStepEvent component.
        /// </summary>
        public const string IntermediateStepEvent = "IntermediateStepEvent";
        /// <summary>
        /// The BrowseName for the Interrupted component.
        /// </summary>
        public const string Interrupted = "Interrupted";
        /// <summary>
        /// The BrowseName for the InterruptedEventType component.
        /// </summary>
        public const string InterruptedEventType = "InterruptedEventType";
        /// <summary>
        /// The BrowseName for the InterruptedToAborted component.
        /// </summary>
        public const string InterruptedToAborted = "InterruptedToAborted";
        /// <summary>
        /// The BrowseName for the InterruptedToRunning component.
        /// </summary>
        public const string InterruptedToRunning = "InterruptedToRunning";
        /// <summary>
        /// The BrowseName for the IsOnline component.
        /// </summary>
        public const string IsOnline = "IsOnline";
        /// <summary>
        /// The BrowseName for the IsPartOfBase component.
        /// </summary>
        public const string IsPartOfBase = "IsPartOfBase";
        /// <summary>
        /// The BrowseName for the JobGroup component.
        /// </summary>
        public const string JobGroup = "JobGroup";
        /// <summary>
        /// The BrowseName for the JobListIsRecommendation component.
        /// </summary>
        public const string JobListIsRecommendation = "JobListIsRecommendation";
        /// <summary>
        /// The BrowseName for the JobMovedEventType component.
        /// </summary>
        public const string JobMovedEventType = "JobMovedEventType";
        /// <summary>
        /// The BrowseName for the JobdIdentifier component.
        /// </summary>
        public const string JobdIdentifier = "JobdIdentifier";
        /// <summary>
        /// The BrowseName for the LastValidationDate component.
        /// </summary>
        public const string LastValidationDate = "LastValidationDate";
        /// <summary>
        /// The BrowseName for the LengthIndicationType component.
        /// </summary>
        public const string LengthIndicationType = "LengthIndicationType";
        /// <summary>
        /// The BrowseName for the LevelDisplayMode component.
        /// </summary>
        public const string LevelDisplayMode = "LevelDisplayMode";
        /// <summary>
        /// The BrowseName for the LevelPercent component.
        /// </summary>
        public const string LevelPercent = "LevelPercent";
        /// <summary>
        /// The BrowseName for the LifetimeVariableType component.
        /// </summary>
        public const string LifetimeVariableType = "LifetimeVariableType";
        /// <summary>
        /// The BrowseName for the LimitValue component.
        /// </summary>
        public const string LimitValue = "LimitValue";
        /// <summary>
        /// The BrowseName for the LimitedString64 component.
        /// </summary>
        public const string LimitedString64 = "LimitedString64";
        /// <summary>
        /// The BrowseName for the LoadedPlan component.
        /// </summary>
        public const string LoadedPlan = "LoadedPlan";
        /// <summary>
        /// The BrowseName for the Loading component.
        /// </summary>
        public const string Loading = "Loading";
        /// <summary>
        /// The BrowseName for the Location component.
        /// </summary>
        public const string Location = "Location";
        /// <summary>
        /// The BrowseName for the Lock component.
        /// </summary>
        public const string Lock = "Lock";
        /// <summary>
        /// The BrowseName for the Locked component.
        /// </summary>
        public const string Locked = "Locked";
        /// <summary>
        /// The BrowseName for the LockingClient component.
        /// </summary>
        public const string LockingClient = "LockingClient";
        /// <summary>
        /// The BrowseName for the LockingServicesType component.
        /// </summary>
        public const string LockingServicesType = "LockingServicesType";
        /// <summary>
        /// The BrowseName for the LockingUser component.
        /// </summary>
        public const string LockingUser = "LockingUser";
        /// <summary>
        /// The BrowseName for the LoggedInProfiles component.
        /// </summary>
        public const string LoggedInProfiles = "LoggedInProfiles";
        /// <summary>
        /// The BrowseName for the MachineComponentsType component.
        /// </summary>
        public const string MachineComponentsType = "MachineComponentsType";
        /// <summary>
        /// The BrowseName for the MachineDemoServer component.
        /// </summary>
        public const string MachineDemoServer_XmlSchema = "MachineDemoServer";
        /// <summary>
        /// The BrowseName for the MachineDeviceType component.
        /// </summary>
        public const string MachineDeviceType = "MachineDeviceType";
        /// <summary>
        /// The BrowseName for the MachineIdentificationType component.
        /// </summary>
        public const string MachineIdentificationType = "MachineIdentificationType";
        /// <summary>
        /// The BrowseName for the MachineProcessingCoordinateSystem component.
        /// </summary>
        public const string MachineProcessingCoordinateSystem = "MachineProcessingCoordinateSystem";
        /// <summary>
        /// The BrowseName for the MachineryBuildingBlocks component.
        /// </summary>
        public const string MachineryBuildingBlocks = "MachineryBuildingBlocks";
        /// <summary>
        /// The BrowseName for the MachineryComponentIdentificationType component.
        /// </summary>
        public const string MachineryComponentIdentificationType = "MachineryComponentIdentificationType";
        /// <summary>
        /// The BrowseName for the MachineryItemIdentificationType component.
        /// </summary>
        public const string MachineryItemIdentificationType = "MachineryItemIdentificationType";
        /// <summary>
        /// The BrowseName for the MachineryItemState component.
        /// </summary>
        public const string MachineryItemState = "MachineryItemState";
        /// <summary>
        /// The BrowseName for the MachineryItemState_StateMachineType component.
        /// </summary>
        public const string MachineryItemState_StateMachineType = "MachineryItemState_StateMachineType";
        /// <summary>
        /// The BrowseName for the MachineryOperationMode component.
        /// </summary>
        public const string MachineryOperationMode = "MachineryOperationMode";
        /// <summary>
        /// The BrowseName for the MachineryOperationModeStateMachineType component.
        /// </summary>
        public const string MachineryOperationModeStateMachineType = "MachineryOperationModeStateMachineType";
        /// <summary>
        /// The BrowseName for the Machines component.
        /// </summary>
        public const string Machines = "Machines";
        /// <summary>
        /// The BrowseName for the Maintenance component.
        /// </summary>
        public const string Maintenance = "Maintenance";
        /// <summary>
        /// The BrowseName for the MaintenanceManuals component.
        /// </summary>
        public const string MaintenanceManuals = "MaintenanceManuals";
        /// <summary>
        /// The BrowseName for the MaintenanceRequiredAlarmType component.
        /// </summary>
        public const string MaintenanceRequiredAlarmType = "MaintenanceRequiredAlarmType";
        /// <summary>
        /// The BrowseName for the ManualFolderType component.
        /// </summary>
        public const string ManualFolderType = "ManualFolderType";
        /// <summary>
        /// The BrowseName for the Manufacturer component.
        /// </summary>
        public const string Manufacturer = "Manufacturer";
        /// <summary>
        /// The BrowseName for the ManufacturerUri component.
        /// </summary>
        public const string ManufacturerUri = "ManufacturerUri";
        /// <summary>
        /// The BrowseName for the MaterialExitEventType component.
        /// </summary>
        public const string MaterialExitEventType = "MaterialExitEventType";
        /// <summary>
        /// The BrowseName for the MaterialIdentifier component.
        /// </summary>
        public const string MaterialIdentifier = "MaterialIdentifier";
        /// <summary>
        /// The BrowseName for the MaterialMissingEventType component.
        /// </summary>
        public const string MaterialMissingEventType = "MaterialMissingEventType";
        /// <summary>
        /// The BrowseName for the MaterialReceivedEventType component.
        /// </summary>
        public const string MaterialReceivedEventType = "MaterialReceivedEventType";
        /// <summary>
        /// The BrowseName for the MaxCountOfJobs component.
        /// </summary>
        public const string MaxCountOfJobs = "MaxCountOfJobs";
        /// <summary>
        /// The BrowseName for the MaxInactiveLockTime component.
        /// </summary>
        public const string MaxInactiveLockTime = "MaxInactiveLockTime";
        /// <summary>
        /// The BrowseName for the MethodSet component.
        /// </summary>
        public const string MethodSet = "MethodSet";
        /// <summary>
        /// The BrowseName for the MixingRatio component.
        /// </summary>
        public const string MixingRatio = "MixingRatio";
        /// <summary>
        /// The BrowseName for the Model component.
        /// </summary>
        public const string Model = "Model";
        /// <summary>
        /// The BrowseName for the MonthOfConstruction component.
        /// </summary>
        public const string MonthOfConstruction = "MonthOfConstruction";
        /// <summary>
        /// The BrowseName for the MotorTemperatureTooHighEventType component.
        /// </summary>
        public const string MotorTemperatureTooHighEventType = "MotorTemperatureTooHighEventType";
        /// <summary>
        /// The BrowseName for the Name component.
        /// </summary>
        public const string Name = "Name";
        /// <summary>
        /// The BrowseName for the NetworkAddress component.
        /// </summary>
        public const string NetworkAddress = "NetworkAddress";
        /// <summary>
        /// The BrowseName for the NetworkSet component.
        /// </summary>
        public const string NetworkSet = "NetworkSet";
        /// <summary>
        /// The BrowseName for the NetworkType component.
        /// </summary>
        public const string NetworkType = "NetworkType";
        /// <summary>
        /// The BrowseName for the NewPosition component.
        /// </summary>
        public const string NewPosition = "NewPosition";
        /// <summary>
        /// The BrowseName for the NextValidationDate component.
        /// </summary>
        public const string NextValidationDate = "NextValidationDate";
        /// <summary>
        /// The BrowseName for the None component.
        /// </summary>
        public const string None = "None";
        /// <summary>
        /// The BrowseName for the NormalMode component.
        /// </summary>
        public const string NormalMode = "NormalMode";
        /// <summary>
        /// The BrowseName for the NotAvailable component.
        /// </summary>
        public const string NotAvailable = "NotAvailable";
        /// <summary>
        /// The BrowseName for the NotExecuting component.
        /// </summary>
        public const string NotExecuting = "NotExecuting";
        /// <summary>
        /// The BrowseName for the NotWaitingForConfirm component.
        /// </summary>
        public const string NotWaitingForConfirm = "NotWaitingForConfirm";
        /// <summary>
        /// The BrowseName for the NotWaitingForConfirmToWaitingForConfirm component.
        /// </summary>
        public const string NotWaitingForConfirmToWaitingForConfirm = "NotWaitingForConfirmToWaitingForConfirm";
        /// <summary>
        /// The BrowseName for the NotWaitingForPowerCycle component.
        /// </summary>
        public const string NotWaitingForPowerCycle = "NotWaitingForPowerCycle";
        /// <summary>
        /// The BrowseName for the NotWaitingForPowerCycleToWaitingForPowerCycle component.
        /// </summary>
        public const string NotWaitingForPowerCycleToWaitingForPowerCycle = "NotWaitingForPowerCycleToWaitingForPowerCycle";
        /// <summary>
        /// The BrowseName for the NumberOfPartsIndicationType component.
        /// </summary>
        public const string NumberOfPartsIndicationType = "NumberOfPartsIndicationType";
        /// <summary>
        /// The BrowseName for the NumberOfUsagesIndicationType component.
        /// </summary>
        public const string NumberOfUsagesIndicationType = "NumberOfUsagesIndicationType";
        /// <summary>
        /// The BrowseName for the OffSpecAlarmType component.
        /// </summary>
        public const string OffSpecAlarmType = "OffSpecAlarmType";
        /// <summary>
        /// The BrowseName for the OneTimeCalibrationTargetCategoryType component.
        /// </summary>
        public const string OneTimeCalibrationTargetCategoryType = "OneTimeCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the OnlineAccess component.
        /// </summary>
        public const string OnlineAccess = "OnlineAccess";
        /// <summary>
        /// The BrowseName for the Opc.Ua.Di component.
        /// </summary>
        public const string OpcUaDi_XmlSchema = "Opc.Ua.Di";
        /// <summary>
        /// The BrowseName for the OpenSecurityFenceType component.
        /// </summary>
        public const string OpenSecurityFenceType = "OpenSecurityFenceType";
        /// <summary>
        /// The BrowseName for the OperationCycleCounter component.
        /// </summary>
        public const string OperationCycleCounter = "OperationCycleCounter";
        /// <summary>
        /// The BrowseName for the OperationDuration component.
        /// </summary>
        public const string OperationDuration = "OperationDuration";
        /// <summary>
        /// The BrowseName for the OperationManuals component.
        /// </summary>
        public const string OperationManuals = "OperationManuals";
        /// <summary>
        /// The BrowseName for the OperationMode component.
        /// </summary>
        public const string OperationMode = "OperationMode";
        /// <summary>
        /// The BrowseName for the OperationalConditions component.
        /// </summary>
        public const string OperationalConditions = "OperationalConditions";
        /// <summary>
        /// The BrowseName for the Orientation component.
        /// </summary>
        public const string Orientation = "Orientation";
        /// <summary>
        /// The BrowseName for the OutOfJobEventType component.
        /// </summary>
        public const string OutOfJobEventType = "OutOfJobEventType";
        /// <summary>
        /// The BrowseName for the OutOfService component.
        /// </summary>
        public const string OutOfService = "OutOfService";
        /// <summary>
        /// The BrowseName for the OutputMaterials component.
        /// </summary>
        public const string OutputMaterials = "OutputMaterials";
        /// <summary>
        /// The BrowseName for the PackageLoadingType component.
        /// </summary>
        public const string PackageLoadingType = "PackageLoadingType";
        /// <summary>
        /// The BrowseName for the PackagingType component.
        /// </summary>
        public const string PackagingType = "PackagingType";
        /// <summary>
        /// The BrowseName for the ParameterResultDataType component.
        /// </summary>
        public const string ParameterResultDataType = "ParameterResultDataType";
        /// <summary>
        /// The BrowseName for the ParameterSet component.
        /// </summary>
        public const string ParameterSet = "ParameterSet";
        /// <summary>
        /// The BrowseName for the Parameters component.
        /// </summary>
        public const string Parameters = "Parameters";
        /// <summary>
        /// The BrowseName for the PatchIdentifiers component.
        /// </summary>
        public const string PatchIdentifiers = "PatchIdentifiers";
        /// <summary>
        /// The BrowseName for the PendingVersion component.
        /// </summary>
        public const string PendingVersion = "PendingVersion";
        /// <summary>
        /// The BrowseName for the PercentComplete component.
        /// </summary>
        public const string PercentComplete = "PercentComplete";
        /// <summary>
        /// The BrowseName for the PerimeterProtection component.
        /// </summary>
        public const string PerimeterProtection = "PerimeterProtection";
        /// <summary>
        /// The BrowseName for the PermittedMode component.
        /// </summary>
        public const string PermittedMode = "PermittedMode";
        /// <summary>
        /// The BrowseName for the Plan component.
        /// </summary>
        public const string Plan = "Plan";
        /// <summary>
        /// The BrowseName for the PlanFileFormat component.
        /// </summary>
        public const string PlanFileFormat = "PlanFileFormat";
        /// <summary>
        /// The BrowseName for the PowerCycle component.
        /// </summary>
        public const string PowerCycle = "PowerCycle";
        /// <summary>
        /// The BrowseName for the PowerCycleStateMachineType component.
        /// </summary>
        public const string PowerCycleStateMachineType = "PowerCycleStateMachineType";
        /// <summary>
        /// The BrowseName for the PowerOnDuration component.
        /// </summary>
        public const string PowerOnDuration = "PowerOnDuration";
        /// <summary>
        /// The BrowseName for the Prepare component.
        /// </summary>
        public const string Prepare = "Prepare";
        /// <summary>
        /// The BrowseName for the PrepareForUpdate component.
        /// </summary>
        public const string PrepareForUpdate = "PrepareForUpdate";
        /// <summary>
        /// The BrowseName for the PrepareForUpdateStateMachineType component.
        /// </summary>
        public const string PrepareForUpdateStateMachineType = "PrepareForUpdateStateMachineType";
        /// <summary>
        /// The BrowseName for the PreparedForUpdate component.
        /// </summary>
        public const string PreparedForUpdate = "PreparedForUpdate";
        /// <summary>
        /// The BrowseName for the PreparedForUpdateToResuming component.
        /// </summary>
        public const string PreparedForUpdateToResuming = "PreparedForUpdateToResuming";
        /// <summary>
        /// The BrowseName for the Preparing component.
        /// </summary>
        public const string Preparing = "Preparing";
        /// <summary>
        /// The BrowseName for the PreparingToIdle component.
        /// </summary>
        public const string PreparingToIdle = "PreparingToIdle";
        /// <summary>
        /// The BrowseName for the PreparingToPreparedForUpdate component.
        /// </summary>
        public const string PreparingToPreparedForUpdate = "PreparingToPreparedForUpdate";
        /// <summary>
        /// The BrowseName for the Process component.
        /// </summary>
        public const string Process = "Process";
        /// <summary>
        /// The BrowseName for the ProcessName component.
        /// </summary>
        public const string ProcessName = "ProcessName";
        /// <summary>
        /// The BrowseName for the ProcessParameterOutOfRangeType component.
        /// </summary>
        public const string ProcessParameterOutOfRangeType = "ProcessParameterOutOfRangeType";
        /// <summary>
        /// The BrowseName for the ProcessStep component.
        /// </summary>
        public const string ProcessStep = "ProcessStep";
        /// <summary>
        /// The BrowseName for the Processing component.
        /// </summary>
        public const string Processing = "Processing";
        /// <summary>
        /// The BrowseName for the ProcessingJobType component.
        /// </summary>
        public const string ProcessingJobType = "ProcessingJobType";
        /// <summary>
        /// The BrowseName for the ProductCode component.
        /// </summary>
        public const string ProductCode = "ProductCode";
        /// <summary>
        /// The BrowseName for the ProductInstanceUri component.
        /// </summary>
        public const string ProductInstanceUri = "ProductInstanceUri";
        /// <summary>
        /// The BrowseName for the Production component.
        /// </summary>
        public const string Production = "Production";
        /// <summary>
        /// The BrowseName for the ProductionJobType component.
        /// </summary>
        public const string ProductionJobType = "ProductionJobType";
        /// <summary>
        /// The BrowseName for the ProductionPlan component.
        /// </summary>
        public const string ProductionPlan = "ProductionPlan";
        /// <summary>
        /// The BrowseName for the ProductionPlanType component.
        /// </summary>
        public const string ProductionPlanType = "ProductionPlanType";
        /// <summary>
        /// The BrowseName for the ProductionStateMachineType component.
        /// </summary>
        public const string ProductionStateMachineType = "ProductionStateMachineType";
        /// <summary>
        /// The BrowseName for the ProductionType component.
        /// </summary>
        public const string ProductionType = "ProductionType";
        /// <summary>
        /// The BrowseName for the ProtocolSupport component.
        /// </summary>
        public const string ProtocolSupport = "ProtocolSupport";
        /// <summary>
        /// The BrowseName for the ProtocolType component.
        /// </summary>
        public const string ProtocolType = "ProtocolType";
        /// <summary>
        /// The BrowseName for the Quality component.
        /// </summary>
        public const string Quality = "Quality";
        /// <summary>
        /// The BrowseName for the QueueJob component.
        /// </summary>
        public const string QueueJob = "QueueJob";
        /// <summary>
        /// The BrowseName for the Queued component.
        /// </summary>
        public const string Queued = "Queued";
        /// <summary>
        /// The BrowseName for the QueuedToIdle component.
        /// </summary>
        public const string QueuedToIdle = "QueuedToIdle";
        /// <summary>
        /// The BrowseName for the QueuedToReleased component.
        /// </summary>
        public const string QueuedToReleased = "QueuedToReleased";
        /// <summary>
        /// The BrowseName for the RedLight component.
        /// </summary>
        public const string RedLight = "RedLight";
        /// <summary>
        /// The BrowseName for the Reflection component.
        /// </summary>
        public const string Reflection = "Reflection";
        /// <summary>
        /// The BrowseName for the ReleaseDate component.
        /// </summary>
        public const string ReleaseDate = "ReleaseDate";
        /// <summary>
        /// The BrowseName for the ReleaseJob component.
        /// </summary>
        public const string ReleaseJob = "ReleaseJob";
        /// <summary>
        /// The BrowseName for the Released component.
        /// </summary>
        public const string Released = "Released";
        /// <summary>
        /// The BrowseName for the ReleasedToQueued component.
        /// </summary>
        public const string ReleasedToQueued = "ReleasedToQueued";
        /// <summary>
        /// The BrowseName for the RemainingLockTime component.
        /// </summary>
        public const string RemainingLockTime = "RemainingLockTime";
        /// <summary>
        /// The BrowseName for the RenewLock component.
        /// </summary>
        public const string RenewLock = "RenewLock";
        /// <summary>
        /// The BrowseName for the ResetCondition component.
        /// </summary>
        public const string ResetCondition = "ResetCondition";
        /// <summary>
        /// The BrowseName for the ResetStatistics component.
        /// </summary>
        public const string ResetStatistics = "ResetStatistics";
        /// <summary>
        /// The BrowseName for the Resin component.
        /// </summary>
        public const string Resin = "Resin";
        /// <summary>
        /// The BrowseName for the Resolution component.
        /// </summary>
        public const string Resolution = "Resolution";
        /// <summary>
        /// The BrowseName for the Resume component.
        /// </summary>
        public const string Resume = "Resume";
        /// <summary>
        /// The BrowseName for the Resuming component.
        /// </summary>
        public const string Resuming = "Resuming";
        /// <summary>
        /// The BrowseName for the ResumingToIdle component.
        /// </summary>
        public const string ResumingToIdle = "ResumingToIdle";
        /// <summary>
        /// The BrowseName for the ReusableCalibrationTargetCategoryType component.
        /// </summary>
        public const string ReusableCalibrationTargetCategoryType = "ReusableCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the ReusableDeviceCalibrationTargetCategoryType component.
        /// </summary>
        public const string ReusableDeviceCalibrationTargetCategoryType = "ReusableDeviceCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the RevisionCounter component.
        /// </summary>
        public const string RevisionCounter = "RevisionCounter";
        /// <summary>
        /// The BrowseName for the Running component.
        /// </summary>
        public const string Running = "Running";
        /// <summary>
        /// The BrowseName for the RunningToAborted component.
        /// </summary>
        public const string RunningToAborted = "RunningToAborted";
        /// <summary>
        /// The BrowseName for the RunningToEnded component.
        /// </summary>
        public const string RunningToEnded = "RunningToEnded";
        /// <summary>
        /// The BrowseName for the RunningToInterrupted component.
        /// </summary>
        public const string RunningToInterrupted = "RunningToInterrupted";
        /// <summary>
        /// The BrowseName for the RunningToRunning component.
        /// </summary>
        public const string RunningToRunning = "RunningToRunning";
        /// <summary>
        /// The BrowseName for the SealantDepth component.
        /// </summary>
        public const string SealantDepth = "SealantDepth";
        /// <summary>
        /// The BrowseName for the SealingMaterialType component.
        /// </summary>
        public const string SealingMaterialType = "SealingMaterialType";
        /// <summary>
        /// The BrowseName for the SerialNumber component.
        /// </summary>
        public const string SerialNumber = "SerialNumber";
        /// <summary>
        /// The BrowseName for the Setup component.
        /// </summary>
        public const string Setup = "Setup";
        /// <summary>
        /// The BrowseName for the SignalColor component.
        /// </summary>
        public const string SignalColor = "SignalColor";
        /// <summary>
        /// The BrowseName for the SignalMode component.
        /// </summary>
        public const string SignalMode = "SignalMode";
        /// <summary>
        /// The BrowseName for the SignalModeLight component.
        /// </summary>
        public const string SignalModeLight = "SignalModeLight";
        /// <summary>
        /// The BrowseName for the SignalOn component.
        /// </summary>
        public const string SignalOn = "SignalOn";
        /// <summary>
        /// The BrowseName for the SignificantSide component.
        /// </summary>
        public const string SignificantSide = "SignificantSide";
        /// <summary>
        /// The BrowseName for the SignificantSideEnumeration component.
        /// </summary>
        public const string SignificantSideEnumeration = "SignificantSideEnumeration";
        /// <summary>
        /// The BrowseName for the SoftwareLoadingType component.
        /// </summary>
        public const string SoftwareLoadingType = "SoftwareLoadingType";
        /// <summary>
        /// The BrowseName for the SoftwareReleaseDate component.
        /// </summary>
        public const string SoftwareReleaseDate = "SoftwareReleaseDate";
        /// <summary>
        /// The BrowseName for the SoftwareRevision component.
        /// </summary>
        public const string SoftwareRevision = "SoftwareRevision";
        /// <summary>
        /// The BrowseName for the SoftwareType component.
        /// </summary>
        public const string SoftwareType = "SoftwareType";
        /// <summary>
        /// The BrowseName for the SoftwareUpdateType component.
        /// </summary>
        public const string SoftwareUpdateType = "SoftwareUpdateType";
        /// <summary>
        /// The BrowseName for the SoftwareVersionFileType component.
        /// </summary>
        public const string SoftwareVersionFileType = "SoftwareVersionFileType";
        /// <summary>
        /// The BrowseName for the SoftwareVersionType component.
        /// </summary>
        public const string SoftwareVersionType = "SoftwareVersionType";
        /// <summary>
        /// The BrowseName for the Spacer component.
        /// </summary>
        public const string Spacer = "Spacer";
        /// <summary>
        /// The BrowseName for the SpacerMaterialClass component.
        /// </summary>
        public const string SpacerMaterialClass = "SpacerMaterialClass";
        /// <summary>
        /// The BrowseName for the SpacerMaterialSubClass component.
        /// </summary>
        public const string SpacerMaterialSubClass = "SpacerMaterialSubClass";
        /// <summary>
        /// The BrowseName for the SpacerType component.
        /// </summary>
        public const string SpacerType = "SpacerType";
        /// <summary>
        /// The BrowseName for the StackElementAcousticType component.
        /// </summary>
        public const string StackElementAcousticType = "StackElementAcousticType";
        /// <summary>
        /// The BrowseName for the StackElementLightType component.
        /// </summary>
        public const string StackElementLightType = "StackElementLightType";
        /// <summary>
        /// The BrowseName for the StackElementType component.
        /// </summary>
        public const string StackElementType = "StackElementType";
        /// <summary>
        /// The BrowseName for the StackLevel component.
        /// </summary>
        public const string StackLevel = "StackLevel";
        /// <summary>
        /// The BrowseName for the StackLevelType component.
        /// </summary>
        public const string StackLevelType = "StackLevelType";
        /// <summary>
        /// The BrowseName for the StackRunning component.
        /// </summary>
        public const string StackRunning = "StackRunning";
        /// <summary>
        /// The BrowseName for the StackRunningType component.
        /// </summary>
        public const string StackRunningType = "StackRunningType";
        /// <summary>
        /// The BrowseName for the Stacklight component.
        /// </summary>
        public const string Stacklight = "Stacklight";
        /// <summary>
        /// The BrowseName for the StacklightMode component.
        /// </summary>
        public const string StacklightMode = "StacklightMode";
        /// <summary>
        /// The BrowseName for the StacklightOperationMode component.
        /// </summary>
        public const string StacklightOperationMode = "StacklightOperationMode";
        /// <summary>
        /// The BrowseName for the StacklightType component.
        /// </summary>
        public const string StacklightType = "StacklightType";
        /// <summary>
        /// The BrowseName for the StartTime component.
        /// </summary>
        public const string StartTime = "StartTime";
        /// <summary>
        /// The BrowseName for the StartValue component.
        /// </summary>
        public const string StartValue = "StartValue";
        /// <summary>
        /// The BrowseName for the State component.
        /// </summary>
        public const string State = "State";
        /// <summary>
        /// The BrowseName for the Status component.
        /// </summary>
        public const string Status = "Status";
        /// <summary>
        /// The BrowseName for the StructureAlignment component.
        /// </summary>
        public const string StructureAlignment = "StructureAlignment";
        /// <summary>
        /// The BrowseName for the StructureAlignmentEnumeration component.
        /// </summary>
        public const string StructureAlignmentEnumeration = "StructureAlignmentEnumeration";
        /// <summary>
        /// The BrowseName for the StructureClass component.
        /// </summary>
        public const string StructureClass = "StructureClass";
        /// <summary>
        /// The BrowseName for the SubstanceVolumeIndicationType component.
        /// </summary>
        public const string SubstanceVolumeIndicationType = "SubstanceVolumeIndicationType";
        /// <summary>
        /// The BrowseName for the SupportedMaterialTypes component.
        /// </summary>
        public const string SupportedMaterialTypes = "SupportedMaterialTypes";
        /// <summary>
        /// The BrowseName for the SupportedTypes component.
        /// </summary>
        public const string SupportedTypes = "SupportedTypes";
        /// <summary>
        /// The BrowseName for the SuspendJob component.
        /// </summary>
        public const string SuspendJob = "SuspendJob";
        /// <summary>
        /// The BrowseName for the TargetMode component.
        /// </summary>
        public const string TargetMode = "TargetMode";
        /// <summary>
        /// The BrowseName for the Temperature component.
        /// </summary>
        public const string Temperature = "Temperature";
        /// <summary>
        /// The BrowseName for the TemperatureCondition component.
        /// </summary>
        public const string TemperatureCondition = "TemperatureCondition";
        /// <summary>
        /// The BrowseName for the TemperatureSetpoint component.
        /// </summary>
        public const string TemperatureSetpoint = "TemperatureSetpoint";
        /// <summary>
        /// The BrowseName for the TemperingInstructionType component.
        /// </summary>
        public const string TemperingInstructionType = "TemperingInstructionType";
        /// <summary>
        /// The BrowseName for the TemperingJobType component.
        /// </summary>
        public const string TemperingJobType = "TemperingJobType";
        /// <summary>
        /// The BrowseName for the TimeIndicationType component.
        /// </summary>
        public const string TimeIndicationType = "TimeIndicationType";
        /// <summary>
        /// The BrowseName for the ToolMissingEventType component.
        /// </summary>
        public const string ToolMissingEventType = "ToolMissingEventType";
        /// <summary>
        /// The BrowseName for the TopologyElementType component.
        /// </summary>
        public const string TopologyElementType = "TopologyElementType";
        /// <summary>
        /// The BrowseName for the TransferFromDevice component.
        /// </summary>
        public const string TransferFromDevice = "TransferFromDevice";
        /// <summary>
        /// The BrowseName for the TransferResultDataDataType component.
        /// </summary>
        public const string TransferResultDataDataType = "TransferResultDataDataType";
        /// <summary>
        /// The BrowseName for the TransferResultErrorDataType component.
        /// </summary>
        public const string TransferResultErrorDataType = "TransferResultErrorDataType";
        /// <summary>
        /// The BrowseName for the TransferServicesType component.
        /// </summary>
        public const string TransferServicesType = "TransferServicesType";
        /// <summary>
        /// The BrowseName for the TransferToDevice component.
        /// </summary>
        public const string TransferToDevice = "TransferToDevice";
        /// <summary>
        /// The BrowseName for the Transmission component.
        /// </summary>
        public const string Transmission = "Transmission";
        /// <summary>
        /// The BrowseName for the TypeDictionary component.
        /// </summary>
        public const string TypeDictionary_XmlSchema = "TypeDictionary";
        /// <summary>
        /// The BrowseName for the UIElement component.
        /// </summary>
        public const string UIElement = "UIElement";
        /// <summary>
        /// The BrowseName for the UIElementType component.
        /// </summary>
        public const string UIElementType = "UIElementType";
        /// <summary>
        /// The BrowseName for the UpdateBehavior component.
        /// </summary>
        public const string UpdateBehavior = "UpdateBehavior";
        /// <summary>
        /// The BrowseName for the UpdateKey component.
        /// </summary>
        public const string UpdateKey = "UpdateKey";
        /// <summary>
        /// The BrowseName for the UpdateStatus component.
        /// </summary>
        public const string UpdateStatus = "UpdateStatus";
        /// <summary>
        /// The BrowseName for the UserProfileType component.
        /// </summary>
        public const string UserProfileType = "UserProfileType";
        /// <summary>
        /// The BrowseName for the ValidateFiles component.
        /// </summary>
        public const string ValidateFiles = "ValidateFiles";
        /// <summary>
        /// The BrowseName for the VendorErrorCode component.
        /// </summary>
        public const string VendorErrorCode = "VendorErrorCode";
        /// <summary>
        /// The BrowseName for the WaitingForConfirm component.
        /// </summary>
        public const string WaitingForConfirm = "WaitingForConfirm";
        /// <summary>
        /// The BrowseName for the WaitingForConfirmToNotWaitingForConfirm component.
        /// </summary>
        public const string WaitingForConfirmToNotWaitingForConfirm = "WaitingForConfirmToNotWaitingForConfirm";
        /// <summary>
        /// The BrowseName for the WaitingForPowerCycle component.
        /// </summary>
        public const string WaitingForPowerCycle = "WaitingForPowerCycle";
        /// <summary>
        /// The BrowseName for the WaitingForPowerCycleToNotWaitingForPowerCycle component.
        /// </summary>
        public const string WaitingForPowerCycleToNotWaitingForPowerCycle = "WaitingForPowerCycleToNotWaitingForPowerCycle";
        /// <summary>
        /// The BrowseName for the WarningValues component.
        /// </summary>
        public const string WarningValues = "WarningValues";
        /// <summary>
        /// The BrowseName for the Weight component.
        /// </summary>
        public const string Weight = "Weight";
        /// <summary>
        /// The BrowseName for the WindowDuration component.
        /// </summary>
        public const string WindowDuration = "WindowDuration";
        /// <summary>
        /// The BrowseName for the WindowNumberOfValues component.
        /// </summary>
        public const string WindowNumberOfValues = "WindowNumberOfValues";
        /// <summary>
        /// The BrowseName for the WriteBlockSize component.
        /// </summary>
        public const string WriteBlockSize = "WriteBlockSize";
        /// <summary>
        /// The BrowseName for the WriteTimeout component.
        /// </summary>
        public const string WriteTimeout = "WriteTimeout";
        /// <summary>
        /// The BrowseName for the X component.
        /// </summary>
        public const string X = "X";
        /// <summary>
        /// The BrowseName for the Y component.
        /// </summary>
        public const string Y = "Y";
        /// <summary>
        /// The BrowseName for the YearOfConstruction component.
        /// </summary>
        public const string YearOfConstruction = "YearOfConstruction";
        /// <summary>
        /// The BrowseName for the Z component.
        /// </summary>
        public const string Z = "Z";
        /// <summary>
        /// The BrowseName for the http://opcfoundation.org/UA/DI/ component.
        /// </summary>
        public const string OPCUADINamespaceMetadata = "http://opcfoundation.org/UA/DI/";
        /// <summary>
        /// The BrowseName for the http://opcfoundation.org/UA/Glass/Flat/ component.
        /// </summary>
        public const string http___opcfoundation_org_UA_Glass_Flat_ = "http://opcfoundation.org/UA/Glass/Flat/";
        /// <summary>
        /// The BrowseName for the http://opcfoundation.org/UA/IA/ component.
        /// </summary>
        public const string http___opcfoundation_org_UA_IA_ = "http://opcfoundation.org/UA/IA/";
        /// <summary>
        /// The BrowseName for the http://opcfoundation.org/UA/Machinery/ component.
        /// </summary>
        public const string http___opcfoundation_org_UA_Machinery_ = "http://opcfoundation.org/UA/Machinery/";
        /// <summary>
        /// The BrowseName for the http://unified-automation.com/MachineDemoServer/ component.
        /// </summary>
        public const string http___unified_automation_com_MachineDemoServer_ = "http://unified-automation.com/MachineDemoServer/";
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the Model.
    /// </summary>
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";

        /// <summary>
        /// The URI for the DI namespace.
        /// </summary>
        public const string DI = "http://opcfoundation.org/UA/DI/";

        /// <summary>
        /// The URI for the DIXsd namespace.
        /// </summary>
        public const string DIXsd = "http://opcfoundation.org/UA/DI/Types.xsd";

        /// <summary>
        /// The URI for the Machinery namespace.
        /// </summary>
        public const string Machinery = "http://opcfoundation.org/UA/Machinery/";

        /// <summary>
        /// The URI for the MachineryXsd namespace.
        /// </summary>
        public const string MachineryXsd = "http://opcfoundation.org/UA/Machinery/Types.xsd";

        /// <summary>
        /// The URI for the IA namespace.
        /// </summary>
        public const string IA = "http://opcfoundation.org/UA/IA/";

        /// <summary>
        /// The URI for the IAXsd namespace.
        /// </summary>
        public const string IAXsd = "http://opcfoundation.org/UA/IA/Types.xsd";

        /// <summary>
        /// The URI for the Glass namespace.
        /// </summary>
        public const string Glass = "http://opcfoundation.org/UA/Glass/Flat/";

        /// <summary>
        /// The URI for the GlassXsd namespace.
        /// </summary>
        public const string GlassXsd = "http://opcfoundation.org/UA/Glass/Flat/Types.xsd";

        /// <summary>
        /// The URI for the MachineDemoServer namespace.
        /// </summary>
        public const string MachineDemoServer = "http://unified-automation.com/MachineDemoServer/";

        /// <summary>
        /// The URI for the MachineDemoServerXsd namespace.
        /// </summary>
        public const string MachineDemoServerXsd = "http://unified-automation.com/MachineDemoServer/Types.xsd";
    }
    #endregion
}

