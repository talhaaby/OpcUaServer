/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.6.9, using .NET Server 3.3.0 template (version 0)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
** </auto-generated>
**
** Copyright (c) 2006-2023 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.8
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.8, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://opcfoundation.org/UA/Glass/Flat/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.8/
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;
using UnifiedAutomation.UaBase;

namespace OpcUa.Glass
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class DataTypes
    {
        /// <summary>
        /// The identifier for the CoatingClassEnumeration DataType.
        /// </summary>
        public const uint CoatingClassEnumeration = 3009;

        /// <summary>
        /// The identifier for the CoordinateSystemEnumeration DataType.
        /// </summary>
        public const uint CoordinateSystemEnumeration = 3008;

        /// <summary>
        /// The identifier for the SignificantSideEnumeration DataType.
        /// </summary>
        public const uint SignificantSideEnumeration = 3003;

        /// <summary>
        /// The identifier for the SpacerMaterialClass DataType.
        /// </summary>
        public const uint SpacerMaterialClass = 3005;

        /// <summary>
        /// The identifier for the StructureAlignmentEnumeration DataType.
        /// </summary>
        public const uint StructureAlignmentEnumeration = 3004;

        /// <summary>
        /// The identifier for the LimitedString64 DataType.
        /// </summary>
        public const uint LimitedString64 = 3002;

        /// <summary>
        /// The identifier for the FileFormatType DataType.
        /// </summary>
        public const uint FileFormatType = 3007;

        /// <summary>
        /// The identifier for the UserProfileType DataType.
        /// </summary>
        public const uint UserProfileType = 3006;

    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the Gas_1 Object.
        /// </summary>
        public const uint GasMixType_Gas_1 = 5078;

        /// <summary>
        /// The identifier for the Hardener Object.
        /// </summary>
        public const uint SealingMaterialType_Hardener = 5081;

        /// <summary>
        /// The identifier for the Resin Object.
        /// </summary>
        public const uint SealingMaterialType_Resin = 5080;

        /// <summary>
        /// The identifier for the Gas_2 Object.
        /// </summary>
        public const uint GasMixType_Gas_2 = 5079;

        /// <summary>
        /// The identifier for the &lt;LocalManuals&gt; Object.
        /// </summary>
        public const uint ManualFolderType_LocalManuals = 5017;

        /// <summary>
        /// The identifier for the Components Object.
        /// </summary>
        public const uint GlassMachineType_Components = 5002;

        /// <summary>
        /// The identifier for the ConfigurationRules Object.
        /// </summary>
        public const uint GlassMachineType_ConfigurationRules = 5029;

        /// <summary>
        /// The identifier for the &lt;OrderedObject&gt; Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder = 5003;

        /// <summary>
        /// The identifier for the &lt;InputMaterial&gt; Object.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial = 5021;

        /// <summary>
        /// The identifier for the &lt;OutputMaterial&gt; Object.
        /// </summary>
        public const uint AssemblyJobType_OutputMaterial = 5023;

        /// <summary>
        /// The identifier for the &lt;InputMaterial&gt; Object.
        /// </summary>
        public const uint CuttingJobType_InputMaterial = 5019;

        /// <summary>
        /// The identifier for the &lt;OutputMaterial&gt; Object.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial = 5020;

        /// <summary>
        /// The identifier for the InputMaterials Object.
        /// </summary>
        public const uint ProductionJobType_InputMaterials = 5014;

        /// <summary>
        /// The identifier for the &lt;InputMaterial&gt; Object.
        /// </summary>
        public const uint ProductionJobType_InputMaterials_InputMaterial = 5005;

        /// <summary>
        /// The identifier for the Instruction Object.
        /// </summary>
        public const uint ProductionJobType_Instruction = 5010;

        /// <summary>
        /// The identifier for the Plan Object.
        /// </summary>
        public const uint InstructionType_Plan = 5008;

        /// <summary>
        /// The identifier for the Plan Object.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan = 5012;

        /// <summary>
        /// The identifier for the Lock Object.
        /// </summary>
        public const uint ProductionJobType_Lock = 5004;

        /// <summary>
        /// The identifier for the OutputMaterials Object.
        /// </summary>
        public const uint ProductionJobType_OutputMaterials = 5018;

        /// <summary>
        /// The identifier for the &lt;OutputMaterial&gt; Object.
        /// </summary>
        public const uint ProductionJobType_OutputMaterials_OutputMaterial = 5027;

        /// <summary>
        /// The identifier for the &lt;InputMaterial&gt; Object.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial = 5024;

        /// <summary>
        /// The identifier for the &lt;OutputMaterial&gt; Object.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial = 5025;

        /// <summary>
        /// The identifier for the State Object.
        /// </summary>
        public const uint ProductionJobType_State = 5013;

        /// <summary>
        /// The identifier for the Aborted Object.
        /// </summary>
        public const uint ProductionStateMachineType_Aborted = 5033;

        /// <summary>
        /// The identifier for the AbortedToInitializing Object.
        /// </summary>
        public const uint ProductionStateMachineType_AbortedToInitializing = 1028;

        /// <summary>
        /// The identifier for the Initializing Object.
        /// </summary>
        public const uint ProductionStateMachineType_Initializing = 5032;

        /// <summary>
        /// The identifier for the InitializingState Object.
        /// </summary>
        public const uint ProductionStateMachineType_InitializingState = 5059;

        /// <summary>
        /// The identifier for the Idle Object.
        /// </summary>
        public const uint InitializingSubStateMachineType_Idle = 5067;

        /// <summary>
        /// The identifier for the IdleToQueued Object.
        /// </summary>
        public const uint InitializingSubStateMachineType_IdleToQueued = 1044;

        /// <summary>
        /// The identifier for the Queued Object.
        /// </summary>
        public const uint InitializingSubStateMachineType_Queued = 5076;

        /// <summary>
        /// The identifier for the QueuedToIdle Object.
        /// </summary>
        public const uint InitializingSubStateMachineType_QueuedToIdle = 1045;

        /// <summary>
        /// The identifier for the QueuedToReleased Object.
        /// </summary>
        public const uint InitializingSubStateMachineType_QueuedToReleased = 1046;

        /// <summary>
        /// The identifier for the Released Object.
        /// </summary>
        public const uint InitializingSubStateMachineType_Released = 5077;

        /// <summary>
        /// The identifier for the ReleasedToQueued Object.
        /// </summary>
        public const uint InitializingSubStateMachineType_ReleasedToQueued = 1047;

        /// <summary>
        /// The identifier for the Ended Object.
        /// </summary>
        public const uint ProductionStateMachineType_Ended = 5034;

        /// <summary>
        /// The identifier for the EndedToInitializing Object.
        /// </summary>
        public const uint ProductionStateMachineType_EndedToInitializing = 1042;

        /// <summary>
        /// The identifier for the InitializingToAborted Object.
        /// </summary>
        public const uint ProductionStateMachineType_InitializingToAborted = 1053;

        /// <summary>
        /// The identifier for the InitializingToRunning Object.
        /// </summary>
        public const uint ProductionStateMachineType_InitializingToRunning = 1000;

        /// <summary>
        /// The identifier for the Running Object.
        /// </summary>
        public const uint ProductionStateMachineType_Running = 5036;

        /// <summary>
        /// The identifier for the Interrupted Object.
        /// </summary>
        public const uint ProductionStateMachineType_Interrupted = 5035;

        /// <summary>
        /// The identifier for the InterruptedToAborted Object.
        /// </summary>
        public const uint ProductionStateMachineType_InterruptedToAborted = 1043;

        /// <summary>
        /// The identifier for the InterruptedToRunning Object.
        /// </summary>
        public const uint ProductionStateMachineType_InterruptedToRunning = 1012;

        /// <summary>
        /// The identifier for the RunningToAborted Object.
        /// </summary>
        public const uint ProductionStateMachineType_RunningToAborted = 1013;

        /// <summary>
        /// The identifier for the RunningToEnded Object.
        /// </summary>
        public const uint ProductionStateMachineType_RunningToEnded = 1014;

        /// <summary>
        /// The identifier for the RunningToInterrupted Object.
        /// </summary>
        public const uint ProductionStateMachineType_RunningToInterrupted = 1001;

        /// <summary>
        /// The identifier for the RunningToRunning Object.
        /// </summary>
        public const uint ProductionStateMachineType_RunningToRunning = 1022;

        /// <summary>
        /// The identifier for the InitializingState Object.
        /// </summary>
        public const uint ProductionJobType_State_InitializingState = 5043;

        /// <summary>
        /// The identifier for the InputMaterials Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_InputMaterials = 5022;

        /// <summary>
        /// The identifier for the &lt;InputMaterial&gt; Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial = 5006;

        /// <summary>
        /// The identifier for the Instruction Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction = 5030;

        /// <summary>
        /// The identifier for the Plan Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan = 5031;

        /// <summary>
        /// The identifier for the OutputMaterials Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_OutputMaterials = 5026;

        /// <summary>
        /// The identifier for the &lt;OutputMaterial&gt; Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial = 5028;

        /// <summary>
        /// The identifier for the State Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_State = 5040;

        /// <summary>
        /// The identifier for the InitializingState Object.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_State_InitializingState = 5044;

        /// <summary>
        /// The identifier for the ProductionPlan Object.
        /// </summary>
        public const uint ProductionType_ProductionPlan = 5007;

        /// <summary>
        /// The identifier for the Identification Object.
        /// </summary>
        public const uint GlassMachineType_Identification = 5001;

        /// <summary>
        /// The identifier for the MaintenanceManuals Object.
        /// </summary>
        public const uint GlassMachineType_MaintenanceManuals = 5009;

        /// <summary>
        /// The identifier for the OperationManuals Object.
        /// </summary>
        public const uint GlassMachineType_OperationManuals = 5011;

        /// <summary>
        /// The identifier for the Production Object.
        /// </summary>
        public const uint GlassMachineType_Production = 5015;

        /// <summary>
        /// The identifier for the ProductionPlan Object.
        /// </summary>
        public const uint GlassMachineType_Production_ProductionPlan = 5016;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint FileFormatType_Encoding_DefaultBinary = 5037;

        /// <summary>
        /// The identifier for the Default JSON Object.
        /// </summary>
        public const uint FileFormatType_Encoding_DefaultJson = 5039;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint FileFormatType_Encoding_DefaultXml = 5038;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint UserProfileType_Encoding_DefaultBinary = 5082;

        /// <summary>
        /// The identifier for the Default JSON Object.
        /// </summary>
        public const uint UserProfileType_Encoding_DefaultJson = 5084;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint UserProfileType_Encoding_DefaultXml = 5083;

        /// <summary>
        /// The identifier for the http://opcfoundation.org/UA/Glass/Flat/ Object.
        /// </summary>
        public const uint Namespaces_http___opcfoundation_org_UA_Glass_Flat_ = 5041;

    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the GlassEventType ObjectType.
        /// </summary>
        public const uint GlassEventType = 1030;

        /// <summary>
        /// The identifier for the CommunicationErrorEventType ObjectType.
        /// </summary>
        public const uint CommunicationErrorEventType = 1040;

        /// <summary>
        /// The identifier for the GlassMaterialEventType ObjectType.
        /// </summary>
        public const uint GlassMaterialEventType = 1031;

        /// <summary>
        /// The identifier for the MaterialExitEventType ObjectType.
        /// </summary>
        public const uint MaterialExitEventType = 1025;

        /// <summary>
        /// The identifier for the MaterialMissingEventType ObjectType.
        /// </summary>
        public const uint MaterialMissingEventType = 1027;

        /// <summary>
        /// The identifier for the MaterialReceivedEventType ObjectType.
        /// </summary>
        public const uint MaterialReceivedEventType = 1026;

        /// <summary>
        /// The identifier for the IntermediateStepEvent ObjectType.
        /// </summary>
        public const uint IntermediateStepEvent = 1029;

        /// <summary>
        /// The identifier for the InterruptedEventType ObjectType.
        /// </summary>
        public const uint InterruptedEventType = 1032;

        /// <summary>
        /// The identifier for the EmergencyButtonPressedEventType ObjectType.
        /// </summary>
        public const uint EmergencyButtonPressedEventType = 1038;

        /// <summary>
        /// The identifier for the MotorTemperatureTooHighEventType ObjectType.
        /// </summary>
        public const uint MotorTemperatureTooHighEventType = 1039;

        /// <summary>
        /// The identifier for the OpenSecurityFenceType ObjectType.
        /// </summary>
        public const uint OpenSecurityFenceType = 1033;

        /// <summary>
        /// The identifier for the OutOfJobEventType ObjectType.
        /// </summary>
        public const uint OutOfJobEventType = 1036;

        /// <summary>
        /// The identifier for the ProcessParameterOutOfRangeType ObjectType.
        /// </summary>
        public const uint ProcessParameterOutOfRangeType = 1034;

        /// <summary>
        /// The identifier for the ToolMissingEventType ObjectType.
        /// </summary>
        public const uint ToolMissingEventType = 1035;

        /// <summary>
        /// The identifier for the JobMovedEventType ObjectType.
        /// </summary>
        public const uint JobMovedEventType = 1037;

        /// <summary>
        /// The identifier for the BaseMaterialType ObjectType.
        /// </summary>
        public const uint BaseMaterialType = 1006;

        /// <summary>
        /// The identifier for the AssemblyType ObjectType.
        /// </summary>
        public const uint AssemblyType = 1002;

        /// <summary>
        /// The identifier for the FoilType ObjectType.
        /// </summary>
        public const uint FoilType = 1019;

        /// <summary>
        /// The identifier for the GasMixType ObjectType.
        /// </summary>
        public const uint GasMixType = 1010;

        /// <summary>
        /// The identifier for the GlassType ObjectType.
        /// </summary>
        public const uint GlassType = 1011;

        /// <summary>
        /// The identifier for the PackagingType ObjectType.
        /// </summary>
        public const uint PackagingType = 1017;

        /// <summary>
        /// The identifier for the SealingMaterialType ObjectType.
        /// </summary>
        public const uint SealingMaterialType = 1018;

        /// <summary>
        /// The identifier for the SpacerType ObjectType.
        /// </summary>
        public const uint SpacerType = 1016;

        /// <summary>
        /// The identifier for the ConfigurationRulesType ObjectType.
        /// </summary>
        public const uint ConfigurationRulesType = 1063;

        /// <summary>
        /// The identifier for the GlassMachineIdentificationType ObjectType.
        /// </summary>
        public const uint GlassMachineIdentificationType = 1020;

        /// <summary>
        /// The identifier for the ManualFolderType ObjectType.
        /// </summary>
        public const uint ManualFolderType = 1041;

        /// <summary>
        /// The identifier for the GlassMachineType ObjectType.
        /// </summary>
        public const uint GlassMachineType = 1015;

        /// <summary>
        /// The identifier for the InstructionType ObjectType.
        /// </summary>
        public const uint InstructionType = 1003;

        /// <summary>
        /// The identifier for the ProductionPlanType ObjectType.
        /// </summary>
        public const uint ProductionPlanType = 1023;

        /// <summary>
        /// The identifier for the ProductionJobType ObjectType.
        /// </summary>
        public const uint ProductionJobType = 1004;

        /// <summary>
        /// The identifier for the AssemblyJobType ObjectType.
        /// </summary>
        public const uint AssemblyJobType = 1008;

        /// <summary>
        /// The identifier for the CuttingJobType ObjectType.
        /// </summary>
        public const uint CuttingJobType = 1007;

        /// <summary>
        /// The identifier for the ProcessingJobType ObjectType.
        /// </summary>
        public const uint ProcessingJobType = 1009;

        /// <summary>
        /// The identifier for the ProductionType ObjectType.
        /// </summary>
        public const uint ProductionType = 1021;

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType ObjectType.
        /// </summary>
        public const uint InitializingSubStateMachineType = 1024;

        /// <summary>
        /// The identifier for the ProductionStateMachineType ObjectType.
        /// </summary>
        public const uint ProductionStateMachineType = 1005;

    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class Methods
    {
        /// <summary>
        /// The identifier for the Close Method.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Close = 7001;

        /// <summary>
        /// The identifier for the GetPosition Method.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_GetPosition = 7002;

        /// <summary>
        /// The identifier for the Open Method.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Open = 7005;

        /// <summary>
        /// The identifier for the Read Method.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Read = 7012;

        /// <summary>
        /// The identifier for the SetPosition Method.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_SetPosition = 7013;

        /// <summary>
        /// The identifier for the Write Method.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Write = 7014;

        /// <summary>
        /// The identifier for the ChangePositionInList Method.
        /// </summary>
        public const uint GlassMachineType_Production_ChangePositionInList = 7023;

        /// <summary>
        /// The identifier for the DeleteJob Method.
        /// </summary>
        public const uint GlassMachineType_Production_DeleteJob = 7024;

        /// <summary>
        /// The identifier for the InsertJob Method.
        /// </summary>
        public const uint GlassMachineType_Production_InsertJob = 7025;

        /// <summary>
        /// The identifier for the Close Method.
        /// </summary>
        public const uint InstructionType_Plan_Close = 7006;

        /// <summary>
        /// The identifier for the GetPosition Method.
        /// </summary>
        public const uint InstructionType_Plan_GetPosition = 7007;

        /// <summary>
        /// The identifier for the Open Method.
        /// </summary>
        public const uint InstructionType_Plan_Open = 7008;

        /// <summary>
        /// The identifier for the Read Method.
        /// </summary>
        public const uint InstructionType_Plan_Read = 7009;

        /// <summary>
        /// The identifier for the SetPosition Method.
        /// </summary>
        public const uint InstructionType_Plan_SetPosition = 7010;

        /// <summary>
        /// The identifier for the Write Method.
        /// </summary>
        public const uint InstructionType_Plan_Write = 7011;

        /// <summary>
        /// The identifier for the Close Method.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Close = 7026;

        /// <summary>
        /// The identifier for the GetPosition Method.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition = 7031;

        /// <summary>
        /// The identifier for the Open Method.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open = 7032;

        /// <summary>
        /// The identifier for the Read Method.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read = 7033;

        /// <summary>
        /// The identifier for the SetPosition Method.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_SetPosition = 7034;

        /// <summary>
        /// The identifier for the Write Method.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Write = 7035;

        /// <summary>
        /// The identifier for the AbortJob Method.
        /// </summary>
        public const uint ProductionJobType_AbortJob = 7022;

        /// <summary>
        /// The identifier for the Close Method.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Close = 7015;

        /// <summary>
        /// The identifier for the GetPosition Method.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_GetPosition = 7016;

        /// <summary>
        /// The identifier for the Open Method.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Open = 7017;

        /// <summary>
        /// The identifier for the Read Method.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Read = 7018;

        /// <summary>
        /// The identifier for the SetPosition Method.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_SetPosition = 7019;

        /// <summary>
        /// The identifier for the Write Method.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Write = 7020;

        /// <summary>
        /// The identifier for the BreakLock Method.
        /// </summary>
        public const uint ProductionJobType_Lock_BreakLock = 7027;

        /// <summary>
        /// The identifier for the ExitLock Method.
        /// </summary>
        public const uint ProductionJobType_Lock_ExitLock = 7028;

        /// <summary>
        /// The identifier for the InitLock Method.
        /// </summary>
        public const uint ProductionJobType_Lock_InitLock = 7029;

        /// <summary>
        /// The identifier for the RenewLock Method.
        /// </summary>
        public const uint ProductionJobType_Lock_RenewLock = 7030;

        /// <summary>
        /// The identifier for the QueueJob Method.
        /// </summary>
        public const uint ProductionJobType_QueueJob = 7021;

        /// <summary>
        /// The identifier for the ReleaseJob Method.
        /// </summary>
        public const uint ProductionJobType_ReleaseJob = 7003;

        /// <summary>
        /// The identifier for the SuspendJob Method.
        /// </summary>
        public const uint ProductionJobType_SuspendJob = 7004;

        /// <summary>
        /// The identifier for the ChangePositionInList Method.
        /// </summary>
        public const uint ProductionType_ChangePositionInList = 7050;

        /// <summary>
        /// The identifier for the DeleteJob Method.
        /// </summary>
        public const uint ProductionType_DeleteJob = 7049;

        /// <summary>
        /// The identifier for the InsertJob Method.
        /// </summary>
        public const uint ProductionType_InsertJob = 7048;

    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTyped in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ReferenceTypes
    {
    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the EnumStrings Variable.
        /// </summary>
        public const uint CoatingClassEnumeration_EnumStrings = 6229;

        /// <summary>
        /// The identifier for the EnumStrings Variable.
        /// </summary>
        public const uint CoordinateSystemEnumeration_EnumStrings = 6189;

        /// <summary>
        /// The identifier for the EnumStrings Variable.
        /// </summary>
        public const uint SignificantSideEnumeration_EnumStrings = 6372;

        /// <summary>
        /// The identifier for the EnumStrings Variable.
        /// </summary>
        public const uint SpacerMaterialClass_EnumStrings = 6162;

        /// <summary>
        /// The identifier for the EnumStrings Variable.
        /// </summary>
        public const uint StructureAlignmentEnumeration_EnumStrings = 6377;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint GlassEventType_Identifier = 6405;

        /// <summary>
        /// The identifier for the ProcessStep Variable.
        /// </summary>
        public const uint IntermediateStepEvent_ProcessStep = 6412;

        /// <summary>
        /// The identifier for the Status Variable.
        /// </summary>
        public const uint IntermediateStepEvent_Status = 6413;

        /// <summary>
        /// The identifier for the ProcessName Variable.
        /// </summary>
        public const uint InterruptedEventType_ProcessName = 6403;

        /// <summary>
        /// The identifier for the JobdIdentifier Variable.
        /// </summary>
        public const uint GlassEventType_JobdIdentifier = 6410;

        /// <summary>
        /// The identifier for the JobdIdentifier Variable.
        /// </summary>
        public const uint JobMovedEventType_JobdIdentifier = 6404;

        /// <summary>
        /// The identifier for the NewPosition Variable.
        /// </summary>
        public const uint JobMovedEventType_NewPosition = 6407;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint GlassEventType_Location = 6406;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint GlassEventType_MaterialIdentifier = 6411;

        /// <summary>
        /// The identifier for the Description Variable.
        /// </summary>
        public const uint BaseMaterialType_Description = 6017;

        /// <summary>
        /// The identifier for the Z Variable.
        /// </summary>
        public const uint FoilType_Z = 6401;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint FoilType_Z_EngineeringUnits = 6402;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint GasMixType_Gas_1_Identifier = 6383;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint GasMixType_Gas_1_Location = 6169;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint GasMixType_Gas_1_MaterialIdentifier = 6382;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint GasMixType_Gas_2_Identifier = 6386;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint GasMixType_Gas_2_Location = 6384;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint GasMixType_Gas_2_MaterialIdentifier = 6385;

        /// <summary>
        /// The identifier for the GasFilling Variable.
        /// </summary>
        public const uint GasMixType_GasFilling = 6116;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GasMixType_GasFilling_EngineeringUnits = 6117;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint GasMixType_GasFilling_EURange = 6059;

        /// <summary>
        /// The identifier for the MixingRatio Variable.
        /// </summary>
        public const uint GasMixType_MixingRatio = 6118;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GasMixType_MixingRatio_EngineeringUnits = 6119;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint GasMixType_MixingRatio_EURange = 6060;

        /// <summary>
        /// The identifier for the Absorption Variable.
        /// </summary>
        public const uint GlassType_Absorption = 6207;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassType_Absorption_EngineeringUnits = 6208;

        /// <summary>
        /// The identifier for the CoatingClass Variable.
        /// </summary>
        public const uint GlassType_CoatingClass = 6088;

        /// <summary>
        /// The identifier for the CoatingEmessivity Variable.
        /// </summary>
        public const uint GlassType_CoatingEmessivity = 6211;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassType_CoatingEmessivity_EngineeringUnits = 6212;

        /// <summary>
        /// The identifier for the CoatingSubClass Variable.
        /// </summary>
        public const uint GlassType_CoatingSubClass = 6128;

        /// <summary>
        /// The identifier for the ElectricalConductivity Variable.
        /// </summary>
        public const uint GlassType_ElectricalConductivity = 6182;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassType_ElectricalConductivity_EngineeringUnits = 6183;

        /// <summary>
        /// The identifier for the Orientation Variable.
        /// </summary>
        public const uint GlassType_Orientation = 6132;

        /// <summary>
        /// The identifier for the Reflection Variable.
        /// </summary>
        public const uint GlassType_Reflection = 6209;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassType_Reflection_EngineeringUnits = 6210;

        /// <summary>
        /// The identifier for the SignificantSide Variable.
        /// </summary>
        public const uint GlassType_SignificantSide = 6097;

        /// <summary>
        /// The identifier for the StructureAlignment Variable.
        /// </summary>
        public const uint GlassType_StructureAlignment = 6098;

        /// <summary>
        /// The identifier for the StructureClass Variable.
        /// </summary>
        public const uint GlassType_StructureClass = 6087;

        /// <summary>
        /// The identifier for the Transmission Variable.
        /// </summary>
        public const uint GlassType_Transmission = 6213;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassType_Transmission_EngineeringUnits = 6214;

        /// <summary>
        /// The identifier for the X Variable.
        /// </summary>
        public const uint GlassType_X = 6203;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassType_X_EngineeringUnits = 6204;

        /// <summary>
        /// The identifier for the Y Variable.
        /// </summary>
        public const uint GlassType_Y = 6205;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint GlassType_Y_EngineeringUnits = 6206;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint BaseMaterialType_Identifier = 6002;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint BaseMaterialType_Location = 6070;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint BaseMaterialType_MaterialIdentifier = 6003;

        /// <summary>
        /// The identifier for the CornerProtection Variable.
        /// </summary>
        public const uint PackagingType_CornerProtection = 6399;

        /// <summary>
        /// The identifier for the PerimeterProtection Variable.
        /// </summary>
        public const uint PackagingType_PerimeterProtection = 6400;

        /// <summary>
        /// The identifier for the Spacer Variable.
        /// </summary>
        public const uint PackagingType_Spacer = 6398;

        /// <summary>
        /// The identifier for the AddOnMaterial Variable.
        /// </summary>
        public const uint SealingMaterialType_AddOnMaterial = 6181;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint SealingMaterialType_Hardener_Identifier = 6397;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint SealingMaterialType_Hardener_Location = 6395;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint SealingMaterialType_Hardener_MaterialIdentifier = 6396;

        /// <summary>
        /// The identifier for the MixingRatio Variable.
        /// </summary>
        public const uint SealingMaterialType_MixingRatio = 6170;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint SealingMaterialType_MixingRatio_EngineeringUnits = 6068;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint SealingMaterialType_Resin_Identifier = 6394;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint SealingMaterialType_Resin_Location = 6392;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint SealingMaterialType_Resin_MaterialIdentifier = 6393;

        /// <summary>
        /// The identifier for the Filling Variable.
        /// </summary>
        public const uint SpacerType_Filling = 6164;

        /// <summary>
        /// The identifier for the FillLevel Variable.
        /// </summary>
        public const uint SpacerType_Filling_FillLevel = 6168;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint SpacerType_Filling_FillLevel_EngineeringUnits = 6381;

        /// <summary>
        /// The identifier for the SealantDepth Variable.
        /// </summary>
        public const uint SpacerType_SealantDepth = 6166;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint SpacerType_SealantDepth_EngineeringUnits = 6167;

        /// <summary>
        /// The identifier for the SpacerMaterialClass Variable.
        /// </summary>
        public const uint SpacerType_SpacerMaterialClass = 6163;

        /// <summary>
        /// The identifier for the SpacerMaterialSubClass Variable.
        /// </summary>
        public const uint SpacerType_SpacerMaterialSubClass = 6165;

        /// <summary>
        /// The identifier for the Weight Variable.
        /// </summary>
        public const uint BaseMaterialType_Weight = 6021;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint BaseMaterialType_Weight_EngineeringUnits = 6022;

        /// <summary>
        /// The identifier for the X Variable.
        /// </summary>
        public const uint BaseMaterialType_X = 6019;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint BaseMaterialType_X_EngineeringUnits = 6029;

        /// <summary>
        /// The identifier for the Y Variable.
        /// </summary>
        public const uint BaseMaterialType_Y = 6018;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint BaseMaterialType_Y_EngineeringUnits = 6028;

        /// <summary>
        /// The identifier for the Z Variable.
        /// </summary>
        public const uint BaseMaterialType_Z = 6020;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint BaseMaterialType_Z_EngineeringUnits = 6030;

        /// <summary>
        /// The identifier for the AllowedEngineeringUnits Variable.
        /// </summary>
        public const uint ConfigurationRulesType_AllowedEngineeringUnits = 6186;

        /// <summary>
        /// The identifier for the AllowedFileFormats Variable.
        /// </summary>
        public const uint ConfigurationRulesType_AllowedFileFormats = 6174;

        /// <summary>
        /// The identifier for the MachineProcessingCoordinateSystem Variable.
        /// </summary>
        public const uint ConfigurationRulesType_MachineProcessingCoordinateSystem = 6188;

        /// <summary>
        /// The identifier for the LoggedInProfiles Variable.
        /// </summary>
        public const uint GlassMachineIdentificationType_LoggedInProfiles = 6414;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Close_InputArguments = 6081;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_GetPosition_InputArguments = 6082;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_GetPosition_OutputArguments = 6083;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Open_InputArguments = 6084;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Open_OutputArguments = 6085;

        /// <summary>
        /// The identifier for the OpenCount Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_OpenCount = 6086;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Read_InputArguments = 6124;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Read_OutputArguments = 6139;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_SetPosition_InputArguments = 6140;

        /// <summary>
        /// The identifier for the Size Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Size = 6157;

        /// <summary>
        /// The identifier for the UserWritable Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_UserWritable = 6158;

        /// <summary>
        /// The identifier for the Writable Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Writable = 6172;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ManualFolderType_LocalManuals_Write_InputArguments = 6175;

        /// <summary>
        /// The identifier for the ExternalManuals Variable.
        /// </summary>
        public const uint ManualFolderType_ExternalManuals = 6176;

        /// <summary>
        /// The identifier for the MachineProcessingCoordinateSystem Variable.
        /// </summary>
        public const uint GlassMachineType_ConfigurationRules_MachineProcessingCoordinateSystem = 6067;

        /// <summary>
        /// The identifier for the AssetId Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_AssetId = 6069;

        /// <summary>
        /// The identifier for the DeviceClass Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_DeviceClass = 6093;

        /// <summary>
        /// The identifier for the LoggedInProfiles Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_LoggedInProfiles = 6057;

        /// <summary>
        /// The identifier for the Manufacturer Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_Manufacturer = 6058;

        /// <summary>
        /// The identifier for the ManufacturerUri Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_ManufacturerUri = 6102;

        /// <summary>
        /// The identifier for the Model Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_Model = 6103;

        /// <summary>
        /// The identifier for the ProductInstanceUri Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_ProductInstanceUri = 6061;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_SerialNumber = 6062;

        /// <summary>
        /// The identifier for the YearOfConstruction Variable.
        /// </summary>
        public const uint GlassMachineType_Identification_YearOfConstruction = 6104;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassMachineType_Production_ChangePositionInList_InputArguments = 6075;

        /// <summary>
        /// The identifier for the CurrentCountOfJobs Variable.
        /// </summary>
        public const uint GlassMachineType_Production_CurrentCountOfJobs = 6076;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassMachineType_Production_DeleteJob_InputArguments = 6077;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint GlassMachineType_Production_InsertJob_InputArguments = 6078;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint GlassMachineType_Production_InsertJob_OutputArguments = 6091;

        /// <summary>
        /// The identifier for the JobListIsRecommendation Variable.
        /// </summary>
        public const uint GlassMachineType_Production_JobListIsRecommendation = 6063;

        /// <summary>
        /// The identifier for the MaxCountOfJobs Variable.
        /// </summary>
        public const uint GlassMachineType_Production_MaxCountOfJobs = 6092;

        /// <summary>
        /// The identifier for the SupportedMaterialTypes Variable.
        /// </summary>
        public const uint GlassMachineType_Production_SupportedMaterialTypes = 6080;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_Close_InputArguments = 6004;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_GetPosition_InputArguments = 6005;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_GetPosition_OutputArguments = 6006;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_Open_InputArguments = 6007;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_Open_OutputArguments = 6008;

        /// <summary>
        /// The identifier for the OpenCount Variable.
        /// </summary>
        public const uint InstructionType_Plan_OpenCount = 6009;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_Read_InputArguments = 6010;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_Read_OutputArguments = 6011;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_SetPosition_InputArguments = 6012;

        /// <summary>
        /// The identifier for the Size Variable.
        /// </summary>
        public const uint InstructionType_Plan_Size = 6013;

        /// <summary>
        /// The identifier for the UserWritable Variable.
        /// </summary>
        public const uint InstructionType_Plan_UserWritable = 6014;

        /// <summary>
        /// The identifier for the Writable Variable.
        /// </summary>
        public const uint InstructionType_Plan_Writable = 6015;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint InstructionType_Plan_Write_InputArguments = 6016;

        /// <summary>
        /// The identifier for the PlanFileFormat Variable.
        /// </summary>
        public const uint InstructionType_PlanFileFormat = 6273;

        /// <summary>
        /// The identifier for the EndTime Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_EndTime = 6052;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Identifier = 6056;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_Identifier = 6027;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_Location = 6031;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_MaterialIdentifier = 6032;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Close_InputArguments = 6111;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition_InputArguments = 6112;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition_OutputArguments = 6113;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open_InputArguments = 6153;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open_OutputArguments = 6179;

        /// <summary>
        /// The identifier for the OpenCount Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_OpenCount = 6180;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read_InputArguments = 6187;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read_OutputArguments = 6190;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_SetPosition_InputArguments = 6200;

        /// <summary>
        /// The identifier for the Size Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Size = 6201;

        /// <summary>
        /// The identifier for the UserWritable Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_UserWritable = 6202;

        /// <summary>
        /// The identifier for the Writable Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Writable = 6227;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Write_InputArguments = 6230;

        /// <summary>
        /// The identifier for the PlanFileFormat Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_Instruction_PlanFileFormat = 6231;

        /// <summary>
        /// The identifier for the NumberInList Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_NumberInList = 6073;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_Identifier = 6036;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_Location = 6065;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_MaterialIdentifier = 6066;

        /// <summary>
        /// The identifier for the StartTime Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_StartTime = 6074;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_State_CurrentState = 6238;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_State_CurrentState_Id = 6233;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_State_InitializingState_CurrentState = 6236;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ProductionPlanType_OrderedObject_Placeholder_State_InitializingState_CurrentState_Id = 6237;

        /// <summary>
        /// The identifier for the Description Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Description = 6110;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Identifier = 6108;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Location = 6107;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_MaterialIdentifier = 6109;

        /// <summary>
        /// The identifier for the Weight Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Weight = 6114;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Weight_EngineeringUnits = 6115;

        /// <summary>
        /// The identifier for the X Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_X = 6221;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_X_EngineeringUnits = 6222;

        /// <summary>
        /// The identifier for the Y Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Y = 6313;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Y_EngineeringUnits = 6326;

        /// <summary>
        /// The identifier for the Z Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Z = 6327;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint AssemblyJobType_InputMaterial_Z_EngineeringUnits = 6328;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint AssemblyJobType_OutputMaterial_Identifier = 6125;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint AssemblyJobType_OutputMaterial_Location = 6126;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint AssemblyJobType_OutputMaterial_MaterialIdentifier = 6127;

        /// <summary>
        /// The identifier for the Description Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Description = 6090;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Identifier = 6072;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Location = 6071;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_MaterialIdentifier = 6089;

        /// <summary>
        /// The identifier for the Weight Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Weight = 6094;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Weight_EngineeringUnits = 6095;

        /// <summary>
        /// The identifier for the X Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_X = 6120;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_X_EngineeringUnits = 6121;

        /// <summary>
        /// The identifier for the Y Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Y = 6122;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Y_EngineeringUnits = 6129;

        /// <summary>
        /// The identifier for the Z Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Z = 6130;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_InputMaterial_Z_EngineeringUnits = 6131;

        /// <summary>
        /// The identifier for the Absorption Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Absorption = 6217;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Absorption_EngineeringUnits = 6218;

        /// <summary>
        /// The identifier for the CoatingClass Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_CoatingClass = 6228;

        /// <summary>
        /// The identifier for the CoatingEmessivity Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_CoatingEmessivity = 6223;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_CoatingEmessivity_EngineeringUnits = 6224;

        /// <summary>
        /// The identifier for the Description Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Description = 6101;

        /// <summary>
        /// The identifier for the ElectricalConductivity Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_ElectricalConductivity = 6184;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_ElectricalConductivity_EngineeringUnits = 6185;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Identifier = 6099;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Location = 6096;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_MaterialIdentifier = 6100;

        /// <summary>
        /// The identifier for the Orientation Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Orientation = 6133;

        /// <summary>
        /// The identifier for the Reflection Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Reflection = 6219;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Reflection_EngineeringUnits = 6220;

        /// <summary>
        /// The identifier for the SignificantSide Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_SignificantSide = 6148;

        /// <summary>
        /// The identifier for the StructureAlignment Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_StructureAlignment = 6152;

        /// <summary>
        /// The identifier for the StructureClass Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_StructureClass = 6149;

        /// <summary>
        /// The identifier for the Transmission Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Transmission = 6225;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Transmission_EngineeringUnits = 6226;

        /// <summary>
        /// The identifier for the Weight Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Weight = 6105;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Weight_EngineeringUnits = 6106;

        /// <summary>
        /// The identifier for the X Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_X = 6138;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_X_EngineeringUnits = 6141;

        /// <summary>
        /// The identifier for the Y Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Y = 6142;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Y_EngineeringUnits = 6151;

        /// <summary>
        /// The identifier for the Z Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Z = 6154;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint CuttingJobType_OutputMaterial_Z_EngineeringUnits = 6155;

        /// <summary>
        /// The identifier for the EndTime Variable.
        /// </summary>
        public const uint ProductionJobType_EndTime = 6054;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint ProductionJobType_Identifier = 6050;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint ProductionJobType_InputMaterials_InputMaterial_Identifier = 6023;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint ProductionJobType_InputMaterials_InputMaterial_Location = 6025;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint ProductionJobType_InputMaterials_InputMaterial_MaterialIdentifier = 6026;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Close_InputArguments = 6037;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_GetPosition_InputArguments = 6038;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_GetPosition_OutputArguments = 6039;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Open_InputArguments = 6040;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Open_OutputArguments = 6041;

        /// <summary>
        /// The identifier for the OpenCount Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_OpenCount = 6042;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Read_InputArguments = 6043;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Read_OutputArguments = 6044;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_SetPosition_InputArguments = 6045;

        /// <summary>
        /// The identifier for the Size Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Size = 6046;

        /// <summary>
        /// The identifier for the UserWritable Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_UserWritable = 6047;

        /// <summary>
        /// The identifier for the Writable Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Writable = 6048;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_Plan_Write_InputArguments = 6049;

        /// <summary>
        /// The identifier for the PlanFileFormat Variable.
        /// </summary>
        public const uint ProductionJobType_Instruction_PlanFileFormat = 6274;

        /// <summary>
        /// The identifier for the JobGroup Variable.
        /// </summary>
        public const uint ProductionJobType_JobGroup = 6055;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_BreakLock_OutputArguments = 6191;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_ExitLock_OutputArguments = 6192;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_InitLock_InputArguments = 6193;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_InitLock_OutputArguments = 6194;

        /// <summary>
        /// The identifier for the Locked Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_Locked = 6195;

        /// <summary>
        /// The identifier for the LockingClient Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_LockingClient = 6196;

        /// <summary>
        /// The identifier for the LockingUser Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_LockingUser = 6197;

        /// <summary>
        /// The identifier for the RemainingLockTime Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_RemainingLockTime = 6198;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionJobType_Lock_RenewLock_OutputArguments = 6199;

        /// <summary>
        /// The identifier for the Name Variable.
        /// </summary>
        public const uint ProductionJobType_Name = 6051;

        /// <summary>
        /// The identifier for the NumberInList Variable.
        /// </summary>
        public const uint ProductionJobType_NumberInList = 6001;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint ProductionJobType_OutputMaterials_OutputMaterial_Identifier = 6033;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint ProductionJobType_OutputMaterials_OutputMaterial_Location = 6034;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint ProductionJobType_OutputMaterials_OutputMaterial_MaterialIdentifier = 6035;

        /// <summary>
        /// The identifier for the Description Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Description = 6137;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Identifier = 6135;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Location = 6134;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_MaterialIdentifier = 6136;

        /// <summary>
        /// The identifier for the Weight Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Weight = 6143;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Weight_EngineeringUnits = 6144;

        /// <summary>
        /// The identifier for the X Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_X = 6343;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_X_EngineeringUnits = 6344;

        /// <summary>
        /// The identifier for the Y Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Y = 6345;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Y_EngineeringUnits = 6346;

        /// <summary>
        /// The identifier for the Z Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Z = 6347;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint ProcessingJobType_InputMaterial_Z_EngineeringUnits = 6348;

        /// <summary>
        /// The identifier for the Description Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Description = 6150;

        /// <summary>
        /// The identifier for the Identifier Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Identifier = 6146;

        /// <summary>
        /// The identifier for the Location Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Location = 6145;

        /// <summary>
        /// The identifier for the MaterialIdentifier Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_MaterialIdentifier = 6147;

        /// <summary>
        /// The identifier for the Weight Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Weight = 6215;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Weight_EngineeringUnits = 6216;

        /// <summary>
        /// The identifier for the X Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_X = 6349;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_X_EngineeringUnits = 6350;

        /// <summary>
        /// The identifier for the Y Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Y = 6351;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Y_EngineeringUnits = 6352;

        /// <summary>
        /// The identifier for the Z Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Z = 6353;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint ProcessingJobType_OutputMaterial_Z_EngineeringUnits = 6354;

        /// <summary>
        /// The identifier for the StartTime Variable.
        /// </summary>
        public const uint ProductionJobType_StartTime = 6053;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint ProductionJobType_State_CurrentState = 6173;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ProductionJobType_State_CurrentState_Id = 6232;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint ProductionJobType_State_InitializingState_CurrentState = 6234;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ProductionJobType_State_InitializingState_CurrentState_Id = 6235;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionType_ChangePositionInList_InputArguments = 6064;

        /// <summary>
        /// The identifier for the CurrentCountOfJobs Variable.
        /// </summary>
        public const uint ProductionType_CurrentCountOfJobs = 6178;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionType_DeleteJob_InputArguments = 6123;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint ProductionType_InsertJob_InputArguments = 6156;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint ProductionType_InsertJob_OutputArguments = 6331;

        /// <summary>
        /// The identifier for the JobListIsRecommendation Variable.
        /// </summary>
        public const uint ProductionType_JobListIsRecommendation = 6269;

        /// <summary>
        /// The identifier for the MaxCountOfJobs Variable.
        /// </summary>
        public const uint ProductionType_MaxCountOfJobs = 6177;

        /// <summary>
        /// The identifier for the SupportedMaterialTypes Variable.
        /// </summary>
        public const uint ProductionType_SupportedMaterialTypes = 6079;

        /// <summary>
        /// The identifier for the StateNumber Variable.
        /// </summary>
        public const uint InitializingSubStateMachineType_Idle_StateNumber = 6298;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint InitializingSubStateMachineType_IdleToQueued_TransitionNumber = 1056;

        /// <summary>
        /// The identifier for the StateNumber Variable.
        /// </summary>
        public const uint InitializingSubStateMachineType_Queued_StateNumber = 6307;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint InitializingSubStateMachineType_QueuedToIdle_TransitionNumber = 1057;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint InitializingSubStateMachineType_QueuedToReleased_TransitionNumber = 1058;

        /// <summary>
        /// The identifier for the StateNumber Variable.
        /// </summary>
        public const uint InitializingSubStateMachineType_Released_StateNumber = 6308;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint InitializingSubStateMachineType_ReleasedToQueued_TransitionNumber = 1059;

        /// <summary>
        /// The identifier for the StateNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_Aborted_StateNumber = 6159;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_AbortedToInitializing_TransitionNumber = 1061;

        /// <summary>
        /// The identifier for the StateNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_Ended_StateNumber = 6160;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_EndedToInitializing_TransitionNumber = 1054;

        /// <summary>
        /// The identifier for the StateNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_Initializing_StateNumber = 6024;

        /// <summary>
        /// The identifier for the CurrentState Variable.
        /// </summary>
        public const uint ProductionStateMachineType_InitializingState_CurrentState = 6282;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ProductionStateMachineType_InitializingState_CurrentState_Id = 6283;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_InitializingToAborted_TransitionNumber = 1062;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_InitializingToRunning_TransitionNumber = 1048;

        /// <summary>
        /// The identifier for the StateNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_Interrupted_StateNumber = 6161;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_InterruptedToAborted_TransitionNumber = 1055;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_InterruptedToRunning_TransitionNumber = 1050;

        /// <summary>
        /// The identifier for the StateNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_Running_StateNumber = 6171;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_RunningToAborted_TransitionNumber = 1051;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_RunningToEnded_TransitionNumber = 1052;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_RunningToInterrupted_TransitionNumber = 1049;

        /// <summary>
        /// The identifier for the TransitionNumber Variable.
        /// </summary>
        public const uint ProductionStateMachineType_RunningToRunning_TransitionNumber = 1060;

        /// <summary>
        /// The identifier for the IsNamespaceSubset Object.
        /// </summary>
        public const uint Namespaces_http___opcfoundation_org_UA_Glass_Flat__IsNamespaceSubset = 6262;

        /// <summary>
        /// The identifier for the NamespacePublicationDate Object.
        /// </summary>
        public const uint Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespacePublicationDate = 6263;

        /// <summary>
        /// The identifier for the NamespaceUri Object.
        /// </summary>
        public const uint Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespaceUri = 6264;

        /// <summary>
        /// The identifier for the NamespaceVersion Object.
        /// </summary>
        public const uint Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespaceVersion = 6265;

        /// <summary>
        /// The identifier for the StaticNodeIdTypes Object.
        /// </summary>
        public const uint Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticNodeIdTypes = 6266;

        /// <summary>
        /// The identifier for the StaticNumericNodeIdRange Object.
        /// </summary>
        public const uint Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticNumericNodeIdRange = 6267;

        /// <summary>
        /// The identifier for the StaticStringNodeIdPattern Object.
        /// </summary>
        public const uint Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticStringNodeIdPattern = 6268;

    }
    #endregion

    #region VariableTypes Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class VariableTypes
    {
    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all DataTypes in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class DataTypeIds
    {
        /// <summary>
        /// The identifier for the CoatingClassEnumeration DataType.
        /// </summary>
        public static readonly ExpandedNodeId CoatingClassEnumeration = new ExpandedNodeId(DataTypes.CoatingClassEnumeration, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CoordinateSystemEnumeration DataType.
        /// </summary>
        public static readonly ExpandedNodeId CoordinateSystemEnumeration = new ExpandedNodeId(DataTypes.CoordinateSystemEnumeration, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SignificantSideEnumeration DataType.
        /// </summary>
        public static readonly ExpandedNodeId SignificantSideEnumeration = new ExpandedNodeId(DataTypes.SignificantSideEnumeration, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerMaterialClass DataType.
        /// </summary>
        public static readonly ExpandedNodeId SpacerMaterialClass = new ExpandedNodeId(DataTypes.SpacerMaterialClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the StructureAlignmentEnumeration DataType.
        /// </summary>
        public static readonly ExpandedNodeId StructureAlignmentEnumeration = new ExpandedNodeId(DataTypes.StructureAlignmentEnumeration, Namespaces.Glass);

        /// <summary>
        /// The identifier for the LimitedString64 DataType.
        /// </summary>
        public static readonly ExpandedNodeId LimitedString64 = new ExpandedNodeId(DataTypes.LimitedString64, Namespaces.Glass);

        /// <summary>
        /// The identifier for the FileFormatType DataType.
        /// </summary>
        public static readonly ExpandedNodeId FileFormatType = new ExpandedNodeId(DataTypes.FileFormatType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the UserProfileType DataType.
        /// </summary>
        public static readonly ExpandedNodeId UserProfileType = new ExpandedNodeId(DataTypes.UserProfileType, Namespaces.Glass);

    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Methods in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class MethodIds
    {
        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Close Method.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Close = new ExpandedNodeId(Methods.ManualFolderType_LocalManuals_Close, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_GetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_GetPosition = new ExpandedNodeId(Methods.ManualFolderType_LocalManuals_GetPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Open Method.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Open = new ExpandedNodeId(Methods.ManualFolderType_LocalManuals_Open, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Read Method.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Read = new ExpandedNodeId(Methods.ManualFolderType_LocalManuals_Read, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_SetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_SetPosition = new ExpandedNodeId(Methods.ManualFolderType_LocalManuals_SetPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Write Method.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Write = new ExpandedNodeId(Methods.ManualFolderType_LocalManuals_Write, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_ChangePositionInList Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_ChangePositionInList = new ExpandedNodeId(Methods.GlassMachineType_Production_ChangePositionInList, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_DeleteJob Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_DeleteJob = new ExpandedNodeId(Methods.GlassMachineType_Production_DeleteJob, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_InsertJob Method.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_InsertJob = new ExpandedNodeId(Methods.GlassMachineType_Production_InsertJob, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Close Method.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Close = new ExpandedNodeId(Methods.InstructionType_Plan_Close, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_GetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_GetPosition = new ExpandedNodeId(Methods.InstructionType_Plan_GetPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Open Method.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Open = new ExpandedNodeId(Methods.InstructionType_Plan_Open, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Read Method.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Read = new ExpandedNodeId(Methods.InstructionType_Plan_Read, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_SetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_SetPosition = new ExpandedNodeId(Methods.InstructionType_Plan_SetPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Write Method.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Write = new ExpandedNodeId(Methods.InstructionType_Plan_Write, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Close Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Close = new ExpandedNodeId(Methods.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Close, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition = new ExpandedNodeId(Methods.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open = new ExpandedNodeId(Methods.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read = new ExpandedNodeId(Methods.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_SetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_SetPosition = new ExpandedNodeId(Methods.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_SetPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Write Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Write = new ExpandedNodeId(Methods.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Write, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_AbortJob Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_AbortJob = new ExpandedNodeId(Methods.ProductionJobType_AbortJob, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Close Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Close = new ExpandedNodeId(Methods.ProductionJobType_Instruction_Plan_Close, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_GetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_GetPosition = new ExpandedNodeId(Methods.ProductionJobType_Instruction_Plan_GetPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Open Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Open = new ExpandedNodeId(Methods.ProductionJobType_Instruction_Plan_Open, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Read Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Read = new ExpandedNodeId(Methods.ProductionJobType_Instruction_Plan_Read, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_SetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_SetPosition = new ExpandedNodeId(Methods.ProductionJobType_Instruction_Plan_SetPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Write Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Write = new ExpandedNodeId(Methods.ProductionJobType_Instruction_Plan_Write, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_BreakLock = new ExpandedNodeId(Methods.ProductionJobType_Lock_BreakLock, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_ExitLock = new ExpandedNodeId(Methods.ProductionJobType_Lock_ExitLock, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_InitLock = new ExpandedNodeId(Methods.ProductionJobType_Lock_InitLock, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_RenewLock = new ExpandedNodeId(Methods.ProductionJobType_Lock_RenewLock, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_QueueJob Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_QueueJob = new ExpandedNodeId(Methods.ProductionJobType_QueueJob, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_ReleaseJob Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_ReleaseJob = new ExpandedNodeId(Methods.ProductionJobType_ReleaseJob, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_SuspendJob Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_SuspendJob = new ExpandedNodeId(Methods.ProductionJobType_SuspendJob, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_ChangePositionInList Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_ChangePositionInList = new ExpandedNodeId(Methods.ProductionType_ChangePositionInList, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_DeleteJob Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_DeleteJob = new ExpandedNodeId(Methods.ProductionType_DeleteJob, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_InsertJob Method.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_InsertJob = new ExpandedNodeId(Methods.ProductionType_InsertJob, Namespaces.Glass);

    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Objects in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the GasMixType_Gas_1 Object.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_Gas_1 = new ExpandedNodeId(Objects.GasMixType_Gas_1, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_Hardener Object.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_Hardener = new ExpandedNodeId(Objects.SealingMaterialType_Hardener, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_Resin Object.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_Resin = new ExpandedNodeId(Objects.SealingMaterialType_Resin, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_Gas_2 Object.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_Gas_2 = new ExpandedNodeId(Objects.GasMixType_Gas_2, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals Object.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals = new ExpandedNodeId(Objects.ManualFolderType_LocalManuals, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Components Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Components = new ExpandedNodeId(Objects.GlassMachineType_Components, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_ConfigurationRules Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_ConfigurationRules = new ExpandedNodeId(Objects.GlassMachineType_ConfigurationRules, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial = new ExpandedNodeId(Objects.AssemblyJobType_InputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_OutputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_OutputMaterial = new ExpandedNodeId(Objects.AssemblyJobType_OutputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial = new ExpandedNodeId(Objects.CuttingJobType_InputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial = new ExpandedNodeId(Objects.CuttingJobType_OutputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_InputMaterials Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_InputMaterials = new ExpandedNodeId(Objects.ProductionJobType_InputMaterials, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_InputMaterials_InputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_InputMaterials_InputMaterial = new ExpandedNodeId(Objects.ProductionJobType_InputMaterials_InputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction = new ExpandedNodeId(Objects.ProductionJobType_Instruction, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan Object.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan = new ExpandedNodeId(Objects.InstructionType_Plan, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan = new ExpandedNodeId(Objects.ProductionJobType_Instruction_Plan, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock = new ExpandedNodeId(Objects.ProductionJobType_Lock, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_OutputMaterials Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_OutputMaterials = new ExpandedNodeId(Objects.ProductionJobType_OutputMaterials, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_OutputMaterials_OutputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_OutputMaterials_OutputMaterial = new ExpandedNodeId(Objects.ProductionJobType_OutputMaterials_OutputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial = new ExpandedNodeId(Objects.ProcessingJobType_InputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial = new ExpandedNodeId(Objects.ProcessingJobType_OutputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_State Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_State = new ExpandedNodeId(Objects.ProductionJobType_State, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Aborted Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Aborted = new ExpandedNodeId(Objects.ProductionStateMachineType_Aborted, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_AbortedToInitializing Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_AbortedToInitializing = new ExpandedNodeId(Objects.ProductionStateMachineType_AbortedToInitializing, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Initializing Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Initializing = new ExpandedNodeId(Objects.ProductionStateMachineType_Initializing, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InitializingState Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InitializingState = new ExpandedNodeId(Objects.ProductionStateMachineType_InitializingState, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_Idle Object.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_Idle = new ExpandedNodeId(Objects.InitializingSubStateMachineType_Idle, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_IdleToQueued Object.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_IdleToQueued = new ExpandedNodeId(Objects.InitializingSubStateMachineType_IdleToQueued, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_Queued Object.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_Queued = new ExpandedNodeId(Objects.InitializingSubStateMachineType_Queued, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_QueuedToIdle Object.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_QueuedToIdle = new ExpandedNodeId(Objects.InitializingSubStateMachineType_QueuedToIdle, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_QueuedToReleased Object.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_QueuedToReleased = new ExpandedNodeId(Objects.InitializingSubStateMachineType_QueuedToReleased, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_Released Object.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_Released = new ExpandedNodeId(Objects.InitializingSubStateMachineType_Released, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_ReleasedToQueued Object.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_ReleasedToQueued = new ExpandedNodeId(Objects.InitializingSubStateMachineType_ReleasedToQueued, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Ended Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Ended = new ExpandedNodeId(Objects.ProductionStateMachineType_Ended, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_EndedToInitializing Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_EndedToInitializing = new ExpandedNodeId(Objects.ProductionStateMachineType_EndedToInitializing, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InitializingToAborted Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InitializingToAborted = new ExpandedNodeId(Objects.ProductionStateMachineType_InitializingToAborted, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InitializingToRunning Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InitializingToRunning = new ExpandedNodeId(Objects.ProductionStateMachineType_InitializingToRunning, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Running Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Running = new ExpandedNodeId(Objects.ProductionStateMachineType_Running, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Interrupted Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Interrupted = new ExpandedNodeId(Objects.ProductionStateMachineType_Interrupted, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InterruptedToAborted Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InterruptedToAborted = new ExpandedNodeId(Objects.ProductionStateMachineType_InterruptedToAborted, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InterruptedToRunning Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InterruptedToRunning = new ExpandedNodeId(Objects.ProductionStateMachineType_InterruptedToRunning, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_RunningToAborted Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_RunningToAborted = new ExpandedNodeId(Objects.ProductionStateMachineType_RunningToAborted, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_RunningToEnded Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_RunningToEnded = new ExpandedNodeId(Objects.ProductionStateMachineType_RunningToEnded, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_RunningToInterrupted Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_RunningToInterrupted = new ExpandedNodeId(Objects.ProductionStateMachineType_RunningToInterrupted, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_RunningToRunning Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_RunningToRunning = new ExpandedNodeId(Objects.ProductionStateMachineType_RunningToRunning, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_State_InitializingState Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_State_InitializingState = new ExpandedNodeId(Objects.ProductionJobType_State_InitializingState, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_InputMaterials Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_InputMaterials = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder_InputMaterials, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder_Instruction, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_OutputMaterials Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_OutputMaterials = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder_OutputMaterials, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_State Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_State = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder_State, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_State_InitializingState Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_State_InitializingState = new ExpandedNodeId(Objects.ProductionPlanType_OrderedObject_Placeholder_State_InitializingState, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_ProductionPlan Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_ProductionPlan = new ExpandedNodeId(Objects.ProductionType_ProductionPlan, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification = new ExpandedNodeId(Objects.GlassMachineType_Identification, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_MaintenanceManuals Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_MaintenanceManuals = new ExpandedNodeId(Objects.GlassMachineType_MaintenanceManuals, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_OperationManuals Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_OperationManuals = new ExpandedNodeId(Objects.GlassMachineType_OperationManuals, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production = new ExpandedNodeId(Objects.GlassMachineType_Production, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_ProductionPlan Object.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_ProductionPlan = new ExpandedNodeId(Objects.GlassMachineType_Production_ProductionPlan, Namespaces.Glass);

        /// <summary>
        /// The identifier for the FileFormatType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId FileFormatType_Encoding_DefaultBinary = new ExpandedNodeId(Objects.FileFormatType_Encoding_DefaultBinary, Namespaces.Glass);

        /// <summary>
        /// The identifier for the FileFormatType_Encoding_DefaultJson Object.
        /// </summary>
        public static readonly ExpandedNodeId FileFormatType_Encoding_DefaultJson = new ExpandedNodeId(Objects.FileFormatType_Encoding_DefaultJson, Namespaces.Glass);

        /// <summary>
        /// The identifier for the FileFormatType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId FileFormatType_Encoding_DefaultXml = new ExpandedNodeId(Objects.FileFormatType_Encoding_DefaultXml, Namespaces.Glass);

        /// <summary>
        /// The identifier for the UserProfileType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId UserProfileType_Encoding_DefaultBinary = new ExpandedNodeId(Objects.UserProfileType_Encoding_DefaultBinary, Namespaces.Glass);

        /// <summary>
        /// The identifier for the UserProfileType_Encoding_DefaultJson Object.
        /// </summary>
        public static readonly ExpandedNodeId UserProfileType_Encoding_DefaultJson = new ExpandedNodeId(Objects.UserProfileType_Encoding_DefaultJson, Namespaces.Glass);

        /// <summary>
        /// The identifier for the UserProfileType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId UserProfileType_Encoding_DefaultXml = new ExpandedNodeId(Objects.UserProfileType_Encoding_DefaultXml, Namespaces.Glass);

        /// <summary>
        /// The identifier for the Namespaces_http___opcfoundation_org_UA_Glass_Flat_ Object.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___opcfoundation_org_UA_Glass_Flat_ = new ExpandedNodeId(Objects.Namespaces_http___opcfoundation_org_UA_Glass_Flat_, Namespaces.Glass);

    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Objects in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the GlassEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId GlassEventType = new ExpandedNodeId(ObjectTypes.GlassEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CommunicationErrorEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CommunicationErrorEventType = new ExpandedNodeId(ObjectTypes.CommunicationErrorEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMaterialEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId GlassMaterialEventType = new ExpandedNodeId(ObjectTypes.GlassMaterialEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the MaterialExitEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId MaterialExitEventType = new ExpandedNodeId(ObjectTypes.MaterialExitEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the MaterialMissingEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId MaterialMissingEventType = new ExpandedNodeId(ObjectTypes.MaterialMissingEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the MaterialReceivedEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId MaterialReceivedEventType = new ExpandedNodeId(ObjectTypes.MaterialReceivedEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the IntermediateStepEvent ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId IntermediateStepEvent = new ExpandedNodeId(ObjectTypes.IntermediateStepEvent, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InterruptedEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId InterruptedEventType = new ExpandedNodeId(ObjectTypes.InterruptedEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the EmergencyButtonPressedEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId EmergencyButtonPressedEventType = new ExpandedNodeId(ObjectTypes.EmergencyButtonPressedEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the MotorTemperatureTooHighEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId MotorTemperatureTooHighEventType = new ExpandedNodeId(ObjectTypes.MotorTemperatureTooHighEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the OpenSecurityFenceType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId OpenSecurityFenceType = new ExpandedNodeId(ObjectTypes.OpenSecurityFenceType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the OutOfJobEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId OutOfJobEventType = new ExpandedNodeId(ObjectTypes.OutOfJobEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessParameterOutOfRangeType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ProcessParameterOutOfRangeType = new ExpandedNodeId(ObjectTypes.ProcessParameterOutOfRangeType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ToolMissingEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ToolMissingEventType = new ExpandedNodeId(ObjectTypes.ToolMissingEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the JobMovedEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId JobMovedEventType = new ExpandedNodeId(ObjectTypes.JobMovedEventType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType = new ExpandedNodeId(ObjectTypes.BaseMaterialType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyType = new ExpandedNodeId(ObjectTypes.AssemblyType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the FoilType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId FoilType = new ExpandedNodeId(ObjectTypes.FoilType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType = new ExpandedNodeId(ObjectTypes.GasMixType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId GlassType = new ExpandedNodeId(ObjectTypes.GlassType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the PackagingType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId PackagingType = new ExpandedNodeId(ObjectTypes.PackagingType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType = new ExpandedNodeId(ObjectTypes.SealingMaterialType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId SpacerType = new ExpandedNodeId(ObjectTypes.SpacerType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ConfigurationRulesType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationRulesType = new ExpandedNodeId(ObjectTypes.ConfigurationRulesType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineIdentificationType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineIdentificationType = new ExpandedNodeId(ObjectTypes.GlassMachineIdentificationType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType = new ExpandedNodeId(ObjectTypes.ManualFolderType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType = new ExpandedNodeId(ObjectTypes.GlassMachineType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType = new ExpandedNodeId(ObjectTypes.InstructionType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType = new ExpandedNodeId(ObjectTypes.ProductionPlanType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType = new ExpandedNodeId(ObjectTypes.ProductionJobType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType = new ExpandedNodeId(ObjectTypes.AssemblyJobType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType = new ExpandedNodeId(ObjectTypes.CuttingJobType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType = new ExpandedNodeId(ObjectTypes.ProcessingJobType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType = new ExpandedNodeId(ObjectTypes.ProductionType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType = new ExpandedNodeId(ObjectTypes.InitializingSubStateMachineType, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType = new ExpandedNodeId(ObjectTypes.ProductionStateMachineType, Namespaces.Glass);

    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all ReferenceTypes in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class ReferenceTypeIds
    {
    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Variables in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the CoatingClassEnumeration_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId CoatingClassEnumeration_EnumStrings = new ExpandedNodeId(Variables.CoatingClassEnumeration_EnumStrings, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CoordinateSystemEnumeration_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId CoordinateSystemEnumeration_EnumStrings = new ExpandedNodeId(Variables.CoordinateSystemEnumeration_EnumStrings, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SignificantSideEnumeration_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId SignificantSideEnumeration_EnumStrings = new ExpandedNodeId(Variables.SignificantSideEnumeration_EnumStrings, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerMaterialClass_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId SpacerMaterialClass_EnumStrings = new ExpandedNodeId(Variables.SpacerMaterialClass_EnumStrings, Namespaces.Glass);

        /// <summary>
        /// The identifier for the StructureAlignmentEnumeration_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId StructureAlignmentEnumeration_EnumStrings = new ExpandedNodeId(Variables.StructureAlignmentEnumeration_EnumStrings, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassEventType_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassEventType_Identifier = new ExpandedNodeId(Variables.GlassEventType_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the IntermediateStepEvent_ProcessStep Variable.
        /// </summary>
        public static readonly ExpandedNodeId IntermediateStepEvent_ProcessStep = new ExpandedNodeId(Variables.IntermediateStepEvent_ProcessStep, Namespaces.Glass);

        /// <summary>
        /// The identifier for the IntermediateStepEvent_Status Variable.
        /// </summary>
        public static readonly ExpandedNodeId IntermediateStepEvent_Status = new ExpandedNodeId(Variables.IntermediateStepEvent_Status, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InterruptedEventType_ProcessName Variable.
        /// </summary>
        public static readonly ExpandedNodeId InterruptedEventType_ProcessName = new ExpandedNodeId(Variables.InterruptedEventType_ProcessName, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassEventType_JobdIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassEventType_JobdIdentifier = new ExpandedNodeId(Variables.GlassEventType_JobdIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the JobMovedEventType_JobdIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId JobMovedEventType_JobdIdentifier = new ExpandedNodeId(Variables.JobMovedEventType_JobdIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the JobMovedEventType_NewPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId JobMovedEventType_NewPosition = new ExpandedNodeId(Variables.JobMovedEventType_NewPosition, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassEventType_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassEventType_Location = new ExpandedNodeId(Variables.GlassEventType_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassEventType_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassEventType_MaterialIdentifier = new ExpandedNodeId(Variables.GlassEventType_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Description Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Description = new ExpandedNodeId(Variables.BaseMaterialType_Description, Namespaces.Glass);

        /// <summary>
        /// The identifier for the FoilType_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId FoilType_Z = new ExpandedNodeId(Variables.FoilType_Z, Namespaces.Glass);

        /// <summary>
        /// The identifier for the FoilType_Z_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId FoilType_Z_EngineeringUnits = new ExpandedNodeId(Variables.FoilType_Z_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_Gas_1_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_Gas_1_Identifier = new ExpandedNodeId(Variables.GasMixType_Gas_1_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_Gas_1_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_Gas_1_Location = new ExpandedNodeId(Variables.GasMixType_Gas_1_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_Gas_1_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_Gas_1_MaterialIdentifier = new ExpandedNodeId(Variables.GasMixType_Gas_1_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_Gas_2_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_Gas_2_Identifier = new ExpandedNodeId(Variables.GasMixType_Gas_2_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_Gas_2_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_Gas_2_Location = new ExpandedNodeId(Variables.GasMixType_Gas_2_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_Gas_2_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_Gas_2_MaterialIdentifier = new ExpandedNodeId(Variables.GasMixType_Gas_2_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_GasFilling Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_GasFilling = new ExpandedNodeId(Variables.GasMixType_GasFilling, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_GasFilling_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_GasFilling_EngineeringUnits = new ExpandedNodeId(Variables.GasMixType_GasFilling_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_GasFilling_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_GasFilling_EURange = new ExpandedNodeId(Variables.GasMixType_GasFilling_EURange, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_MixingRatio Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_MixingRatio = new ExpandedNodeId(Variables.GasMixType_MixingRatio, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_MixingRatio_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_MixingRatio_EngineeringUnits = new ExpandedNodeId(Variables.GasMixType_MixingRatio_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GasMixType_MixingRatio_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId GasMixType_MixingRatio_EURange = new ExpandedNodeId(Variables.GasMixType_MixingRatio_EURange, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Absorption Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Absorption = new ExpandedNodeId(Variables.GlassType_Absorption, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Absorption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Absorption_EngineeringUnits = new ExpandedNodeId(Variables.GlassType_Absorption_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_CoatingClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_CoatingClass = new ExpandedNodeId(Variables.GlassType_CoatingClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_CoatingEmessivity Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_CoatingEmessivity = new ExpandedNodeId(Variables.GlassType_CoatingEmessivity, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_CoatingEmessivity_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_CoatingEmessivity_EngineeringUnits = new ExpandedNodeId(Variables.GlassType_CoatingEmessivity_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_CoatingSubClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_CoatingSubClass = new ExpandedNodeId(Variables.GlassType_CoatingSubClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_ElectricalConductivity Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_ElectricalConductivity = new ExpandedNodeId(Variables.GlassType_ElectricalConductivity, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_ElectricalConductivity_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_ElectricalConductivity_EngineeringUnits = new ExpandedNodeId(Variables.GlassType_ElectricalConductivity_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Orientation = new ExpandedNodeId(Variables.GlassType_Orientation, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Reflection Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Reflection = new ExpandedNodeId(Variables.GlassType_Reflection, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Reflection_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Reflection_EngineeringUnits = new ExpandedNodeId(Variables.GlassType_Reflection_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_SignificantSide Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_SignificantSide = new ExpandedNodeId(Variables.GlassType_SignificantSide, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_StructureAlignment Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_StructureAlignment = new ExpandedNodeId(Variables.GlassType_StructureAlignment, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_StructureClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_StructureClass = new ExpandedNodeId(Variables.GlassType_StructureClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Transmission Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Transmission = new ExpandedNodeId(Variables.GlassType_Transmission, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Transmission_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Transmission_EngineeringUnits = new ExpandedNodeId(Variables.GlassType_Transmission_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_X = new ExpandedNodeId(Variables.GlassType_X, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_X_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_X_EngineeringUnits = new ExpandedNodeId(Variables.GlassType_X_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Y = new ExpandedNodeId(Variables.GlassType_Y, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassType_Y_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassType_Y_EngineeringUnits = new ExpandedNodeId(Variables.GlassType_Y_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Identifier = new ExpandedNodeId(Variables.BaseMaterialType_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Location = new ExpandedNodeId(Variables.BaseMaterialType_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_MaterialIdentifier = new ExpandedNodeId(Variables.BaseMaterialType_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the PackagingType_CornerProtection Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackagingType_CornerProtection = new ExpandedNodeId(Variables.PackagingType_CornerProtection, Namespaces.Glass);

        /// <summary>
        /// The identifier for the PackagingType_PerimeterProtection Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackagingType_PerimeterProtection = new ExpandedNodeId(Variables.PackagingType_PerimeterProtection, Namespaces.Glass);

        /// <summary>
        /// The identifier for the PackagingType_Spacer Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackagingType_Spacer = new ExpandedNodeId(Variables.PackagingType_Spacer, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_AddOnMaterial Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_AddOnMaterial = new ExpandedNodeId(Variables.SealingMaterialType_AddOnMaterial, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_Hardener_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_Hardener_Identifier = new ExpandedNodeId(Variables.SealingMaterialType_Hardener_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_Hardener_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_Hardener_Location = new ExpandedNodeId(Variables.SealingMaterialType_Hardener_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_Hardener_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_Hardener_MaterialIdentifier = new ExpandedNodeId(Variables.SealingMaterialType_Hardener_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_MixingRatio Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_MixingRatio = new ExpandedNodeId(Variables.SealingMaterialType_MixingRatio, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_MixingRatio_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_MixingRatio_EngineeringUnits = new ExpandedNodeId(Variables.SealingMaterialType_MixingRatio_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_Resin_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_Resin_Identifier = new ExpandedNodeId(Variables.SealingMaterialType_Resin_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_Resin_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_Resin_Location = new ExpandedNodeId(Variables.SealingMaterialType_Resin_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SealingMaterialType_Resin_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId SealingMaterialType_Resin_MaterialIdentifier = new ExpandedNodeId(Variables.SealingMaterialType_Resin_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerType_Filling Variable.
        /// </summary>
        public static readonly ExpandedNodeId SpacerType_Filling = new ExpandedNodeId(Variables.SpacerType_Filling, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerType_Filling_FillLevel Variable.
        /// </summary>
        public static readonly ExpandedNodeId SpacerType_Filling_FillLevel = new ExpandedNodeId(Variables.SpacerType_Filling_FillLevel, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerType_Filling_FillLevel_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId SpacerType_Filling_FillLevel_EngineeringUnits = new ExpandedNodeId(Variables.SpacerType_Filling_FillLevel_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerType_SealantDepth Variable.
        /// </summary>
        public static readonly ExpandedNodeId SpacerType_SealantDepth = new ExpandedNodeId(Variables.SpacerType_SealantDepth, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerType_SealantDepth_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId SpacerType_SealantDepth_EngineeringUnits = new ExpandedNodeId(Variables.SpacerType_SealantDepth_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerType_SpacerMaterialClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId SpacerType_SpacerMaterialClass = new ExpandedNodeId(Variables.SpacerType_SpacerMaterialClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the SpacerType_SpacerMaterialSubClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId SpacerType_SpacerMaterialSubClass = new ExpandedNodeId(Variables.SpacerType_SpacerMaterialSubClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Weight Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Weight = new ExpandedNodeId(Variables.BaseMaterialType_Weight, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Weight_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Weight_EngineeringUnits = new ExpandedNodeId(Variables.BaseMaterialType_Weight_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_X = new ExpandedNodeId(Variables.BaseMaterialType_X, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_X_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_X_EngineeringUnits = new ExpandedNodeId(Variables.BaseMaterialType_X_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Y = new ExpandedNodeId(Variables.BaseMaterialType_Y, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Y_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Y_EngineeringUnits = new ExpandedNodeId(Variables.BaseMaterialType_Y_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Z = new ExpandedNodeId(Variables.BaseMaterialType_Z, Namespaces.Glass);

        /// <summary>
        /// The identifier for the BaseMaterialType_Z_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseMaterialType_Z_EngineeringUnits = new ExpandedNodeId(Variables.BaseMaterialType_Z_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ConfigurationRulesType_AllowedEngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationRulesType_AllowedEngineeringUnits = new ExpandedNodeId(Variables.ConfigurationRulesType_AllowedEngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ConfigurationRulesType_AllowedFileFormats Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationRulesType_AllowedFileFormats = new ExpandedNodeId(Variables.ConfigurationRulesType_AllowedFileFormats, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ConfigurationRulesType_MachineProcessingCoordinateSystem Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationRulesType_MachineProcessingCoordinateSystem = new ExpandedNodeId(Variables.ConfigurationRulesType_MachineProcessingCoordinateSystem, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineIdentificationType_LoggedInProfiles Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineIdentificationType_LoggedInProfiles = new ExpandedNodeId(Variables.GlassMachineIdentificationType_LoggedInProfiles, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Close_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Close_InputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_Close_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_GetPosition_InputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_GetPosition_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_GetPosition_OutputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_GetPosition_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Open_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Open_InputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_Open_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Open_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Open_OutputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_Open_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_OpenCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_OpenCount = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_OpenCount, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Read_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Read_InputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_Read_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Read_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Read_OutputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_Read_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_SetPosition_InputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_SetPosition_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Size Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Size = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_Size, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_UserWritable Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_UserWritable = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_UserWritable, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Writable Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Writable = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_Writable, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_LocalManuals_Write_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_LocalManuals_Write_InputArguments = new ExpandedNodeId(Variables.ManualFolderType_LocalManuals_Write_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ManualFolderType_ExternalManuals Variable.
        /// </summary>
        public static readonly ExpandedNodeId ManualFolderType_ExternalManuals = new ExpandedNodeId(Variables.ManualFolderType_ExternalManuals, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_ConfigurationRules_MachineProcessingCoordinateSystem Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_ConfigurationRules_MachineProcessingCoordinateSystem = new ExpandedNodeId(Variables.GlassMachineType_ConfigurationRules_MachineProcessingCoordinateSystem, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_AssetId Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_AssetId = new ExpandedNodeId(Variables.GlassMachineType_Identification_AssetId, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_DeviceClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_DeviceClass = new ExpandedNodeId(Variables.GlassMachineType_Identification_DeviceClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_LoggedInProfiles Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_LoggedInProfiles = new ExpandedNodeId(Variables.GlassMachineType_Identification_LoggedInProfiles, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_Manufacturer = new ExpandedNodeId(Variables.GlassMachineType_Identification_Manufacturer, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_ManufacturerUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_ManufacturerUri = new ExpandedNodeId(Variables.GlassMachineType_Identification_ManufacturerUri, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_Model = new ExpandedNodeId(Variables.GlassMachineType_Identification_Model, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_ProductInstanceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_ProductInstanceUri = new ExpandedNodeId(Variables.GlassMachineType_Identification_ProductInstanceUri, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_SerialNumber = new ExpandedNodeId(Variables.GlassMachineType_Identification_SerialNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Identification_YearOfConstruction Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Identification_YearOfConstruction = new ExpandedNodeId(Variables.GlassMachineType_Identification_YearOfConstruction, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_ChangePositionInList_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_ChangePositionInList_InputArguments = new ExpandedNodeId(Variables.GlassMachineType_Production_ChangePositionInList_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_CurrentCountOfJobs Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_CurrentCountOfJobs = new ExpandedNodeId(Variables.GlassMachineType_Production_CurrentCountOfJobs, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_DeleteJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_DeleteJob_InputArguments = new ExpandedNodeId(Variables.GlassMachineType_Production_DeleteJob_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_InsertJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_InsertJob_InputArguments = new ExpandedNodeId(Variables.GlassMachineType_Production_InsertJob_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_InsertJob_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_InsertJob_OutputArguments = new ExpandedNodeId(Variables.GlassMachineType_Production_InsertJob_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_JobListIsRecommendation Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_JobListIsRecommendation = new ExpandedNodeId(Variables.GlassMachineType_Production_JobListIsRecommendation, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_MaxCountOfJobs Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_MaxCountOfJobs = new ExpandedNodeId(Variables.GlassMachineType_Production_MaxCountOfJobs, Namespaces.Glass);

        /// <summary>
        /// The identifier for the GlassMachineType_Production_SupportedMaterialTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId GlassMachineType_Production_SupportedMaterialTypes = new ExpandedNodeId(Variables.GlassMachineType_Production_SupportedMaterialTypes, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Close_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Close_InputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_Close_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_GetPosition_InputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_GetPosition_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_GetPosition_OutputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_GetPosition_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Open_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Open_InputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_Open_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Open_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Open_OutputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_Open_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_OpenCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_OpenCount = new ExpandedNodeId(Variables.InstructionType_Plan_OpenCount, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Read_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Read_InputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_Read_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Read_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Read_OutputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_Read_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_SetPosition_InputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_SetPosition_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Size Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Size = new ExpandedNodeId(Variables.InstructionType_Plan_Size, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_UserWritable Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_UserWritable = new ExpandedNodeId(Variables.InstructionType_Plan_UserWritable, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Writable Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Writable = new ExpandedNodeId(Variables.InstructionType_Plan_Writable, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_Plan_Write_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_Plan_Write_InputArguments = new ExpandedNodeId(Variables.InstructionType_Plan_Write_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InstructionType_PlanFileFormat Variable.
        /// </summary>
        public static readonly ExpandedNodeId InstructionType_PlanFileFormat = new ExpandedNodeId(Variables.InstructionType_PlanFileFormat, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_EndTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_EndTime = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_EndTime, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Identifier = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_Identifier = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_Location = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_InputMaterials_InputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Close_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Close_InputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Close_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition_InputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition_OutputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_GetPosition_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open_InputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open_OutputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Open_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_OpenCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_OpenCount = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_OpenCount, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read_InputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read_OutputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Read_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_SetPosition_InputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_SetPosition_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Size Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Size = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Size, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_UserWritable Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_UserWritable = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_UserWritable, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Writable Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Writable = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Writable, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Write_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Write_InputArguments = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_Plan_Write_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_Instruction_PlanFileFormat Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_Instruction_PlanFileFormat = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_Instruction_PlanFileFormat, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_NumberInList Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_NumberInList = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_NumberInList, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_Identifier = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_Location = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_OutputMaterials_OutputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_StartTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_StartTime = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_StartTime, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_State_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_State_CurrentState = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_State_CurrentState, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_State_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_State_CurrentState_Id = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_State_CurrentState_Id, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_State_InitializingState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_State_InitializingState_CurrentState = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_State_InitializingState_CurrentState, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionPlanType_OrderedObject_Placeholder_State_InitializingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionPlanType_OrderedObject_Placeholder_State_InitializingState_CurrentState_Id = new ExpandedNodeId(Variables.ProductionPlanType_OrderedObject_Placeholder_State_InitializingState_CurrentState_Id, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Description Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Description = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Description, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Identifier = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Location = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Weight Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Weight = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Weight, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Weight_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Weight_EngineeringUnits = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Weight_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_X = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_X, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_X_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_X_EngineeringUnits = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_X_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Y = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Y, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Y_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Y_EngineeringUnits = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Y_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Z = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Z, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_InputMaterial_Z_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_InputMaterial_Z_EngineeringUnits = new ExpandedNodeId(Variables.AssemblyJobType_InputMaterial_Z_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_OutputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_OutputMaterial_Identifier = new ExpandedNodeId(Variables.AssemblyJobType_OutputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_OutputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_OutputMaterial_Location = new ExpandedNodeId(Variables.AssemblyJobType_OutputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the AssemblyJobType_OutputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId AssemblyJobType_OutputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.AssemblyJobType_OutputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Description Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Description = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Description, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Identifier = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Location = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Weight Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Weight = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Weight, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Weight_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Weight_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Weight_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_X = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_X, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_X_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_X_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_X_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Y = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Y, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Y_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Y_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Y_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Z = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Z, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_InputMaterial_Z_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_InputMaterial_Z_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_InputMaterial_Z_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Absorption Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Absorption = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Absorption, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Absorption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Absorption_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Absorption_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_CoatingClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_CoatingClass = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_CoatingClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_CoatingEmessivity Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_CoatingEmessivity = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_CoatingEmessivity, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_CoatingEmessivity_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_CoatingEmessivity_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_CoatingEmessivity_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Description Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Description = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Description, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_ElectricalConductivity Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_ElectricalConductivity = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_ElectricalConductivity, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_ElectricalConductivity_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_ElectricalConductivity_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_ElectricalConductivity_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Identifier = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Location = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Orientation = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Orientation, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Reflection Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Reflection = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Reflection, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Reflection_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Reflection_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Reflection_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_SignificantSide Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_SignificantSide = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_SignificantSide, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_StructureAlignment Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_StructureAlignment = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_StructureAlignment, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_StructureClass Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_StructureClass = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_StructureClass, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Transmission Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Transmission = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Transmission, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Transmission_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Transmission_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Transmission_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Weight Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Weight = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Weight, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Weight_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Weight_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Weight_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_X = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_X, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_X_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_X_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_X_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Y = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Y, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Y_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Y_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Y_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Z = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Z, Namespaces.Glass);

        /// <summary>
        /// The identifier for the CuttingJobType_OutputMaterial_Z_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId CuttingJobType_OutputMaterial_Z_EngineeringUnits = new ExpandedNodeId(Variables.CuttingJobType_OutputMaterial_Z_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_EndTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_EndTime = new ExpandedNodeId(Variables.ProductionJobType_EndTime, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Identifier = new ExpandedNodeId(Variables.ProductionJobType_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_InputMaterials_InputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_InputMaterials_InputMaterial_Identifier = new ExpandedNodeId(Variables.ProductionJobType_InputMaterials_InputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_InputMaterials_InputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_InputMaterials_InputMaterial_Location = new ExpandedNodeId(Variables.ProductionJobType_InputMaterials_InputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_InputMaterials_InputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_InputMaterials_InputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.ProductionJobType_InputMaterials_InputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Close_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Close_InputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_Close_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_GetPosition_InputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_GetPosition_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_GetPosition_OutputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_GetPosition_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Open_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Open_InputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_Open_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Open_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Open_OutputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_Open_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_OpenCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_OpenCount = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_OpenCount, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Read_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Read_InputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_Read_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Read_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Read_OutputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_Read_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_SetPosition_InputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_SetPosition_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Size Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Size = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_Size, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_UserWritable Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_UserWritable = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_UserWritable, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Writable Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Writable = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_Writable, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_Plan_Write_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_Plan_Write_InputArguments = new ExpandedNodeId(Variables.ProductionJobType_Instruction_Plan_Write_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Instruction_PlanFileFormat Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Instruction_PlanFileFormat = new ExpandedNodeId(Variables.ProductionJobType_Instruction_PlanFileFormat, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_JobGroup Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_JobGroup = new ExpandedNodeId(Variables.ProductionJobType_JobGroup, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Variables.ProductionJobType_Lock_BreakLock_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Variables.ProductionJobType_Lock_ExitLock_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_InitLock_InputArguments = new ExpandedNodeId(Variables.ProductionJobType_Lock_InitLock_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_InitLock_OutputArguments = new ExpandedNodeId(Variables.ProductionJobType_Lock_InitLock_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_Locked = new ExpandedNodeId(Variables.ProductionJobType_Lock_Locked, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_LockingClient = new ExpandedNodeId(Variables.ProductionJobType_Lock_LockingClient, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_LockingUser = new ExpandedNodeId(Variables.ProductionJobType_Lock_LockingUser, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_RemainingLockTime = new ExpandedNodeId(Variables.ProductionJobType_Lock_RemainingLockTime, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Variables.ProductionJobType_Lock_RenewLock_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_Name = new ExpandedNodeId(Variables.ProductionJobType_Name, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_NumberInList Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_NumberInList = new ExpandedNodeId(Variables.ProductionJobType_NumberInList, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_OutputMaterials_OutputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_OutputMaterials_OutputMaterial_Identifier = new ExpandedNodeId(Variables.ProductionJobType_OutputMaterials_OutputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_OutputMaterials_OutputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_OutputMaterials_OutputMaterial_Location = new ExpandedNodeId(Variables.ProductionJobType_OutputMaterials_OutputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_OutputMaterials_OutputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_OutputMaterials_OutputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.ProductionJobType_OutputMaterials_OutputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Description Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Description = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Description, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Identifier = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Location = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Weight Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Weight = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Weight, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Weight_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Weight_EngineeringUnits = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Weight_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_X = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_X, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_X_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_X_EngineeringUnits = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_X_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Y = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Y, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Y_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Y_EngineeringUnits = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Y_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Z = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Z, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_InputMaterial_Z_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_InputMaterial_Z_EngineeringUnits = new ExpandedNodeId(Variables.ProcessingJobType_InputMaterial_Z_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Description Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Description = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Description, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Identifier = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Identifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Location Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Location = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Location, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_MaterialIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_MaterialIdentifier = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_MaterialIdentifier, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Weight Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Weight = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Weight, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Weight_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Weight_EngineeringUnits = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Weight_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_X = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_X, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_X_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_X_EngineeringUnits = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_X_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Y = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Y, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Y_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Y_EngineeringUnits = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Y_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Z = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Z, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProcessingJobType_OutputMaterial_Z_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingJobType_OutputMaterial_Z_EngineeringUnits = new ExpandedNodeId(Variables.ProcessingJobType_OutputMaterial_Z_EngineeringUnits, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_StartTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_StartTime = new ExpandedNodeId(Variables.ProductionJobType_StartTime, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_State_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_State_CurrentState = new ExpandedNodeId(Variables.ProductionJobType_State_CurrentState, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_State_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_State_CurrentState_Id = new ExpandedNodeId(Variables.ProductionJobType_State_CurrentState_Id, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_State_InitializingState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_State_InitializingState_CurrentState = new ExpandedNodeId(Variables.ProductionJobType_State_InitializingState_CurrentState, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionJobType_State_InitializingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionJobType_State_InitializingState_CurrentState_Id = new ExpandedNodeId(Variables.ProductionJobType_State_InitializingState_CurrentState_Id, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_ChangePositionInList_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_ChangePositionInList_InputArguments = new ExpandedNodeId(Variables.ProductionType_ChangePositionInList_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_CurrentCountOfJobs Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_CurrentCountOfJobs = new ExpandedNodeId(Variables.ProductionType_CurrentCountOfJobs, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_DeleteJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_DeleteJob_InputArguments = new ExpandedNodeId(Variables.ProductionType_DeleteJob_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_InsertJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_InsertJob_InputArguments = new ExpandedNodeId(Variables.ProductionType_InsertJob_InputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_InsertJob_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_InsertJob_OutputArguments = new ExpandedNodeId(Variables.ProductionType_InsertJob_OutputArguments, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_JobListIsRecommendation Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_JobListIsRecommendation = new ExpandedNodeId(Variables.ProductionType_JobListIsRecommendation, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_MaxCountOfJobs Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_MaxCountOfJobs = new ExpandedNodeId(Variables.ProductionType_MaxCountOfJobs, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionType_SupportedMaterialTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionType_SupportedMaterialTypes = new ExpandedNodeId(Variables.ProductionType_SupportedMaterialTypes, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_Idle_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_Idle_StateNumber = new ExpandedNodeId(Variables.InitializingSubStateMachineType_Idle_StateNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_IdleToQueued_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_IdleToQueued_TransitionNumber = new ExpandedNodeId(Variables.InitializingSubStateMachineType_IdleToQueued_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_Queued_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_Queued_StateNumber = new ExpandedNodeId(Variables.InitializingSubStateMachineType_Queued_StateNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_QueuedToIdle_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_QueuedToIdle_TransitionNumber = new ExpandedNodeId(Variables.InitializingSubStateMachineType_QueuedToIdle_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_QueuedToReleased_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_QueuedToReleased_TransitionNumber = new ExpandedNodeId(Variables.InitializingSubStateMachineType_QueuedToReleased_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_Released_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_Released_StateNumber = new ExpandedNodeId(Variables.InitializingSubStateMachineType_Released_StateNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the InitializingSubStateMachineType_ReleasedToQueued_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId InitializingSubStateMachineType_ReleasedToQueued_TransitionNumber = new ExpandedNodeId(Variables.InitializingSubStateMachineType_ReleasedToQueued_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Aborted_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Aborted_StateNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_Aborted_StateNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_AbortedToInitializing_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_AbortedToInitializing_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_AbortedToInitializing_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Ended_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Ended_StateNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_Ended_StateNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_EndedToInitializing_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_EndedToInitializing_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_EndedToInitializing_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Initializing_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Initializing_StateNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_Initializing_StateNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InitializingState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InitializingState_CurrentState = new ExpandedNodeId(Variables.ProductionStateMachineType_InitializingState_CurrentState, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InitializingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InitializingState_CurrentState_Id = new ExpandedNodeId(Variables.ProductionStateMachineType_InitializingState_CurrentState_Id, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InitializingToAborted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InitializingToAborted_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_InitializingToAborted_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InitializingToRunning_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InitializingToRunning_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_InitializingToRunning_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Interrupted_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Interrupted_StateNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_Interrupted_StateNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InterruptedToAborted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InterruptedToAborted_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_InterruptedToAborted_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_InterruptedToRunning_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_InterruptedToRunning_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_InterruptedToRunning_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_Running_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_Running_StateNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_Running_StateNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_RunningToAborted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_RunningToAborted_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_RunningToAborted_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_RunningToEnded_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_RunningToEnded_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_RunningToEnded_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_RunningToInterrupted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_RunningToInterrupted_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_RunningToInterrupted_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the ProductionStateMachineType_RunningToRunning_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductionStateMachineType_RunningToRunning_TransitionNumber = new ExpandedNodeId(Variables.ProductionStateMachineType_RunningToRunning_TransitionNumber, Namespaces.Glass);

        /// <summary>
        /// The identifier for the Namespaces_http___opcfoundation_org_UA_Glass_Flat__IsNamespaceSubset Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___opcfoundation_org_UA_Glass_Flat__IsNamespaceSubset = new ExpandedNodeId(Variables.Namespaces_http___opcfoundation_org_UA_Glass_Flat__IsNamespaceSubset, Namespaces.Glass);

        /// <summary>
        /// The identifier for the Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespacePublicationDate Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespacePublicationDate = new ExpandedNodeId(Variables.Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespacePublicationDate, Namespaces.Glass);

        /// <summary>
        /// The identifier for the Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespaceUri = new ExpandedNodeId(Variables.Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespaceUri, Namespaces.Glass);

        /// <summary>
        /// The identifier for the Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespaceVersion Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespaceVersion = new ExpandedNodeId(Variables.Namespaces_http___opcfoundation_org_UA_Glass_Flat__NamespaceVersion, Namespaces.Glass);

        /// <summary>
        /// The identifier for the Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticNodeIdTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticNodeIdTypes = new ExpandedNodeId(Variables.Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticNodeIdTypes, Namespaces.Glass);

        /// <summary>
        /// The identifier for the Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticNumericNodeIdRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticNumericNodeIdRange = new ExpandedNodeId(Variables.Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticNumericNodeIdRange, Namespaces.Glass);

        /// <summary>
        /// The identifier for the Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticStringNodeIdPattern Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticStringNodeIdPattern = new ExpandedNodeId(Variables.Namespaces_http___opcfoundation_org_UA_Glass_Flat__StaticStringNodeIdPattern, Namespaces.Glass);

    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all VariableType in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.9")]
    public static partial class VariableTypeIds
    {
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model.
    /// </summary>
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the &lt;CPIdentifier&gt; component.
        /// </summary>
        public const string CPIdentifier = "<CPIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;CalibrationValue&gt; component.
        /// </summary>
        public const string CalibrationValue = "<CalibrationValue>";
        /// <summary>
        /// The BrowseName for the &lt;CapacityRange&gt; component.
        /// </summary>
        public const string CapacityRange = "<CapacityRange>";
        /// <summary>
        /// The BrowseName for the &lt;Component&gt; component.
        /// </summary>
        public const string Component = "<Component>";
        /// <summary>
        /// The BrowseName for the &lt;ControlChannel&gt; component.
        /// </summary>
        public const string ControlChannel = "<ControlChannel>";
        /// <summary>
        /// The BrowseName for the &lt;DocumentFileId&gt; component.
        /// </summary>
        public const string DocumentFileId = "<DocumentFileId>";
        /// <summary>
        /// The BrowseName for the &lt;DocumentIdentifier&gt; component.
        /// </summary>
        public const string DocumentIdentifier = "<DocumentIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;GroupIdentifier&gt; component.
        /// </summary>
        public const string GroupIdentifier = "<GroupIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;ImageIdentifier&gt; component.
        /// </summary>
        public const string ImageIdentifier = "<ImageIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;InputMaterial&gt; component.
        /// </summary>
        public const string InputMaterial = "<InputMaterial>";
        /// <summary>
        /// The BrowseName for the &lt;LocalManuals&gt; component.
        /// </summary>
        public const string LocalManuals = "<LocalManuals>";
        /// <summary>
        /// The BrowseName for the &lt;NetworkIdentifier&gt; component.
        /// </summary>
        public const string NetworkIdentifier = "<NetworkIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;ObjectIdentifier&gt; component.
        /// </summary>
        public const string ObjectIdentifier = "<ObjectIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;OutputMaterial&gt; component.
        /// </summary>
        public const string OutputMaterial = "<OutputMaterial>";
        /// <summary>
        /// The BrowseName for the &lt;ParameterIdentifier&gt; component.
        /// </summary>
        public const string ParameterIdentifier = "<ParameterIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;ProfileIdentifier&gt; component.
        /// </summary>
        public const string ProfileIdentifier = "<ProfileIdentifier>";
        /// <summary>
        /// The BrowseName for the &lt;ProtocolSupportIdentifier&gt; component.
        /// </summary>
        public const string ProtocolSupportIdentifier = "<ProtocolSupportIdentifier>";
        /// <summary>
        /// The BrowseName for the Abort component.
        /// </summary>
        public const string Abort = "Abort";
        /// <summary>
        /// The BrowseName for the AbortJob component.
        /// </summary>
        public const string AbortJob = "AbortJob";
        /// <summary>
        /// The BrowseName for the Aborted component.
        /// </summary>
        public const string Aborted = "Aborted";
        /// <summary>
        /// The BrowseName for the AbortedToInitializing component.
        /// </summary>
        public const string AbortedToInitializing = "AbortedToInitializing";
        /// <summary>
        /// The BrowseName for the Absorption component.
        /// </summary>
        public const string Absorption = "Absorption";
        /// <summary>
        /// The BrowseName for the AcousticSignalType component.
        /// </summary>
        public const string AcousticSignalType = "AcousticSignalType";
        /// <summary>
        /// The BrowseName for the AcousticSignals component.
        /// </summary>
        public const string AcousticSignals = "AcousticSignals";
        /// <summary>
        /// The BrowseName for the ActualMode component.
        /// </summary>
        public const string ActualMode = "ActualMode";
        /// <summary>
        /// The BrowseName for the AddOnMaterial component.
        /// </summary>
        public const string AddOnMaterial = "AddOnMaterial";
        /// <summary>
        /// The BrowseName for the AllowedEngineeringUnits component.
        /// </summary>
        public const string AllowedEngineeringUnits = "AllowedEngineeringUnits";
        /// <summary>
        /// The BrowseName for the AllowedFileFormats component.
        /// </summary>
        public const string AllowedFileFormats = "AllowedFileFormats";
        /// <summary>
        /// The BrowseName for the AssemblyJobType component.
        /// </summary>
        public const string AssemblyJobType = "AssemblyJobType";
        /// <summary>
        /// The BrowseName for the AssemblyType component.
        /// </summary>
        public const string AssemblyType = "AssemblyType";
        /// <summary>
        /// The BrowseName for the AssetId component.
        /// </summary>
        public const string AssetId = "AssetId";
        /// <summary>
        /// The BrowseName for the AudioSample component.
        /// </summary>
        public const string AudioSample = "AudioSample";
        /// <summary>
        /// The BrowseName for the BaseCalibrationTargetCategoryType component.
        /// </summary>
        public const string BaseCalibrationTargetCategoryType = "BaseCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the BaseLifetimeIndicationType component.
        /// </summary>
        public const string BaseLifetimeIndicationType = "BaseLifetimeIndicationType";
        /// <summary>
        /// The BrowseName for the BaseMaterialType component.
        /// </summary>
        public const string BaseMaterialType = "BaseMaterialType";
        /// <summary>
        /// The BrowseName for the BasicStacklightType component.
        /// </summary>
        public const string BasicStacklightType = "BasicStacklightType";
        /// <summary>
        /// The BrowseName for the BlockType component.
        /// </summary>
        public const string BlockType = "BlockType";
        /// <summary>
        /// The BrowseName for the BreakLock component.
        /// </summary>
        public const string BreakLock = "BreakLock";
        /// <summary>
        /// The BrowseName for the CachedLoadingType component.
        /// </summary>
        public const string CachedLoadingType = "CachedLoadingType";
        /// <summary>
        /// The BrowseName for the CalibrationTargetCategory component.
        /// </summary>
        public const string CalibrationTargetCategory = "CalibrationTargetCategory";
        /// <summary>
        /// The BrowseName for the CalibrationTargetFeatures component.
        /// </summary>
        public const string CalibrationTargetFeatures = "CalibrationTargetFeatures";
        /// <summary>
        /// The BrowseName for the CalibrationTargetType component.
        /// </summary>
        public const string CalibrationTargetType = "CalibrationTargetType";
        /// <summary>
        /// The BrowseName for the CalibrationValueType component.
        /// </summary>
        public const string CalibrationValueType = "CalibrationValueType";
        /// <summary>
        /// The BrowseName for the CapacityRangeType component.
        /// </summary>
        public const string CapacityRangeType = "CapacityRangeType";
        /// <summary>
        /// The BrowseName for the CertificateUri component.
        /// </summary>
        public const string CertificateUri = "CertificateUri";
        /// <summary>
        /// The BrowseName for the ChangeLogReference component.
        /// </summary>
        public const string ChangeLogReference = "ChangeLogReference";
        /// <summary>
        /// The BrowseName for the ChangePositionInList component.
        /// </summary>
        public const string ChangePositionInList = "ChangePositionInList";
        /// <summary>
        /// The BrowseName for the ChannelColor component.
        /// </summary>
        public const string ChannelColor = "ChannelColor";
        /// <summary>
        /// The BrowseName for the CheckFunctionAlarmType component.
        /// </summary>
        public const string CheckFunctionAlarmType = "CheckFunctionAlarmType";
        /// <summary>
        /// The BrowseName for the CoatingClass component.
        /// </summary>
        public const string CoatingClass = "CoatingClass";
        /// <summary>
        /// The BrowseName for the CoatingClassEnumeration component.
        /// </summary>
        public const string CoatingClassEnumeration = "CoatingClassEnumeration";
        /// <summary>
        /// The BrowseName for the CoatingEmessivity component.
        /// </summary>
        public const string CoatingEmessivity = "CoatingEmessivity";
        /// <summary>
        /// The BrowseName for the CoatingSubClass component.
        /// </summary>
        public const string CoatingSubClass = "CoatingSubClass";
        /// <summary>
        /// The BrowseName for the CommunicationErrorEventType component.
        /// </summary>
        public const string CommunicationErrorEventType = "CommunicationErrorEventType";
        /// <summary>
        /// The BrowseName for the ComponentName component.
        /// </summary>
        public const string ComponentName = "ComponentName";
        /// <summary>
        /// The BrowseName for the ComponentType component.
        /// </summary>
        public const string ComponentType = "ComponentType";
        /// <summary>
        /// The BrowseName for the Components component.
        /// </summary>
        public const string Components = "Components";
        /// <summary>
        /// The BrowseName for the ConfigurableObjectType component.
        /// </summary>
        public const string ConfigurableObjectType = "ConfigurableObjectType";
        /// <summary>
        /// The BrowseName for the ConfigurationRules component.
        /// </summary>
        public const string ConfigurationRules = "ConfigurationRules";
        /// <summary>
        /// The BrowseName for the ConfigurationRulesType component.
        /// </summary>
        public const string ConfigurationRulesType = "ConfigurationRulesType";
        /// <summary>
        /// The BrowseName for the Confirm component.
        /// </summary>
        public const string Confirm = "Confirm";
        /// <summary>
        /// The BrowseName for the Confirmation component.
        /// </summary>
        public const string Confirmation = "Confirmation";
        /// <summary>
        /// The BrowseName for the ConfirmationStateMachineType component.
        /// </summary>
        public const string ConfirmationStateMachineType = "ConfirmationStateMachineType";
        /// <summary>
        /// The BrowseName for the ConfirmationTimeout component.
        /// </summary>
        public const string ConfirmationTimeout = "ConfirmationTimeout";
        /// <summary>
        /// The BrowseName for the ConnectionPointType component.
        /// </summary>
        public const string ConnectionPointType = "ConnectionPointType";
        /// <summary>
        /// The BrowseName for the ConnectsTo component.
        /// </summary>
        public const string ConnectsTo = "ConnectsTo";
        /// <summary>
        /// The BrowseName for the ConnectsToParent component.
        /// </summary>
        public const string ConnectsToParent = "ConnectsToParent";
        /// <summary>
        /// The BrowseName for the ControlChannelType component.
        /// </summary>
        public const string ControlChannelType = "ControlChannelType";
        /// <summary>
        /// The BrowseName for the CoordinateSystemEnumeration component.
        /// </summary>
        public const string CoordinateSystemEnumeration = "CoordinateSystemEnumeration";
        /// <summary>
        /// The BrowseName for the CornerProtection component.
        /// </summary>
        public const string CornerProtection = "CornerProtection";
        /// <summary>
        /// The BrowseName for the CurrentCountOfJobs component.
        /// </summary>
        public const string CurrentCountOfJobs = "CurrentCountOfJobs";
        /// <summary>
        /// The BrowseName for the CurrentVersion component.
        /// </summary>
        public const string CurrentVersion = "CurrentVersion";
        /// <summary>
        /// The BrowseName for the CuttingJobType component.
        /// </summary>
        public const string CuttingJobType = "CuttingJobType";
        /// <summary>
        /// The BrowseName for the DeleteJob component.
        /// </summary>
        public const string DeleteJob = "DeleteJob";
        /// <summary>
        /// The BrowseName for the Description component.
        /// </summary>
        public const string Description = "Description";
        /// <summary>
        /// The BrowseName for the DeviceClass component.
        /// </summary>
        public const string DeviceClass = "DeviceClass";
        /// <summary>
        /// The BrowseName for the DeviceFeatures component.
        /// </summary>
        public const string DeviceFeatures = "DeviceFeatures";
        /// <summary>
        /// The BrowseName for the DeviceHealth component.
        /// </summary>
        public const string DeviceHealth = "DeviceHealth";
        /// <summary>
        /// The BrowseName for the DeviceHealthAlarms component.
        /// </summary>
        public const string DeviceHealthAlarms = "DeviceHealthAlarms";
        /// <summary>
        /// The BrowseName for the DeviceHealthDiagnosticAlarmType component.
        /// </summary>
        public const string DeviceHealthDiagnosticAlarmType = "DeviceHealthDiagnosticAlarmType";
        /// <summary>
        /// The BrowseName for the DeviceHealthEnumeration component.
        /// </summary>
        public const string DeviceHealthEnumeration = "DeviceHealthEnumeration";
        /// <summary>
        /// The BrowseName for the DeviceManual component.
        /// </summary>
        public const string DeviceManual = "DeviceManual";
        /// <summary>
        /// The BrowseName for the DeviceRevision component.
        /// </summary>
        public const string DeviceRevision = "DeviceRevision";
        /// <summary>
        /// The BrowseName for the DeviceSet component.
        /// </summary>
        public const string DeviceSet = "DeviceSet";
        /// <summary>
        /// The BrowseName for the DeviceTopology component.
        /// </summary>
        public const string DeviceTopology = "DeviceTopology";
        /// <summary>
        /// The BrowseName for the DeviceType component.
        /// </summary>
        public const string DeviceType = "DeviceType";
        /// <summary>
        /// The BrowseName for the DeviceTypeImage component.
        /// </summary>
        public const string DeviceTypeImage = "DeviceTypeImage";
        /// <summary>
        /// The BrowseName for the DiameterIndicationType component.
        /// </summary>
        public const string DiameterIndicationType = "DiameterIndicationType";
        /// <summary>
        /// The BrowseName for the DirectLoadingType component.
        /// </summary>
        public const string DirectLoadingType = "DirectLoadingType";
        /// <summary>
        /// The BrowseName for the DisplayMode component.
        /// </summary>
        public const string DisplayMode = "DisplayMode";
        /// <summary>
        /// The BrowseName for the Documentation component.
        /// </summary>
        public const string Documentation = "Documentation";
        /// <summary>
        /// The BrowseName for the DocumentationFiles component.
        /// </summary>
        public const string DocumentationFiles = "DocumentationFiles";
        /// <summary>
        /// The BrowseName for the DynamicCalibrationTargetCategoryType component.
        /// </summary>
        public const string DynamicCalibrationTargetCategoryType = "DynamicCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the ElectricalConductivity component.
        /// </summary>
        public const string ElectricalConductivity = "ElectricalConductivity";
        /// <summary>
        /// The BrowseName for the EmergencyButtonPressedEventType component.
        /// </summary>
        public const string EmergencyButtonPressedEventType = "EmergencyButtonPressedEventType";
        /// <summary>
        /// The BrowseName for the EndTime component.
        /// </summary>
        public const string EndTime = "EndTime";
        /// <summary>
        /// The BrowseName for the Ended component.
        /// </summary>
        public const string Ended = "Ended";
        /// <summary>
        /// The BrowseName for the EndedToInitializing component.
        /// </summary>
        public const string EndedToInitializing = "EndedToInitializing";
        /// <summary>
        /// The BrowseName for the Error component.
        /// </summary>
        public const string Error = "Error";
        /// <summary>
        /// The BrowseName for the ErrorMessage component.
        /// </summary>
        public const string ErrorMessage = "ErrorMessage";
        /// <summary>
        /// The BrowseName for the ErrorToIdle component.
        /// </summary>
        public const string ErrorToIdle = "ErrorToIdle";
        /// <summary>
        /// The BrowseName for the Executing component.
        /// </summary>
        public const string Executing = "Executing";
        /// <summary>
        /// The BrowseName for the ExitLock component.
        /// </summary>
        public const string ExitLock = "ExitLock";
        /// <summary>
        /// The BrowseName for the ExternalManuals component.
        /// </summary>
        public const string ExternalManuals = "ExternalManuals";
        /// <summary>
        /// The BrowseName for the FailureAlarmType component.
        /// </summary>
        public const string FailureAlarmType = "FailureAlarmType";
        /// <summary>
        /// The BrowseName for the FallbackVersion component.
        /// </summary>
        public const string FallbackVersion = "FallbackVersion";
        /// <summary>
        /// The BrowseName for the FetchResultDataType component.
        /// </summary>
        public const string FetchResultDataType = "FetchResultDataType";
        /// <summary>
        /// The BrowseName for the FetchTransferResultData component.
        /// </summary>
        public const string FetchTransferResultData = "FetchTransferResultData";
        /// <summary>
        /// The BrowseName for the FileFormatType component.
        /// </summary>
        public const string FileFormatType = "FileFormatType";
        /// <summary>
        /// The BrowseName for the FileSystemLoadingType component.
        /// </summary>
        public const string FileSystemLoadingType = "FileSystemLoadingType";
        /// <summary>
        /// The BrowseName for the FileTransfer component.
        /// </summary>
        public const string FileTransfer = "FileTransfer";
        /// <summary>
        /// The BrowseName for the FillLevel component.
        /// </summary>
        public const string FillLevel = "FillLevel";
        /// <summary>
        /// The BrowseName for the Filling component.
        /// </summary>
        public const string Filling = "Filling";
        /// <summary>
        /// The BrowseName for the FoilType component.
        /// </summary>
        public const string FoilType = "FoilType";
        /// <summary>
        /// The BrowseName for the FromExecutingToExecuting component.
        /// </summary>
        public const string FromExecutingToExecuting = "FromExecutingToExecuting";
        /// <summary>
        /// The BrowseName for the FromExecutingToNotAvailable component.
        /// </summary>
        public const string FromExecutingToNotAvailable = "FromExecutingToNotAvailable";
        /// <summary>
        /// The BrowseName for the FromExecutingToNotExecuting component.
        /// </summary>
        public const string FromExecutingToNotExecuting = "FromExecutingToNotExecuting";
        /// <summary>
        /// The BrowseName for the FromExecutingToOutOfService component.
        /// </summary>
        public const string FromExecutingToOutOfService = "FromExecutingToOutOfService";
        /// <summary>
        /// The BrowseName for the FromMaintenanceToMaintenance component.
        /// </summary>
        public const string FromMaintenanceToMaintenance = "FromMaintenanceToMaintenance";
        /// <summary>
        /// The BrowseName for the FromMaintenanceToNone component.
        /// </summary>
        public const string FromMaintenanceToNone = "FromMaintenanceToNone";
        /// <summary>
        /// The BrowseName for the FromMaintenanceToProcessing component.
        /// </summary>
        public const string FromMaintenanceToProcessing = "FromMaintenanceToProcessing";
        /// <summary>
        /// The BrowseName for the FromMaintenanceToSetup component.
        /// </summary>
        public const string FromMaintenanceToSetup = "FromMaintenanceToSetup";
        /// <summary>
        /// The BrowseName for the FromNoneToMaintenance component.
        /// </summary>
        public const string FromNoneToMaintenance = "FromNoneToMaintenance";
        /// <summary>
        /// The BrowseName for the FromNoneToNone component.
        /// </summary>
        public const string FromNoneToNone = "FromNoneToNone";
        /// <summary>
        /// The BrowseName for the FromNoneToProcessing component.
        /// </summary>
        public const string FromNoneToProcessing = "FromNoneToProcessing";
        /// <summary>
        /// The BrowseName for the FromNoneToSetup component.
        /// </summary>
        public const string FromNoneToSetup = "FromNoneToSetup";
        /// <summary>
        /// The BrowseName for the FromNotAvailableToExecuting component.
        /// </summary>
        public const string FromNotAvailableToExecuting = "FromNotAvailableToExecuting";
        /// <summary>
        /// The BrowseName for the FromNotAvailableToNotAvailable component.
        /// </summary>
        public const string FromNotAvailableToNotAvailable = "FromNotAvailableToNotAvailable";
        /// <summary>
        /// The BrowseName for the FromNotAvailableToNotExecuting component.
        /// </summary>
        public const string FromNotAvailableToNotExecuting = "FromNotAvailableToNotExecuting";
        /// <summary>
        /// The BrowseName for the FromNotAvailableToOutOfService component.
        /// </summary>
        public const string FromNotAvailableToOutOfService = "FromNotAvailableToOutOfService";
        /// <summary>
        /// The BrowseName for the FromNotExecutingToExecuting component.
        /// </summary>
        public const string FromNotExecutingToExecuting = "FromNotExecutingToExecuting";
        /// <summary>
        /// The BrowseName for the FromNotExecutingToNotAvailable component.
        /// </summary>
        public const string FromNotExecutingToNotAvailable = "FromNotExecutingToNotAvailable";
        /// <summary>
        /// The BrowseName for the FromNotExecutingToNotExecuting component.
        /// </summary>
        public const string FromNotExecutingToNotExecuting = "FromNotExecutingToNotExecuting";
        /// <summary>
        /// The BrowseName for the FromNotExecutingToOutOfService component.
        /// </summary>
        public const string FromNotExecutingToOutOfService = "FromNotExecutingToOutOfService";
        /// <summary>
        /// The BrowseName for the FromOutOfServiceToExecuting component.
        /// </summary>
        public const string FromOutOfServiceToExecuting = "FromOutOfServiceToExecuting";
        /// <summary>
        /// The BrowseName for the FromOutOfServiceToNotAvailable component.
        /// </summary>
        public const string FromOutOfServiceToNotAvailable = "FromOutOfServiceToNotAvailable";
        /// <summary>
        /// The BrowseName for the FromOutOfServiceToNotExecuting component.
        /// </summary>
        public const string FromOutOfServiceToNotExecuting = "FromOutOfServiceToNotExecuting";
        /// <summary>
        /// The BrowseName for the FromOutOfServiceToOutOfService component.
        /// </summary>
        public const string FromOutOfServiceToOutOfService = "FromOutOfServiceToOutOfService";
        /// <summary>
        /// The BrowseName for the FromProcessingToMaintenance component.
        /// </summary>
        public const string FromProcessingToMaintenance = "FromProcessingToMaintenance";
        /// <summary>
        /// The BrowseName for the FromProcessingToNone component.
        /// </summary>
        public const string FromProcessingToNone = "FromProcessingToNone";
        /// <summary>
        /// The BrowseName for the FromProcessingToProcessing component.
        /// </summary>
        public const string FromProcessingToProcessing = "FromProcessingToProcessing";
        /// <summary>
        /// The BrowseName for the FromProcessingToSetup component.
        /// </summary>
        public const string FromProcessingToSetup = "FromProcessingToSetup";
        /// <summary>
        /// The BrowseName for the FromSetupToMaintenance component.
        /// </summary>
        public const string FromSetupToMaintenance = "FromSetupToMaintenance";
        /// <summary>
        /// The BrowseName for the FromSetupToNone component.
        /// </summary>
        public const string FromSetupToNone = "FromSetupToNone";
        /// <summary>
        /// The BrowseName for the FromSetupToProcessing component.
        /// </summary>
        public const string FromSetupToProcessing = "FromSetupToProcessing";
        /// <summary>
        /// The BrowseName for the FromSetupToSetup component.
        /// </summary>
        public const string FromSetupToSetup = "FromSetupToSetup";
        /// <summary>
        /// The BrowseName for the FunctionalGroupType component.
        /// </summary>
        public const string FunctionalGroupType = "FunctionalGroupType";
        /// <summary>
        /// The BrowseName for the GasFilling component.
        /// </summary>
        public const string GasFilling = "GasFilling";
        /// <summary>
        /// The BrowseName for the GasMixType component.
        /// </summary>
        public const string GasMixType = "GasMixType";
        /// <summary>
        /// The BrowseName for the Gas_1 component.
        /// </summary>
        public const string Gas_1 = "Gas_1";
        /// <summary>
        /// The BrowseName for the Gas_2 component.
        /// </summary>
        public const string Gas_2 = "Gas_2";
        /// <summary>
        /// The BrowseName for the GetUpdateBehavior component.
        /// </summary>
        public const string GetUpdateBehavior = "GetUpdateBehavior";
        /// <summary>
        /// The BrowseName for the GlassEventType component.
        /// </summary>
        public const string GlassEventType = "GlassEventType";
        /// <summary>
        /// The BrowseName for the GlassMachineIdentificationType component.
        /// </summary>
        public const string GlassMachineIdentificationType = "GlassMachineIdentificationType";
        /// <summary>
        /// The BrowseName for the GlassMachineType component.
        /// </summary>
        public const string GlassMachineType = "GlassMachineType";
        /// <summary>
        /// The BrowseName for the GlassMaterialEventType component.
        /// </summary>
        public const string GlassMaterialEventType = "GlassMaterialEventType";
        /// <summary>
        /// The BrowseName for the GlassType component.
        /// </summary>
        public const string GlassType = "GlassType";
        /// <summary>
        /// The BrowseName for the Hardener component.
        /// </summary>
        public const string Hardener = "Hardener";
        /// <summary>
        /// The BrowseName for the HardwareRevision component.
        /// </summary>
        public const string HardwareRevision = "HardwareRevision";
        /// <summary>
        /// The BrowseName for the HasReferenceMeasurementInstrument component.
        /// </summary>
        public const string HasReferenceMeasurementInstrument = "HasReferenceMeasurementInstrument";
        /// <summary>
        /// The BrowseName for the HasStatisticComponent component.
        /// </summary>
        public const string HasStatisticComponent = "HasStatisticComponent";
        /// <summary>
        /// The BrowseName for the Hash component.
        /// </summary>
        public const string Hash = "Hash";
        /// <summary>
        /// The BrowseName for the IAggregateStatisticsType component.
        /// </summary>
        public const string IAggregateStatisticsType = "IAggregateStatisticsType";
        /// <summary>
        /// The BrowseName for the IDeviceHealthType component.
        /// </summary>
        public const string IDeviceHealthType = "IDeviceHealthType";
        /// <summary>
        /// The BrowseName for the IMachineTagNameplateType component.
        /// </summary>
        public const string IMachineTagNameplateType = "IMachineTagNameplateType";
        /// <summary>
        /// The BrowseName for the IMachineVendorNameplateType component.
        /// </summary>
        public const string IMachineVendorNameplateType = "IMachineVendorNameplateType";
        /// <summary>
        /// The BrowseName for the IMachineryItemVendorNameplateType component.
        /// </summary>
        public const string IMachineryItemVendorNameplateType = "IMachineryItemVendorNameplateType";
        /// <summary>
        /// The BrowseName for the IOperationCounterType component.
        /// </summary>
        public const string IOperationCounterType = "IOperationCounterType";
        /// <summary>
        /// The BrowseName for the IRollingStatisticsType component.
        /// </summary>
        public const string IRollingStatisticsType = "IRollingStatisticsType";
        /// <summary>
        /// The BrowseName for the IStatisticsType component.
        /// </summary>
        public const string IStatisticsType = "IStatisticsType";
        /// <summary>
        /// The BrowseName for the ISupportInfoType component.
        /// </summary>
        public const string ISupportInfoType = "ISupportInfoType";
        /// <summary>
        /// The BrowseName for the ITagNameplateType component.
        /// </summary>
        public const string ITagNameplateType = "ITagNameplateType";
        /// <summary>
        /// The BrowseName for the IVendorNameplateType component.
        /// </summary>
        public const string IVendorNameplateType = "IVendorNameplateType";
        /// <summary>
        /// The BrowseName for the Identification component.
        /// </summary>
        public const string Identification = "Identification";
        /// <summary>
        /// The BrowseName for the Identifier component.
        /// </summary>
        public const string Identifier = "Identifier";
        /// <summary>
        /// The BrowseName for the Idle component.
        /// </summary>
        public const string Idle = "Idle";
        /// <summary>
        /// The BrowseName for the IdleToInstalling component.
        /// </summary>
        public const string IdleToInstalling = "IdleToInstalling";
        /// <summary>
        /// The BrowseName for the IdleToPreparing component.
        /// </summary>
        public const string IdleToPreparing = "IdleToPreparing";
        /// <summary>
        /// The BrowseName for the IdleToQueued component.
        /// </summary>
        public const string IdleToQueued = "IdleToQueued";
        /// <summary>
        /// The BrowseName for the ImageSet component.
        /// </summary>
        public const string ImageSet = "ImageSet";
        /// <summary>
        /// The BrowseName for the Indication component.
        /// </summary>
        public const string Indication = "Indication";
        /// <summary>
        /// The BrowseName for the InitLock component.
        /// </summary>
        public const string InitLock = "InitLock";
        /// <summary>
        /// The BrowseName for the InitialOperationDate component.
        /// </summary>
        public const string InitialOperationDate = "InitialOperationDate";
        /// <summary>
        /// The BrowseName for the Initializing component.
        /// </summary>
        public const string Initializing = "Initializing";
        /// <summary>
        /// The BrowseName for the InitializingState component.
        /// </summary>
        public const string InitializingState = "InitializingState";
        /// <summary>
        /// The BrowseName for the InitializingSubStateMachineType component.
        /// </summary>
        public const string InitializingSubStateMachineType = "InitializingSubStateMachineType";
        /// <summary>
        /// The BrowseName for the InitializingToAborted component.
        /// </summary>
        public const string InitializingToAborted = "InitializingToAborted";
        /// <summary>
        /// The BrowseName for the InitializingToRunning component.
        /// </summary>
        public const string InitializingToRunning = "InitializingToRunning";
        /// <summary>
        /// The BrowseName for the InputMaterials component.
        /// </summary>
        public const string InputMaterials = "InputMaterials";
        /// <summary>
        /// The BrowseName for the InsertJob component.
        /// </summary>
        public const string InsertJob = "InsertJob";
        /// <summary>
        /// The BrowseName for the InstallFiles component.
        /// </summary>
        public const string InstallFiles = "InstallFiles";
        /// <summary>
        /// The BrowseName for the InstallSoftwarePackage component.
        /// </summary>
        public const string InstallSoftwarePackage = "InstallSoftwarePackage";
        /// <summary>
        /// The BrowseName for the Installation component.
        /// </summary>
        public const string Installation = "Installation";
        /// <summary>
        /// The BrowseName for the InstallationDelay component.
        /// </summary>
        public const string InstallationDelay = "InstallationDelay";
        /// <summary>
        /// The BrowseName for the InstallationStateMachineType component.
        /// </summary>
        public const string InstallationStateMachineType = "InstallationStateMachineType";
        /// <summary>
        /// The BrowseName for the Installing component.
        /// </summary>
        public const string Installing = "Installing";
        /// <summary>
        /// The BrowseName for the InstallingToError component.
        /// </summary>
        public const string InstallingToError = "InstallingToError";
        /// <summary>
        /// The BrowseName for the InstallingToIdle component.
        /// </summary>
        public const string InstallingToIdle = "InstallingToIdle";
        /// <summary>
        /// The BrowseName for the Instruction component.
        /// </summary>
        public const string Instruction = "Instruction";
        /// <summary>
        /// The BrowseName for the InstructionType component.
        /// </summary>
        public const string InstructionType = "InstructionType";
        /// <summary>
        /// The BrowseName for the Intensity component.
        /// </summary>
        public const string Intensity = "Intensity";
        /// <summary>
        /// The BrowseName for the IntermediateStepEvent component.
        /// </summary>
        public const string IntermediateStepEvent = "IntermediateStepEvent";
        /// <summary>
        /// The BrowseName for the Interrupted component.
        /// </summary>
        public const string Interrupted = "Interrupted";
        /// <summary>
        /// The BrowseName for the InterruptedEventType component.
        /// </summary>
        public const string InterruptedEventType = "InterruptedEventType";
        /// <summary>
        /// The BrowseName for the InterruptedToAborted component.
        /// </summary>
        public const string InterruptedToAborted = "InterruptedToAborted";
        /// <summary>
        /// The BrowseName for the InterruptedToRunning component.
        /// </summary>
        public const string InterruptedToRunning = "InterruptedToRunning";
        /// <summary>
        /// The BrowseName for the IsOnline component.
        /// </summary>
        public const string IsOnline = "IsOnline";
        /// <summary>
        /// The BrowseName for the IsPartOfBase component.
        /// </summary>
        public const string IsPartOfBase = "IsPartOfBase";
        /// <summary>
        /// The BrowseName for the JobGroup component.
        /// </summary>
        public const string JobGroup = "JobGroup";
        /// <summary>
        /// The BrowseName for the JobListIsRecommendation component.
        /// </summary>
        public const string JobListIsRecommendation = "JobListIsRecommendation";
        /// <summary>
        /// The BrowseName for the JobMovedEventType component.
        /// </summary>
        public const string JobMovedEventType = "JobMovedEventType";
        /// <summary>
        /// The BrowseName for the JobdIdentifier component.
        /// </summary>
        public const string JobdIdentifier = "JobdIdentifier";
        /// <summary>
        /// The BrowseName for the LastValidationDate component.
        /// </summary>
        public const string LastValidationDate = "LastValidationDate";
        /// <summary>
        /// The BrowseName for the LengthIndicationType component.
        /// </summary>
        public const string LengthIndicationType = "LengthIndicationType";
        /// <summary>
        /// The BrowseName for the LevelDisplayMode component.
        /// </summary>
        public const string LevelDisplayMode = "LevelDisplayMode";
        /// <summary>
        /// The BrowseName for the LevelPercent component.
        /// </summary>
        public const string LevelPercent = "LevelPercent";
        /// <summary>
        /// The BrowseName for the LifetimeVariableType component.
        /// </summary>
        public const string LifetimeVariableType = "LifetimeVariableType";
        /// <summary>
        /// The BrowseName for the LimitValue component.
        /// </summary>
        public const string LimitValue = "LimitValue";
        /// <summary>
        /// The BrowseName for the LimitedString64 component.
        /// </summary>
        public const string LimitedString64 = "LimitedString64";
        /// <summary>
        /// The BrowseName for the Loading component.
        /// </summary>
        public const string Loading = "Loading";
        /// <summary>
        /// The BrowseName for the Location component.
        /// </summary>
        public const string Location = "Location";
        /// <summary>
        /// The BrowseName for the Lock component.
        /// </summary>
        public const string Lock = "Lock";
        /// <summary>
        /// The BrowseName for the Locked component.
        /// </summary>
        public const string Locked = "Locked";
        /// <summary>
        /// The BrowseName for the LockingClient component.
        /// </summary>
        public const string LockingClient = "LockingClient";
        /// <summary>
        /// The BrowseName for the LockingServicesType component.
        /// </summary>
        public const string LockingServicesType = "LockingServicesType";
        /// <summary>
        /// The BrowseName for the LockingUser component.
        /// </summary>
        public const string LockingUser = "LockingUser";
        /// <summary>
        /// The BrowseName for the LoggedInProfiles component.
        /// </summary>
        public const string LoggedInProfiles = "LoggedInProfiles";
        /// <summary>
        /// The BrowseName for the MachineComponentsType component.
        /// </summary>
        public const string MachineComponentsType = "MachineComponentsType";
        /// <summary>
        /// The BrowseName for the MachineIdentificationType component.
        /// </summary>
        public const string MachineIdentificationType = "MachineIdentificationType";
        /// <summary>
        /// The BrowseName for the MachineProcessingCoordinateSystem component.
        /// </summary>
        public const string MachineProcessingCoordinateSystem = "MachineProcessingCoordinateSystem";
        /// <summary>
        /// The BrowseName for the MachineryBuildingBlocks component.
        /// </summary>
        public const string MachineryBuildingBlocks = "MachineryBuildingBlocks";
        /// <summary>
        /// The BrowseName for the MachineryComponentIdentificationType component.
        /// </summary>
        public const string MachineryComponentIdentificationType = "MachineryComponentIdentificationType";
        /// <summary>
        /// The BrowseName for the MachineryItemIdentificationType component.
        /// </summary>
        public const string MachineryItemIdentificationType = "MachineryItemIdentificationType";
        /// <summary>
        /// The BrowseName for the MachineryItemState component.
        /// </summary>
        public const string MachineryItemState = "MachineryItemState";
        /// <summary>
        /// The BrowseName for the MachineryItemState_StateMachineType component.
        /// </summary>
        public const string MachineryItemState_StateMachineType = "MachineryItemState_StateMachineType";
        /// <summary>
        /// The BrowseName for the MachineryOperationMode component.
        /// </summary>
        public const string MachineryOperationMode = "MachineryOperationMode";
        /// <summary>
        /// The BrowseName for the MachineryOperationModeStateMachineType component.
        /// </summary>
        public const string MachineryOperationModeStateMachineType = "MachineryOperationModeStateMachineType";
        /// <summary>
        /// The BrowseName for the Machines component.
        /// </summary>
        public const string Machines = "Machines";
        /// <summary>
        /// The BrowseName for the Maintenance component.
        /// </summary>
        public const string Maintenance = "Maintenance";
        /// <summary>
        /// The BrowseName for the MaintenanceManuals component.
        /// </summary>
        public const string MaintenanceManuals = "MaintenanceManuals";
        /// <summary>
        /// The BrowseName for the MaintenanceRequiredAlarmType component.
        /// </summary>
        public const string MaintenanceRequiredAlarmType = "MaintenanceRequiredAlarmType";
        /// <summary>
        /// The BrowseName for the ManualFolderType component.
        /// </summary>
        public const string ManualFolderType = "ManualFolderType";
        /// <summary>
        /// The BrowseName for the Manufacturer component.
        /// </summary>
        public const string Manufacturer = "Manufacturer";
        /// <summary>
        /// The BrowseName for the ManufacturerUri component.
        /// </summary>
        public const string ManufacturerUri = "ManufacturerUri";
        /// <summary>
        /// The BrowseName for the MaterialExitEventType component.
        /// </summary>
        public const string MaterialExitEventType = "MaterialExitEventType";
        /// <summary>
        /// The BrowseName for the MaterialIdentifier component.
        /// </summary>
        public const string MaterialIdentifier = "MaterialIdentifier";
        /// <summary>
        /// The BrowseName for the MaterialMissingEventType component.
        /// </summary>
        public const string MaterialMissingEventType = "MaterialMissingEventType";
        /// <summary>
        /// The BrowseName for the MaterialReceivedEventType component.
        /// </summary>
        public const string MaterialReceivedEventType = "MaterialReceivedEventType";
        /// <summary>
        /// The BrowseName for the MaxCountOfJobs component.
        /// </summary>
        public const string MaxCountOfJobs = "MaxCountOfJobs";
        /// <summary>
        /// The BrowseName for the MaxInactiveLockTime component.
        /// </summary>
        public const string MaxInactiveLockTime = "MaxInactiveLockTime";
        /// <summary>
        /// The BrowseName for the MethodSet component.
        /// </summary>
        public const string MethodSet = "MethodSet";
        /// <summary>
        /// The BrowseName for the MixingRatio component.
        /// </summary>
        public const string MixingRatio = "MixingRatio";
        /// <summary>
        /// The BrowseName for the Model component.
        /// </summary>
        public const string Model = "Model";
        /// <summary>
        /// The BrowseName for the MonthOfConstruction component.
        /// </summary>
        public const string MonthOfConstruction = "MonthOfConstruction";
        /// <summary>
        /// The BrowseName for the MotorTemperatureTooHighEventType component.
        /// </summary>
        public const string MotorTemperatureTooHighEventType = "MotorTemperatureTooHighEventType";
        /// <summary>
        /// The BrowseName for the Name component.
        /// </summary>
        public const string Name = "Name";
        /// <summary>
        /// The BrowseName for the NetworkAddress component.
        /// </summary>
        public const string NetworkAddress = "NetworkAddress";
        /// <summary>
        /// The BrowseName for the NetworkSet component.
        /// </summary>
        public const string NetworkSet = "NetworkSet";
        /// <summary>
        /// The BrowseName for the NetworkType component.
        /// </summary>
        public const string NetworkType = "NetworkType";
        /// <summary>
        /// The BrowseName for the NewPosition component.
        /// </summary>
        public const string NewPosition = "NewPosition";
        /// <summary>
        /// The BrowseName for the NextValidationDate component.
        /// </summary>
        public const string NextValidationDate = "NextValidationDate";
        /// <summary>
        /// The BrowseName for the None component.
        /// </summary>
        public const string None = "None";
        /// <summary>
        /// The BrowseName for the NormalMode component.
        /// </summary>
        public const string NormalMode = "NormalMode";
        /// <summary>
        /// The BrowseName for the NotAvailable component.
        /// </summary>
        public const string NotAvailable = "NotAvailable";
        /// <summary>
        /// The BrowseName for the NotExecuting component.
        /// </summary>
        public const string NotExecuting = "NotExecuting";
        /// <summary>
        /// The BrowseName for the NotWaitingForConfirm component.
        /// </summary>
        public const string NotWaitingForConfirm = "NotWaitingForConfirm";
        /// <summary>
        /// The BrowseName for the NotWaitingForConfirmToWaitingForConfirm component.
        /// </summary>
        public const string NotWaitingForConfirmToWaitingForConfirm = "NotWaitingForConfirmToWaitingForConfirm";
        /// <summary>
        /// The BrowseName for the NotWaitingForPowerCycle component.
        /// </summary>
        public const string NotWaitingForPowerCycle = "NotWaitingForPowerCycle";
        /// <summary>
        /// The BrowseName for the NotWaitingForPowerCycleToWaitingForPowerCycle component.
        /// </summary>
        public const string NotWaitingForPowerCycleToWaitingForPowerCycle = "NotWaitingForPowerCycleToWaitingForPowerCycle";
        /// <summary>
        /// The BrowseName for the NumberOfPartsIndicationType component.
        /// </summary>
        public const string NumberOfPartsIndicationType = "NumberOfPartsIndicationType";
        /// <summary>
        /// The BrowseName for the NumberOfUsagesIndicationType component.
        /// </summary>
        public const string NumberOfUsagesIndicationType = "NumberOfUsagesIndicationType";
        /// <summary>
        /// The BrowseName for the OffSpecAlarmType component.
        /// </summary>
        public const string OffSpecAlarmType = "OffSpecAlarmType";
        /// <summary>
        /// The BrowseName for the OneTimeCalibrationTargetCategoryType component.
        /// </summary>
        public const string OneTimeCalibrationTargetCategoryType = "OneTimeCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the OnlineAccess component.
        /// </summary>
        public const string OnlineAccess = "OnlineAccess";
        /// <summary>
        /// The BrowseName for the Opc.Ua.Di component.
        /// </summary>
        public const string OpcUaDi_XmlSchema = "Opc.Ua.Di";
        /// <summary>
        /// The BrowseName for the OpenSecurityFenceType component.
        /// </summary>
        public const string OpenSecurityFenceType = "OpenSecurityFenceType";
        /// <summary>
        /// The BrowseName for the OperationCycleCounter component.
        /// </summary>
        public const string OperationCycleCounter = "OperationCycleCounter";
        /// <summary>
        /// The BrowseName for the OperationDuration component.
        /// </summary>
        public const string OperationDuration = "OperationDuration";
        /// <summary>
        /// The BrowseName for the OperationManuals component.
        /// </summary>
        public const string OperationManuals = "OperationManuals";
        /// <summary>
        /// The BrowseName for the OperationMode component.
        /// </summary>
        public const string OperationMode = "OperationMode";
        /// <summary>
        /// The BrowseName for the OperationalConditions component.
        /// </summary>
        public const string OperationalConditions = "OperationalConditions";
        /// <summary>
        /// The BrowseName for the Orientation component.
        /// </summary>
        public const string Orientation = "Orientation";
        /// <summary>
        /// The BrowseName for the OutOfJobEventType component.
        /// </summary>
        public const string OutOfJobEventType = "OutOfJobEventType";
        /// <summary>
        /// The BrowseName for the OutOfService component.
        /// </summary>
        public const string OutOfService = "OutOfService";
        /// <summary>
        /// The BrowseName for the OutputMaterials component.
        /// </summary>
        public const string OutputMaterials = "OutputMaterials";
        /// <summary>
        /// The BrowseName for the PackageLoadingType component.
        /// </summary>
        public const string PackageLoadingType = "PackageLoadingType";
        /// <summary>
        /// The BrowseName for the PackagingType component.
        /// </summary>
        public const string PackagingType = "PackagingType";
        /// <summary>
        /// The BrowseName for the ParameterResultDataType component.
        /// </summary>
        public const string ParameterResultDataType = "ParameterResultDataType";
        /// <summary>
        /// The BrowseName for the ParameterSet component.
        /// </summary>
        public const string ParameterSet = "ParameterSet";
        /// <summary>
        /// The BrowseName for the Parameters component.
        /// </summary>
        public const string Parameters = "Parameters";
        /// <summary>
        /// The BrowseName for the PatchIdentifiers component.
        /// </summary>
        public const string PatchIdentifiers = "PatchIdentifiers";
        /// <summary>
        /// The BrowseName for the PendingVersion component.
        /// </summary>
        public const string PendingVersion = "PendingVersion";
        /// <summary>
        /// The BrowseName for the PercentComplete component.
        /// </summary>
        public const string PercentComplete = "PercentComplete";
        /// <summary>
        /// The BrowseName for the PerimeterProtection component.
        /// </summary>
        public const string PerimeterProtection = "PerimeterProtection";
        /// <summary>
        /// The BrowseName for the PermittedMode component.
        /// </summary>
        public const string PermittedMode = "PermittedMode";
        /// <summary>
        /// The BrowseName for the Plan component.
        /// </summary>
        public const string Plan = "Plan";
        /// <summary>
        /// The BrowseName for the PlanFileFormat component.
        /// </summary>
        public const string PlanFileFormat = "PlanFileFormat";
        /// <summary>
        /// The BrowseName for the PowerCycle component.
        /// </summary>
        public const string PowerCycle = "PowerCycle";
        /// <summary>
        /// The BrowseName for the PowerCycleStateMachineType component.
        /// </summary>
        public const string PowerCycleStateMachineType = "PowerCycleStateMachineType";
        /// <summary>
        /// The BrowseName for the PowerOnDuration component.
        /// </summary>
        public const string PowerOnDuration = "PowerOnDuration";
        /// <summary>
        /// The BrowseName for the Prepare component.
        /// </summary>
        public const string Prepare = "Prepare";
        /// <summary>
        /// The BrowseName for the PrepareForUpdate component.
        /// </summary>
        public const string PrepareForUpdate = "PrepareForUpdate";
        /// <summary>
        /// The BrowseName for the PrepareForUpdateStateMachineType component.
        /// </summary>
        public const string PrepareForUpdateStateMachineType = "PrepareForUpdateStateMachineType";
        /// <summary>
        /// The BrowseName for the PreparedForUpdate component.
        /// </summary>
        public const string PreparedForUpdate = "PreparedForUpdate";
        /// <summary>
        /// The BrowseName for the PreparedForUpdateToResuming component.
        /// </summary>
        public const string PreparedForUpdateToResuming = "PreparedForUpdateToResuming";
        /// <summary>
        /// The BrowseName for the Preparing component.
        /// </summary>
        public const string Preparing = "Preparing";
        /// <summary>
        /// The BrowseName for the PreparingToIdle component.
        /// </summary>
        public const string PreparingToIdle = "PreparingToIdle";
        /// <summary>
        /// The BrowseName for the PreparingToPreparedForUpdate component.
        /// </summary>
        public const string PreparingToPreparedForUpdate = "PreparingToPreparedForUpdate";
        /// <summary>
        /// The BrowseName for the ProcessName component.
        /// </summary>
        public const string ProcessName = "ProcessName";
        /// <summary>
        /// The BrowseName for the ProcessParameterOutOfRangeType component.
        /// </summary>
        public const string ProcessParameterOutOfRangeType = "ProcessParameterOutOfRangeType";
        /// <summary>
        /// The BrowseName for the ProcessStep component.
        /// </summary>
        public const string ProcessStep = "ProcessStep";
        /// <summary>
        /// The BrowseName for the Processing component.
        /// </summary>
        public const string Processing = "Processing";
        /// <summary>
        /// The BrowseName for the ProcessingJobType component.
        /// </summary>
        public const string ProcessingJobType = "ProcessingJobType";
        /// <summary>
        /// The BrowseName for the ProductCode component.
        /// </summary>
        public const string ProductCode = "ProductCode";
        /// <summary>
        /// The BrowseName for the ProductInstanceUri component.
        /// </summary>
        public const string ProductInstanceUri = "ProductInstanceUri";
        /// <summary>
        /// The BrowseName for the Production component.
        /// </summary>
        public const string Production = "Production";
        /// <summary>
        /// The BrowseName for the ProductionJobType component.
        /// </summary>
        public const string ProductionJobType = "ProductionJobType";
        /// <summary>
        /// The BrowseName for the ProductionPlan component.
        /// </summary>
        public const string ProductionPlan = "ProductionPlan";
        /// <summary>
        /// The BrowseName for the ProductionPlanType component.
        /// </summary>
        public const string ProductionPlanType = "ProductionPlanType";
        /// <summary>
        /// The BrowseName for the ProductionStateMachineType component.
        /// </summary>
        public const string ProductionStateMachineType = "ProductionStateMachineType";
        /// <summary>
        /// The BrowseName for the ProductionType component.
        /// </summary>
        public const string ProductionType = "ProductionType";
        /// <summary>
        /// The BrowseName for the ProtocolSupport component.
        /// </summary>
        public const string ProtocolSupport = "ProtocolSupport";
        /// <summary>
        /// The BrowseName for the ProtocolType component.
        /// </summary>
        public const string ProtocolType = "ProtocolType";
        /// <summary>
        /// The BrowseName for the Quality component.
        /// </summary>
        public const string Quality = "Quality";
        /// <summary>
        /// The BrowseName for the QueueJob component.
        /// </summary>
        public const string QueueJob = "QueueJob";
        /// <summary>
        /// The BrowseName for the Queued component.
        /// </summary>
        public const string Queued = "Queued";
        /// <summary>
        /// The BrowseName for the QueuedToIdle component.
        /// </summary>
        public const string QueuedToIdle = "QueuedToIdle";
        /// <summary>
        /// The BrowseName for the QueuedToReleased component.
        /// </summary>
        public const string QueuedToReleased = "QueuedToReleased";
        /// <summary>
        /// The BrowseName for the Reflection component.
        /// </summary>
        public const string Reflection = "Reflection";
        /// <summary>
        /// The BrowseName for the ReleaseDate component.
        /// </summary>
        public const string ReleaseDate = "ReleaseDate";
        /// <summary>
        /// The BrowseName for the ReleaseJob component.
        /// </summary>
        public const string ReleaseJob = "ReleaseJob";
        /// <summary>
        /// The BrowseName for the Released component.
        /// </summary>
        public const string Released = "Released";
        /// <summary>
        /// The BrowseName for the ReleasedToQueued component.
        /// </summary>
        public const string ReleasedToQueued = "ReleasedToQueued";
        /// <summary>
        /// The BrowseName for the RemainingLockTime component.
        /// </summary>
        public const string RemainingLockTime = "RemainingLockTime";
        /// <summary>
        /// The BrowseName for the RenewLock component.
        /// </summary>
        public const string RenewLock = "RenewLock";
        /// <summary>
        /// The BrowseName for the ResetCondition component.
        /// </summary>
        public const string ResetCondition = "ResetCondition";
        /// <summary>
        /// The BrowseName for the ResetStatistics component.
        /// </summary>
        public const string ResetStatistics = "ResetStatistics";
        /// <summary>
        /// The BrowseName for the Resin component.
        /// </summary>
        public const string Resin = "Resin";
        /// <summary>
        /// The BrowseName for the Resolution component.
        /// </summary>
        public const string Resolution = "Resolution";
        /// <summary>
        /// The BrowseName for the Resume component.
        /// </summary>
        public const string Resume = "Resume";
        /// <summary>
        /// The BrowseName for the Resuming component.
        /// </summary>
        public const string Resuming = "Resuming";
        /// <summary>
        /// The BrowseName for the ResumingToIdle component.
        /// </summary>
        public const string ResumingToIdle = "ResumingToIdle";
        /// <summary>
        /// The BrowseName for the ReusableCalibrationTargetCategoryType component.
        /// </summary>
        public const string ReusableCalibrationTargetCategoryType = "ReusableCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the ReusableDeviceCalibrationTargetCategoryType component.
        /// </summary>
        public const string ReusableDeviceCalibrationTargetCategoryType = "ReusableDeviceCalibrationTargetCategoryType";
        /// <summary>
        /// The BrowseName for the RevisionCounter component.
        /// </summary>
        public const string RevisionCounter = "RevisionCounter";
        /// <summary>
        /// The BrowseName for the Running component.
        /// </summary>
        public const string Running = "Running";
        /// <summary>
        /// The BrowseName for the RunningToAborted component.
        /// </summary>
        public const string RunningToAborted = "RunningToAborted";
        /// <summary>
        /// The BrowseName for the RunningToEnded component.
        /// </summary>
        public const string RunningToEnded = "RunningToEnded";
        /// <summary>
        /// The BrowseName for the RunningToInterrupted component.
        /// </summary>
        public const string RunningToInterrupted = "RunningToInterrupted";
        /// <summary>
        /// The BrowseName for the RunningToRunning component.
        /// </summary>
        public const string RunningToRunning = "RunningToRunning";
        /// <summary>
        /// The BrowseName for the SealantDepth component.
        /// </summary>
        public const string SealantDepth = "SealantDepth";
        /// <summary>
        /// The BrowseName for the SealingMaterialType component.
        /// </summary>
        public const string SealingMaterialType = "SealingMaterialType";
        /// <summary>
        /// The BrowseName for the SerialNumber component.
        /// </summary>
        public const string SerialNumber = "SerialNumber";
        /// <summary>
        /// The BrowseName for the Setup component.
        /// </summary>
        public const string Setup = "Setup";
        /// <summary>
        /// The BrowseName for the SignalColor component.
        /// </summary>
        public const string SignalColor = "SignalColor";
        /// <summary>
        /// The BrowseName for the SignalMode component.
        /// </summary>
        public const string SignalMode = "SignalMode";
        /// <summary>
        /// The BrowseName for the SignalModeLight component.
        /// </summary>
        public const string SignalModeLight = "SignalModeLight";
        /// <summary>
        /// The BrowseName for the SignalOn component.
        /// </summary>
        public const string SignalOn = "SignalOn";
        /// <summary>
        /// The BrowseName for the SignificantSide component.
        /// </summary>
        public const string SignificantSide = "SignificantSide";
        /// <summary>
        /// The BrowseName for the SignificantSideEnumeration component.
        /// </summary>
        public const string SignificantSideEnumeration = "SignificantSideEnumeration";
        /// <summary>
        /// The BrowseName for the SoftwareLoadingType component.
        /// </summary>
        public const string SoftwareLoadingType = "SoftwareLoadingType";
        /// <summary>
        /// The BrowseName for the SoftwareReleaseDate component.
        /// </summary>
        public const string SoftwareReleaseDate = "SoftwareReleaseDate";
        /// <summary>
        /// The BrowseName for the SoftwareRevision component.
        /// </summary>
        public const string SoftwareRevision = "SoftwareRevision";
        /// <summary>
        /// The BrowseName for the SoftwareType component.
        /// </summary>
        public const string SoftwareType = "SoftwareType";
        /// <summary>
        /// The BrowseName for the SoftwareUpdateType component.
        /// </summary>
        public const string SoftwareUpdateType = "SoftwareUpdateType";
        /// <summary>
        /// The BrowseName for the SoftwareVersionFileType component.
        /// </summary>
        public const string SoftwareVersionFileType = "SoftwareVersionFileType";
        /// <summary>
        /// The BrowseName for the SoftwareVersionType component.
        /// </summary>
        public const string SoftwareVersionType = "SoftwareVersionType";
        /// <summary>
        /// The BrowseName for the Spacer component.
        /// </summary>
        public const string Spacer = "Spacer";
        /// <summary>
        /// The BrowseName for the SpacerMaterialClass component.
        /// </summary>
        public const string SpacerMaterialClass = "SpacerMaterialClass";
        /// <summary>
        /// The BrowseName for the SpacerMaterialSubClass component.
        /// </summary>
        public const string SpacerMaterialSubClass = "SpacerMaterialSubClass";
        /// <summary>
        /// The BrowseName for the SpacerType component.
        /// </summary>
        public const string SpacerType = "SpacerType";
        /// <summary>
        /// The BrowseName for the StackElementAcousticType component.
        /// </summary>
        public const string StackElementAcousticType = "StackElementAcousticType";
        /// <summary>
        /// The BrowseName for the StackElementLightType component.
        /// </summary>
        public const string StackElementLightType = "StackElementLightType";
        /// <summary>
        /// The BrowseName for the StackElementType component.
        /// </summary>
        public const string StackElementType = "StackElementType";
        /// <summary>
        /// The BrowseName for the StackLevel component.
        /// </summary>
        public const string StackLevel = "StackLevel";
        /// <summary>
        /// The BrowseName for the StackLevelType component.
        /// </summary>
        public const string StackLevelType = "StackLevelType";
        /// <summary>
        /// The BrowseName for the StackRunning component.
        /// </summary>
        public const string StackRunning = "StackRunning";
        /// <summary>
        /// The BrowseName for the StackRunningType component.
        /// </summary>
        public const string StackRunningType = "StackRunningType";
        /// <summary>
        /// The BrowseName for the StacklightMode component.
        /// </summary>
        public const string StacklightMode = "StacklightMode";
        /// <summary>
        /// The BrowseName for the StacklightOperationMode component.
        /// </summary>
        public const string StacklightOperationMode = "StacklightOperationMode";
        /// <summary>
        /// The BrowseName for the StacklightType component.
        /// </summary>
        public const string StacklightType = "StacklightType";
        /// <summary>
        /// The BrowseName for the StartTime component.
        /// </summary>
        public const string StartTime = "StartTime";
        /// <summary>
        /// The BrowseName for the StartValue component.
        /// </summary>
        public const string StartValue = "StartValue";
        /// <summary>
        /// The BrowseName for the State component.
        /// </summary>
        public const string State = "State";
        /// <summary>
        /// The BrowseName for the Status component.
        /// </summary>
        public const string Status = "Status";
        /// <summary>
        /// The BrowseName for the StructureAlignment component.
        /// </summary>
        public const string StructureAlignment = "StructureAlignment";
        /// <summary>
        /// The BrowseName for the StructureAlignmentEnumeration component.
        /// </summary>
        public const string StructureAlignmentEnumeration = "StructureAlignmentEnumeration";
        /// <summary>
        /// The BrowseName for the StructureClass component.
        /// </summary>
        public const string StructureClass = "StructureClass";
        /// <summary>
        /// The BrowseName for the SubstanceVolumeIndicationType component.
        /// </summary>
        public const string SubstanceVolumeIndicationType = "SubstanceVolumeIndicationType";
        /// <summary>
        /// The BrowseName for the SupportedMaterialTypes component.
        /// </summary>
        public const string SupportedMaterialTypes = "SupportedMaterialTypes";
        /// <summary>
        /// The BrowseName for the SupportedTypes component.
        /// </summary>
        public const string SupportedTypes = "SupportedTypes";
        /// <summary>
        /// The BrowseName for the SuspendJob component.
        /// </summary>
        public const string SuspendJob = "SuspendJob";
        /// <summary>
        /// The BrowseName for the TargetMode component.
        /// </summary>
        public const string TargetMode = "TargetMode";
        /// <summary>
        /// The BrowseName for the TimeIndicationType component.
        /// </summary>
        public const string TimeIndicationType = "TimeIndicationType";
        /// <summary>
        /// The BrowseName for the ToolMissingEventType component.
        /// </summary>
        public const string ToolMissingEventType = "ToolMissingEventType";
        /// <summary>
        /// The BrowseName for the TopologyElementType component.
        /// </summary>
        public const string TopologyElementType = "TopologyElementType";
        /// <summary>
        /// The BrowseName for the TransferFromDevice component.
        /// </summary>
        public const string TransferFromDevice = "TransferFromDevice";
        /// <summary>
        /// The BrowseName for the TransferResultDataDataType component.
        /// </summary>
        public const string TransferResultDataDataType = "TransferResultDataDataType";
        /// <summary>
        /// The BrowseName for the TransferResultErrorDataType component.
        /// </summary>
        public const string TransferResultErrorDataType = "TransferResultErrorDataType";
        /// <summary>
        /// The BrowseName for the TransferServicesType component.
        /// </summary>
        public const string TransferServicesType = "TransferServicesType";
        /// <summary>
        /// The BrowseName for the TransferToDevice component.
        /// </summary>
        public const string TransferToDevice = "TransferToDevice";
        /// <summary>
        /// The BrowseName for the Transmission component.
        /// </summary>
        public const string Transmission = "Transmission";
        /// <summary>
        /// The BrowseName for the TypeDictionary component.
        /// </summary>
        public const string TypeDictionary_XmlSchema = "TypeDictionary";
        /// <summary>
        /// The BrowseName for the UIElement component.
        /// </summary>
        public const string UIElement = "UIElement";
        /// <summary>
        /// The BrowseName for the UIElementType component.
        /// </summary>
        public const string UIElementType = "UIElementType";
        /// <summary>
        /// The BrowseName for the UpdateBehavior component.
        /// </summary>
        public const string UpdateBehavior = "UpdateBehavior";
        /// <summary>
        /// The BrowseName for the UpdateKey component.
        /// </summary>
        public const string UpdateKey = "UpdateKey";
        /// <summary>
        /// The BrowseName for the UpdateStatus component.
        /// </summary>
        public const string UpdateStatus = "UpdateStatus";
        /// <summary>
        /// The BrowseName for the UserProfileType component.
        /// </summary>
        public const string UserProfileType = "UserProfileType";
        /// <summary>
        /// The BrowseName for the ValidateFiles component.
        /// </summary>
        public const string ValidateFiles = "ValidateFiles";
        /// <summary>
        /// The BrowseName for the VendorErrorCode component.
        /// </summary>
        public const string VendorErrorCode = "VendorErrorCode";
        /// <summary>
        /// The BrowseName for the WaitingForConfirm component.
        /// </summary>
        public const string WaitingForConfirm = "WaitingForConfirm";
        /// <summary>
        /// The BrowseName for the WaitingForConfirmToNotWaitingForConfirm component.
        /// </summary>
        public const string WaitingForConfirmToNotWaitingForConfirm = "WaitingForConfirmToNotWaitingForConfirm";
        /// <summary>
        /// The BrowseName for the WaitingForPowerCycle component.
        /// </summary>
        public const string WaitingForPowerCycle = "WaitingForPowerCycle";
        /// <summary>
        /// The BrowseName for the WaitingForPowerCycleToNotWaitingForPowerCycle component.
        /// </summary>
        public const string WaitingForPowerCycleToNotWaitingForPowerCycle = "WaitingForPowerCycleToNotWaitingForPowerCycle";
        /// <summary>
        /// The BrowseName for the WarningValues component.
        /// </summary>
        public const string WarningValues = "WarningValues";
        /// <summary>
        /// The BrowseName for the Weight component.
        /// </summary>
        public const string Weight = "Weight";
        /// <summary>
        /// The BrowseName for the WindowDuration component.
        /// </summary>
        public const string WindowDuration = "WindowDuration";
        /// <summary>
        /// The BrowseName for the WindowNumberOfValues component.
        /// </summary>
        public const string WindowNumberOfValues = "WindowNumberOfValues";
        /// <summary>
        /// The BrowseName for the WriteBlockSize component.
        /// </summary>
        public const string WriteBlockSize = "WriteBlockSize";
        /// <summary>
        /// The BrowseName for the WriteTimeout component.
        /// </summary>
        public const string WriteTimeout = "WriteTimeout";
        /// <summary>
        /// The BrowseName for the X component.
        /// </summary>
        public const string X = "X";
        /// <summary>
        /// The BrowseName for the Y component.
        /// </summary>
        public const string Y = "Y";
        /// <summary>
        /// The BrowseName for the YearOfConstruction component.
        /// </summary>
        public const string YearOfConstruction = "YearOfConstruction";
        /// <summary>
        /// The BrowseName for the Z component.
        /// </summary>
        public const string Z = "Z";
        /// <summary>
        /// The BrowseName for the http://opcfoundation.org/UA/DI/ component.
        /// </summary>
        public const string OPCUADINamespaceMetadata = "http://opcfoundation.org/UA/DI/";
        /// <summary>
        /// The BrowseName for the http://opcfoundation.org/UA/Glass/Flat/ component.
        /// </summary>
        public const string http___opcfoundation_org_UA_Glass_Flat_ = "http://opcfoundation.org/UA/Glass/Flat/";
        /// <summary>
        /// The BrowseName for the http://opcfoundation.org/UA/IA/ component.
        /// </summary>
        public const string http___opcfoundation_org_UA_IA_ = "http://opcfoundation.org/UA/IA/";
        /// <summary>
        /// The BrowseName for the http://opcfoundation.org/UA/Machinery/ component.
        /// </summary>
        public const string http___opcfoundation_org_UA_Machinery_ = "http://opcfoundation.org/UA/Machinery/";
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the Model.
    /// </summary>
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";

        /// <summary>
        /// The URI for the DI namespace.
        /// </summary>
        public const string DI = "http://opcfoundation.org/UA/DI/";

        /// <summary>
        /// The URI for the DIXsd namespace.
        /// </summary>
        public const string DIXsd = "http://opcfoundation.org/UA/DI/Types.xsd";

        /// <summary>
        /// The URI for the Machinery namespace.
        /// </summary>
        public const string Machinery = "http://opcfoundation.org/UA/Machinery/";

        /// <summary>
        /// The URI for the MachineryXsd namespace.
        /// </summary>
        public const string MachineryXsd = "http://opcfoundation.org/UA/Machinery/Types.xsd";

        /// <summary>
        /// The URI for the IA namespace.
        /// </summary>
        public const string IA = "http://opcfoundation.org/UA/IA/";

        /// <summary>
        /// The URI for the IAXsd namespace.
        /// </summary>
        public const string IAXsd = "http://opcfoundation.org/UA/IA/Types.xsd";

        /// <summary>
        /// The URI for the Glass namespace.
        /// </summary>
        public const string Glass = "http://opcfoundation.org/UA/Glass/Flat/";

        /// <summary>
        /// The URI for the GlassXsd namespace.
        /// </summary>
        public const string GlassXsd = "http://opcfoundation.org/UA/Glass/Flat/Types.xsd";
    }
    #endregion
}

